var searchIndex = new Map(JSON.parse('[\
["polars",{"t":"SQCCQCHCCCEECCCEHIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFFFIFKFFKFFFKFFINNNNNNNNNNMMNNNNNNNNNNNNNNNNNMNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNCNNNNNNNNNNNMMMMHNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFMNMONNNHNGPPPNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFFKFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCCPTTTTPTTFKFFGFKPTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPKKPFFPNNNMMMMMMNMCNNNNNNNMMNNNNNNNNNNNNNNOONNNNNNMMNNNNNNNMCMMCNNNNNNNNCMMCMMMMNNNNNNNNNNNMMOONNNNNOONNNMMMOOMNNNMNMMCMMMMMCMMNNMMMNNNNNNNNNNNNMNNNNNNNNNNNNNNNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFOOOOOOOOMMCHHHHHHHHHHPGPPRIKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPPIFPPIFPPPPIFPPPPIFPPPFFIPPFPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIKKKKRGFPIKPPPIPFPPPFPPPPPIFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNMNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHHNNNHNNNNNNNNNNNNNNNNNNNNNNNONNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNFFFKGPFPPPGHMHHCCGPPPPGFNNNNNHNNHNNNNNNNHNCCPPPPPPFPPPPPPGIGPPPPPPPPNNNNNNNCNNNNNNNNNNNNQNNNNNNNNNNNNNNNHNNNNNNHQQQQHHNNNNNNNNNNNNNNOOOOJJJPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHPPGPPPPPPIPGPPKFFPPPPPGFKPPKPPPRIKPKKFIGFFGKKPFKKPKKGPPJPPPPPFFPPPPIIPPKPIFPFKPPPPPPIFGFIPPFFPFPPPPFPPPFFGKFGFPPPFFKKKKKKKKKKKKKKFIKKKKKKKKKKKKFKKKKPGGPPPPPPPGPPPPPPPPPPPKGFFFFFPPPPPPJJFKKPPPGPPPPPPIKPFPPPFIPKFPPPPPPIFPKPPPPPPGPPPFPPPPPFIKFIFPPPPPPPPGPPGKFPPPPPPJJFFPIFIFIPIGPPPPPPPPPFPPPPPPPIFPPPPIFPPPPPPPKKKPRPGKPPPKPIPFFPGPFGGFFIPPPPFPPRRRPPPPSJPPPPIIIIIPPFPKGKKKPIPPIFPPPPIFPPPPIFPPPPIFPPPPIFPPGPKKKKKKPGFFFFFFFFPPKPPPKPPPRPPPPRPPFFGKFPGGPGFPFFFPPPGPIPIIPPPPPFKFFFPPPPPPIPPPPKPPPPPPFFKIPKFKKFFFKPGPFPPKPPPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPPPPPSPPPPKKPPPPPRPPPPPGPKPFGPPPPPPPPPPPFPPPPPPPGIFKKKPPIPFPPPPGFPPPRPRPFFRJGGFFFFFIPRIIIIIPKKGKKKKKIKKKRKPGFPPKGPGPPPPPPPGFKPKPPPPPGPPPPPPPPFPPFFFFKFPPPKIPPPPFRPFFFFPPIGPPPPKKFFPKKKKKKKKPPPPPPPPPPPPKFIPPPPPPFFFPPPFPGPKFPPPPPPPFPIIPGKKPFPPPPPPFPPPFFPPFPPPPPPPKPGKPFPPPPPPPIKPFGIPPPKPPPPPPPPPPRRPFPPPPPPIFPPPPIFPPPPIFPPPPIFKPPPFPGPPGPPFPPPPRRPPKKPPPFPFPPGGPPPPPRRPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNHNNNNNNNNNHNMNNNMNNNCNHNHNNONNNONNNHNMMNNMMMNNHNMMNNHMMHNMNNNMNNNMNNHNMNNHNOCNMNNMCNMMNNNNMNNNNNMNNNNMMNNMHNNNHNNNHONNNNNNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOOOMNHMMNNHMNNNNNMMMNCNNNNNONNHHHMNMMOCMMHNHNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOCNOOOONNHNNOHHNHNNNNNNNNNNNHNOONONNOONHNHNNHHHHNNNNNNNNHHNNNNNHHNNNONNNHNHHNHNHNHHNNONNOCOHCHOHHHHHNNNOMNONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNHOQOHNNNOOMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHCNMNOHHOHOONNNONNHHNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNMCNNNNNNNNNOONNNNNNNNNOOONNCNNNMMMNNNNNNMMMMNNNNNNNNNNNNNNNNMNNNNHNNNCNOCNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOOHNOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNMNNNNMNNONNNMMNNNNMNNCMNNNNMMOCNCNNNMNNNNNMNMNNNNNNMNNNMMNNNNNNNNMNNNNNNNHMHMNNNNONMNNHHNMNNMNOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHMNNOMONOONOHHNHNOONONNHOOMNNHHNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNONHHOCHNCHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMMNNMNNNHNHHNNNNNNNHNNNNHNNHNNNNNNNHMNHMNNNOHNNNNNNNNNNNMNNNNNNNNNNNNNNNONNNOOHNNNNMNNONNNMMMHMNNNNNNNNONHMNNNNNOONNOOONNNNNNNNNNNNNNNNNNNNNNMNNMNOOOOOOHHNNNNHNNNNNNNNNNHNNHNNNNNNNHHHNNNNNNNOOHNNNNNHNNNNNNMNNOONNHNOOOOMONMOHNNNNNNOOONNOOMNNOMOOCNNNNONNMNNMOONMNNOOOOONONNNNNMNOOOONNCMNNMNONNNNHHNMNNNMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNNHNNNNNOONNNNNNNNNNNNNNNHNMMHCNNOMNNOOOOONOOOOMNNONNNNNNNONNOOONMMNOONNOMNNOONNNQQQQNOOONNHONNNOOONNHNNNMNNNNNOOOONNNNNNNNNMMNNOOOOHNNMNMNMNNNHHNHNNNNNNHNNHOMMNNNNONMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNOOOOMNNOOOOOONNNNOMNNNNMMMNNNNNNNOOOOCONCMNNOMONNNOOOCMNNNNNNNNNNNNMMNNNNMNNNNNNMNNOONNNNOOOOCMNNNNNOOOMNMNNNNNCMNNNNNNMNNNMNNNNHNHNNONNONNNNNNMNNNNHNNNNNOOOONONCHNHNHNHNHNNNMNMNNNONHNNNNNNNNNNNNNMMMMMMMMNHNNOHOOONNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNOONNNNNMMMMNNNNNONNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMCMNNNNNNNNNNNNNNMMNOOCNONNNNNOMONMNNNNNNNMNONNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONOHNNOOONNNNNNMMNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMMMMMMMMMMMMMMMMMMNNNNNNNOCMOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOKKHHHHHHHHMMMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHKKNNNNNNNNNNNNNNNNMFNNNNNNNNNNNNNNNFKKKFKKKNNNNNONNMOMNMNNNNMMOMNMNNMNMNNMMNNNNNNNNNNNNNNNNNMNMCNNNNONNKPPPPPGKNNNNNMNNNNNNNNNNNNNNNCNNNNNNNNFRKKNNNNNNNNNHNNONMNNONNMNNNNNPPFGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNNNNNNNNNPPFGPPPOPGPPRIKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPPIFPPIFPPPPIFPPPPIFPPPFFIPPFPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIKKKKRGFPIKPPPIPFPPPFPPPPPIFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRMNNMMNHNMCNNNNHMOMNNNMNNNMMNMMNHHHOMMMNNMNNNNNMMMMMFFFKGPFPPPGHMHHCCGPPPPGFHHHHHHKKKMMMFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMMFNNNNNNNNNNNNNNNNNNOHHPPPPPPPPPPPPPPGPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNHHHGPPHHHHHHHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNHNNNNNNNNNPPPGHHKKMNNNNNNNNNNNNNNNNNNNKMMKHCCCMMHHHHHHHHKFFOOOOOOOOMMKFKMNNNNNNNNNNNNNNNNNHNNNNNNNHNHNNHNNNNNHNHNHNHNHNNNNNFOOOOOKKNNPKPKGRPFFIKNNNNNNNNCNNNNNCNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNNNMNNNMNNNNNNNCNNNNNNNNNMNNNNNNMMNNNNNMNNNNMNNNMNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNMNNNNMCNNNMNNNMNNNMNNNNNNMNNNNMNNNMNNNNNNNNNNNNNNNMNNMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNKKKRHMMNCMMNMMNMMNMMNKKMNMNPPGNNNNNNNNNNNNNNNNNNNNNNN","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add","add","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter","amortized_iter_with_name","amortized_iter_with_name","any","any_kleene","append","apply","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_amortized_generic","apply_amortized_same_type","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values","apply_values_generic","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arg_unique","arithmetic","as_array","as_binary","as_binary","as_list","as_ref","as_ref_dtype","as_string","as_string","binary_zip_and_apply_amortized","bitand","bitand","bitand","bitor","bitor","bitor","bitxor","bitxor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","effective_metadata","equal","equal","equal","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","explode_and_offsets","explode_and_offsets","extend","fill_null_with_values","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","filter","filter","first_non_null","float","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each","for_each_amortized","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_iterator_par","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_like","full_null_with_dtype","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples_perfect","gt","gt","gt","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","head","init","init","init_rand","inner_dtype","inner_dtype","into","into","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_no_null_iter","into_series","into_series","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","max","max","max_reduce","max_reduce","max_reduce","max_reduce","mean","mean","median","median","median","median_reduce","median_reduce","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","min_reduce","min_reduce","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_chunks","n_unique","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_compute_len","new_with_dims","none_to_nan","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","object","offsets","offsets","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_signed","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","reinterpret_unsigned","rem","rem","rem","rem","remainder","rename","reverse","reverse","reverse","reverse","reverse","reverse","reverse","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","scatter","scatter","scatter_single","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","scatter_with","set","set","set","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shrink_to_fit","slice","slice","sort","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","sort_with","split_at","split_at","std","std_reduce","std_reduce","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_amortized_generic","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unique","unique","unique","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_option","append_option","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_value","append_value","append_value","append_value","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","fixed_size_list","from","from","from","from","from","from","from","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","init","init","init","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","into","into","into","into","list","new","new","new","new","new","new","new","new","new","new","new","new_with_values_type","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","StructIter","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","from","from","from","from","init","init","init","init","into","into","into","into","into_iter","into_iter","into_iter","into_iter","new","new","next","next","next","next","next_back","next_back","next_back","par","size_hint","size_hint","size_hint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","Keep","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","experimental_enabled","extend","extend","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_flags","get_flags","get_max_value","get_min_value","get_sorted_flag","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value","max_value","max_value_opt","merge","min_value","min_value","min_value","min_value_opt","not","not","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","__clone_box","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone","clone","clone_into","clone_into","clone_into","default","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","descending","descending","drop","drop","drop","eq","eq","eq","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","fmt","fmt","from","from","from","from","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","hash","hash","init","init","init","into","into","into","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","maintain_order","max","mean","median","min","min_max","multithreaded","multithreaded","n_unique","new","new","new_from_index","not_equal","not_equal_missing","nulls_last","nulls_last","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unique","var","vzip","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_apply_fields","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","append","append","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_borrowed","as_date_iter","as_datetime_iter","as_ref","as_ref","as_ref_dtype","as_slice","as_time_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","build_local","call_categorical_merge_operation","cast","cast","cast_leaf","cast_time_unit","cast_time_unit","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","chunks","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","days","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","divide","drain_iter_and_finish","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","field","field_by_name","fields","fields_mut","find","finish","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_owned","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","full_null","full_null","get","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_categories","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_optional","get_rev_map","get_shape","get_str","get_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","hour","hours","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_iter","into_scalar","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_empty","is_empty","is_enum","is_enum","is_float","is_float","is_global","is_integer","is_integer","is_known","is_list","is_local","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter","iter_str","last","leaf_dtype","len","len","len","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","name","name","name","name","nanosecond","nanoseconds","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_logical","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null_count","null_count","parse_from_str_slice","parse_from_str_slice","partial_cmp","partial_cmp","physical","precision","rechunk","ref_field","register_value","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","remainder","rename","round","round","rows_encode","same_src","scale","second","seconds","set_name","set_time_unit","set_time_unit","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","strftime","strftime","strftime","strict_cast","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","subtract","time_unit","time_unit","time_zone","to_arrow","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","tot_eq","total_null_count","truncate","truncate","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unnest","update","uses_lexical_ordering","value","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_validity_typed","zero","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","constants","context","context_trace","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","feature_gated","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_warning_function","init","init","init","into","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks","iter_chunks_physical","lazy","len","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","n_chunks","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice","slice_par","sort","sort_in_place","split_at","split_at","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Date","Datetime","Duration","Float32","Float32","Float64","Float64","Int16","Int16","Int32","Int32","Int64","Int64","Int8","Int8","Null","Null","Row","String","String","Struct","Time","UInt16","UInt16","UInt32","UInt32","UInt64","UInt64","UInt8","UInt8","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","Abs","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","Any","Any","Any","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","Backward","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","Binary","Binary","Binary","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","BinaryExpr","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","Boolean","Boolean","Boolean","Boolean","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","Both","Bounds","BoundsIter","Brotli","BrotliLevel","C","Cache","Cast","CastTimeUnit","CatIter","Categorical","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","ColumnNotFound","Columns","Columns","Combine","CommentPrefix","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","Count","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","DataPoint","DataType","Date","Date","Date","Date","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","Datetime","Datetime","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeType","Day","Decimal","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","Duration","Duration","Duration","Duration","Duration","DurationArgs","DurationChunked","DurationMethods","DurationType","DynArgs","DynamicGroupOptions","Earliest","EndsWith","Enum","Enum","Eq","EqValidity","Err","Exclude","Excluded","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","Field","FieldRef","FieldsMapper","FieldsNameMapper","FileMetaData","FileMetaDataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","Filter","Find","First","First","First","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float","Float16","Float32","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","Forward","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","HashMap","Head","HexEncode","Higher","Hour","IDX_DTYPE","INTEGER_RE","IO","IR","Idx","Idx","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","Implode","InProcessQuery","IndexColumn","IndexOfSchema","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8","Int8Chunked","Int8Type","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLastDistinct","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsoYear","Item","Join","Join","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","Last","Last","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","Left","Left","Left","Left","Left","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","Linear","List","List","List","List","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","Literal","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","Max","Max","Max","MaxBound","MaxHorizontal","Mean","Mean","Mean","MeanHorizontal","Median","Median","MeltArgs","Microsecond","Microsecond","Microseconds","Midpoint","Millennium","Millisecond","Millisecond","Milliseconds","Min","Min","Min","Min","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","Multiply","NULL","NUnique","NUnique","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","Nanosecond","Nanoseconds","Native","Nearest","Nearest","Nearest","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","None","None","None","None","None","Not","NotEq","NotEqValidity","Nth","Null","Null","Null","Null","Null","Null","Null","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptState","Or","Ordinal","OrdinalDay","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","PathIterator","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","Plus","PolarsArray","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","PrimitiveChunkedBuilder","Quantile","Quantile","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","Raise","Raise","Random","Random","Range","Range","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","RevMapping","Reverse","Reverse","Right","Right","Right","Right","Right","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Round","Round","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SQLInterface","SQLSyntax","Saturday","Scalar","Scalar","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaFieldNotFound","SchemaMismatch","SchemaRef","SearchSortedSide","Second","Second","Select","Selector","SerReader","SerWriter","SerializeOptions","Series","Series","SeriesBinaryUdf","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SeriesUdf","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","Slice","Slice","Slice","Slice","SlicedArray","SlicedGroups","SmartString","Snappy","Some","Some","Sort","Sort","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","Std","Str","StrCat","String","String","String","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","Struct","Struct","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructNameSpace","StructOwned","SubPlan","Sum","Sum","SumHorizontal","Sunday","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","Time","Time","Time","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","UdfSchema","Uncompressed","Union","Union","UnionArgs","Unique","UniqueKeepStrategy","Unknown","Unknown","UnknownKind","UpperBound","Uppercase","UserDefinedFunction","Utf8","Utf8","Utf8View","ValueCounts","ValueIterT","ValueT","Var","Var","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","Window","WindowBound","WindowMapping","WindowType","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_finish_left_join","_full_join_from_series","_join_suffix_name","_left_join_from_series","_split_at_unchecked","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","abs","add","add","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","all","all_horizontal","allocator","allow_parallel","allow_parallel","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","append_null","append_opt_series","append_option","append_series","append_value","apply","apply","apply","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_min","arg_sort","arg_sort","arg_sort","arg_sort_by","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_where","args","args","arity","arr","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array","arrow_schema","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","as_ref","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","assume_init","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","batched","batched","batched","batched","batched_borrowed","binary","binary","binary_expr","bitand","bitor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","boxed","builder","cache","cache","cache","cache","call","call","call_categorical_merge_operation","call_udf","call_udf","call_unchecked","cancel","cast","cast","cast","cast","cast","cast","cast_all","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cat","cat","cause","cbrt","ceil","ceil","center","century","check_bound","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","clip","clip_max","clip_max","clip_min","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_inner","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","closed_window","cloud","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","cmp","cmp","coalesce","coalesce","coalesce","coalesce","coalesce_series","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","compare","compression","compression","compute_schema","concat","concat","concat_expr","concat_impl","concat_impl","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","contains","contains","contains","contains","contains_chunked","contains_chunked","contains_literal","convert_inner_type","convert_to_unsigned_index","count","count","count","count_matches","count_matches_many","count_rows","create_enum_data_type","create_left_df_chunked","create_writer","create_writer","created_by","cross_join","cross_join","cross_join_dfs","cum_count","cum_count","cum_fold_exprs","cum_max","cum_max","cum_min","cum_min","cum_prod","cum_prod","cum_reduce_exprs","cum_sum","cum_sum","cumulative_eval","data_pagesize_limit","data_type","data_type","data_type","datatypes","date_format","date_ranges","datetime","datetime","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","day","day","day","days","days","days","days_only","ddof","ddof","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default","default_arrays","default_join_ids","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","descending","descending","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","df","diagonal","diff","diff","diff","display","distinct_count","distinct_count","div","div","divide","dot","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_no_validate","drop_nulls","drop_nulls","drop_nulls","dst_offset","dt","dt","dtype","dtype","dtype","dtype_col","dtype_cols","dtype_overwrite","duration","eager","eager","empty","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_data_type","ensure_is_constant_duration","ensure_sorted_arg","eol_char","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","every","exact","exclude","exclude_dtype","execute","expand_paths","explain","explode","explode","explode","explode_and_offsets","expr","extend_constant","extension","extension","extract","extract","extract_all","extract_all_many","extract_groups","fast_explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","field","field","field_by_index","field_by_name","field_by_names","fields","fields","file_caching","file_caching","fill_nan","fill_nan","fill_null","fill_null","fill_null","fill_null_with_strategy","fill_null_with_values","filter","filter","filter","filter","filter","find","find_chunked","find_literal","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","finish_with_scan_ops","finishes_this_batch","first","first","first","first","fixed_size_list","flatten","float_precision","float_sorted_arg_max","float_type","floor","floor","floor_div","floor_div_series","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","fmt_str","fn_params","fn_params","fold_exprs","force_parallel","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","from_iter_trusted_length","from_iter_utf8_trusted_len","from_iter_values","from_par_iter","from_par_iter","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","from_trusted_len_iter_rev","from_type","from_vec","from_vec","from_zeroable_vec","full","full","full","full","full_join","full_join","full_null","full_null","fun","function_expr","function_with_options","gather","gather","gather_every","ge","get","get","get","get","get","get","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_at_index","get_at_index_mut","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","get_field","get_field","get_fields","get_fields_lens","get_full","get_metadata","get_metadata","get_mut","get_mut_unchecked","get_names","get_names","get_names","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_sequential_row_statistics","get_unchecked","get_unchecked","get_unchecked","glob","glob","glob","group_by","group_by_dynamic","group_by_dynamic","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","gt","gt","gt_eq","gt_eq","has_header","has_validity","has_validity","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash_join_inner","hash_join_outer","head","head","head","hex_decode","hex_encode","hive_options","hor_str_concat","hour","hour","hour","hour","hours","hours","how","how","id_vars","idx","ignore_errors","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","include_bom","include_boundaries","include_header","include_header","increment_strong_count","increment_strong_count_in","index_cols","index_column","index_column","index_of","index_of","index_of","indexes_to_usizes","infer_file_schema","infer_schema_len","infer_schema_len","infer_schema_length","infer_schema_length","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_array","inner_join","inner_join","inner_mut","input_fields","insert_at_index","int_range","int_ranges","interpol","interpolate","interpolate","interpolate","interpolate_by","interpolate_by","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_data","into_inner","into_inner","into_iter","into_iter","into_iter","into_iter","into_iter","into_list_name_space","into_list_name_space","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","into_series","into_thrift","into_vec","into_vec","into_vec","is_asof","is_between","is_between","is_cloud_url","is_compressed","is_constant_duration","is_empty","is_empty","is_empty","is_empty","is_finished","is_finite","is_first_distinct","is_first_distinct","is_first_distinct","is_full","is_full_days","is_in","is_in","is_infinite","is_last_distinct","is_last_distinct","is_last_distinct","is_leap_year","is_leap_year","is_leap_year","is_nan","is_not_nan","is_not_null","is_not_null","is_not_null","is_null","is_null","is_null","is_null","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","iso_year","iso_year","iter","iter","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","join","join","join","join","join_asof_by","join_builder","join_literal","join_many","join_nulls","join_nulls","json_encode","keep","key_value_metadata","key_value_metadata","label","last","last","last","last","last","lazy","lazy","le","left_by","left_join","left_join","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","len","len","len","len","len","len","limit","limit","limit_reached","line_terminator","list","lit","lit","lit","lit","lit","logical_and","logical_or","logical_plan","logical_plan","low_memory","low_memory","low_memory","low_memory","low_memory","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","lt","lt","lt_eq","lt_eq","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","maintain_order","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","max","max","max","max","max","max_reduce","max_reduce","max_value","max_value","mean","mean","mean","mean","mean","mean","median","median","median","median","median","median","median","median_reduce","median_reduce","melt","memory_map","memory_map","memory_mapped","merge","merge_dtypes","merge_from_ref","metadata","metadata","method","microsecond","microseconds","microseconds","millennium","milliseconds","milliseconds","min","min","min","min","min","min","min_max","min_periods","min_periods","min_periods","min_reduce","min_reduce","min_value","min_value","minute","minute","minute","minute","minutes","minutes","missing_is_null","mode","mode","month","month","month","month","months","months_only","mul","mul","mul","multiply","multithreaded","multithreaded","n_chunks","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","n_threads","n_threads","n_unique","n_unique","n_unique","n_unique","n_unique","name","name","name","name","name","name","nan_max","nan_min","nan_propagating_aggregate","nanosecond","nanosecond","nanosecond","nanoseconds","nanoseconds","nanoseconds","ne","needs_checks","neg","neg","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_cyclic","new_empty","new_from_index","new_from_index","new_from_str","new_in","new_inserting_at_index","new_int_range","new_multi","new_null","new_paths","new_paths","new_single","new_streaming","new_streaming","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","next","next_batches","next_batches","next_batches","nodes","nodes_owned","not","not","not_equal","not_equal_missing","nth","null","null","null","null","null_count","null_count","null_count","null_count","null_count","null_values","nulls_last","nulls_last","num_rows","num_rows","offset","offset","offset","offsets","on","optimize","options","or","ordinal","ordinal","ordinal_day","ordinal_year","otherwise","otherwise","output_schema","over","over_with_options","parallel","parallel","parallel","parse","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","parse_options","parsed_int","partial_cmp","partial_cmp","path","paths","paths","paths","period","period","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","predicate_pushdown","predicate_pushdown","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","projection_pushdown","projection_pushdown","provide","ptr_eq","quantile","quantile","quantile","quantile","quantile_reduce","quantile_reduce","quarter","quarter","quarter","queue","quote_char","quote_char","quote_style","raise_if_empty","rank","rank","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","rechunk","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","rem","remainder","remove","rename","rename","rename","rename_fields","repeat","repeat_by","repeat_by","replace","replace","replace","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_time_zone","reserve","reshape","resolve_homedir","return_type","reverse","reverse","reverse","reverse","reverse","reverse","right_by","right_on","rolling","rolling","rolling","rolling_map","rolling_map","rolling_map","rolling_map_float","rolling_max","rolling_max","rolling_max_by","rolling_max_by","rolling_mean","rolling_mean","rolling_mean_by","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min","rolling_min_by","rolling_min_by","rolling_quantile","rolling_quantile","rolling_quantile_by","rolling_quantile_by","rolling_std","rolling_std","rolling_std_by","rolling_std_by","rolling_sum","rolling_sum","rolling_sum_by","rolling_sum_by","rolling_var","rolling_var","rolling_var_by","rolling_var_by","round","round","round","round_ms","round_ns","round_sig_figs","round_sig_figs","round_us","row_estimate","row_estimate","row_group_size","row_groups","row_index","row_index","row_index","row_index","row_index","row_index","row_index","rows_left","rows_right","same_type","same_type","sample_frac","sample_n","sample_size","scan","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","scatter","scatter_single","scatter_with","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema","schema_descr","schema_inference","schema_overwrite","schema_with_arenas","search_sorted","second","second","second","second","seconds","seconds","seek","select","select_seq","separator","separator","serialize_options","series","set","set_cached_arena","set_dtype","set_dtype_at_index","set_low_memory","set_parallel","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_rechunk","set_sorted_flag","set_validity","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_remove","shift_remove_index","should_coalesce","shrink_dtype","shrink_to_fit","shrink_to_fit","shuffle","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_json","sink_parquet","skip_rows","skip_rows","skip_rows","skip_rows_after_header","slice","slice","slice","slice","slice","slice","slice","slice","slice_pushdown","slice_pushdown","slice_typed","slice_typed","slice_typed_unchecked","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","sort","sort","sort","sort","sort","sort","sort_by","sort_by_exprs","sort_with","sort_with","source","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","std","std","std","std","std","std_reduce","std_reduce","store","str","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","streamable","streaming","streaming","strftime","strict","strict_cast","strings","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","strong_count","struct_","sub","sub","subtract","suffix","suffix","suffix","suffix","suffix_fields","sum","sum","sum","sum","sum","sum","sum_reduce","sum_reduce","super_type","sync_update","tail","tail","tail","tail","take","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked","take_validity","ternary_expr","then","then","time_format","time_ranges","time_unit","time_unit","time_zone","timestamp","to_alp","to_alp","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","to_dummies","to_field","to_integer","to_list","to_lowercase","to_lowercase","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_supertype","to_supertypes","to_titlecase","to_uppercase","to_uppercase","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_ragged_lines","truncate_us","truncate_us","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_thrift","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","try_new","try_new","try_new","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","try_unwrap","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_name","udf","unique","unique","unique","unique","unique","unique","unique_stable","unique_stable","unique_stable","unique_stable","unnest","unwrap","unwrap_or_clone","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","use_statistics","use_statistics","utf8","validate","validation","validity","validity","value","value_counts","value_counts","value_name","value_unchecked","value_vars","values","values_iter","values_iter","var","var","var","var","var","var","var_reduce","var_reduce","variable_name","vec_hash","vec_hash_combine","version","view","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","week","week","week","weekday","weekday","weekday","weekday","weeks","weeks","weeks_only","weights","when","when","when","window_size","window_size","window_size","with","with_ambiguous","with_batch_size","with_batch_size","with_batch_size","with_cache","with_capacity","with_capacity","with_capacity","with_chunk_size","with_chunk_size","with_cloud_options","with_cluster_with_columns","with_coalesce","with_column","with_column","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns","with_columns_seq","with_comment_prefix","with_comment_prefix","with_compression","with_compression","with_compression","with_compression","with_compression","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","with_decimal_comma","with_dtype","with_dtype_overwrite","with_dtype_overwrite","with_encoding","with_encoding","with_eol_char","with_eol_char","with_extension","with_extension","with_fields","with_float_precision","with_fractional_seconds","with_glob","with_has_header","with_has_header","with_hive_partition_columns","with_hms","with_hms","with_hour","with_hours","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_infer_schema_length","with_json_format","with_json_format","with_line_terminator","with_low_memory","with_low_memory","with_metadata","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","with_missing_is_null","with_month","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_threads","with_n_threads","with_nanoseconds","with_new_streaming","with_null_value","with_null_values","with_null_values","with_optimizations","with_parse_options","with_path","with_path","with_paths","with_paths","with_paths","with_pl_flavor","with_pl_flavor","with_predicate","with_predicate","with_predicate_pushdown","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection","with_projection_pushdown","with_quote_char","with_quote_char","with_quote_char","with_quote_style","with_raise_if_empty","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_group_size","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_same_dtype","with_sample_size","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema","with_schema_modify","with_schema_overwrite","with_schema_overwrite","with_schema_overwrite","with_second","with_seconds","with_separator","with_separator","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows","with_skip_rows_after_header","with_skip_rows_after_header","with_slice_pushdown","with_statistics","with_streaming","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","with_truncate_ragged_lines","with_try_parse_dates","with_try_parse_dates","with_type_coercion","with_validity","with_validity","with_validity_typed","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_varint","write_vectored","xor","year","year","year","year","zip","zip_with","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","hive_parts","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","right_on","scan_type","schema","slice","sort_options","version","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","limit","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","include_nulls","groups","rolling","data_type","high","low","error","error","msg","msg","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","day","days","fn_params","hour","hour","hours","is_leap_year","is_leap_year","iso_year","iso_year","microseconds","milliseconds","min_periods","minute","minute","minutes","month","month","nanosecond","nanosecond","nanoseconds","ordinal","ordinal","parse_from_str_slice","parse_from_str_slice","parse_from_str_slice","quarter","quarter","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","second","seconds","string","week","week","weekday","weekday","window_size","year","year","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","parse_bytes","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_from_with_unit","try_from_with_unit","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","equivalent","equivalent","equivalent","fmt","from","from","from_str","from_untyped_config","hash","init","init","into","into","max_retries","options","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Http","max_retries","Any","AnyValue","Array","Array","Array","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date","Date32","Date64","DateChunked","DateType","Datetime","Datetime","DatetimeChunked","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","Duration","DurationChunked","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Struct","Struct","StructChunked","StructOwned","Time","Time","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_data_type","dtype","dtype","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","get_unchecked","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","new","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","with_capacity","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","Quarter","Random","Range","Rank","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","ignore_nulls","decimals","digits","has_max","has_min","limit","limit","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","ignore_nulls","ignore_nulls","inclusive","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","fmt","fmt","from","hash","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","slice_typed","slice_typed_unchecked","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","descending","maintain_order","maintain_order","multithreaded","multithreaded","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","strip_chars","strip_chars_end","strip_chars_end","strip_chars_start","strip_chars_start","strip_prefix","strip_prefix","strip_suffix","strip_suffix","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","Ascending","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","amortized_iter","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","as_ref","as_series","as_series","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","date","datetime","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","drop","drop","drop","drop_nulls","dtype","duration","eq","eq","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","fmt","fmt","fmt_list","from","from","from","from","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_sorted_flag","iter","iter_chunks","len","len","limit","list","lit","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_array","reshape_list","reverse","reverse","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","slice","sort","sort_with","split_at","split_at","std","std_reduce","str","str_value","strict_cast","struct_","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","time","to_arrow","to_dummies","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_mul_owned","try_set_metadata","try_sub_owned","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","add_to","checked","div","divide","divide","mul","multiply","multiply","rem","remainder","remainder","sub","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[824,"polars::chunked_array::arithmetic"],[852,"polars::chunked_array::builder"],[1109,"polars::chunked_array::builder::list"],[1126,"polars::chunked_array::cast"],[1154,"polars::chunked_array::collect"],[1168,"polars::chunked_array::float"],[1170,"polars::chunked_array::from_iterator_par"],[1174,"polars::chunked_array::iterator"],[1244,"polars::chunked_array::iterator::par"],[1246,"polars::chunked_array::metadata"],[1483,"polars::chunked_array::object"],[1558,"polars::chunked_array::object::builder"],[1581,"polars::chunked_array::object::registry"],[1609,"polars::chunked_array::ops"],[1811,"polars::chunked_array::ops::arity"],[1846,"polars::chunked_array::ops::float_sorted_arg_max"],[1848,"polars::chunked_array::ops::gather"],[1851,"polars::chunked_array::ops::search_sorted"],[1880,"polars::chunked_array::ops::sort"],[1887,"polars::chunked_array::ops::sort::arg_bottom_k"],[1888,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1895,"polars::chunked_array::ops::sort::options"],[1908,"polars::chunked_array::temporal"],[1916,"polars::chunked_array::temporal::conversion"],[1919,"polars::datatypes"],[3300,"polars::datatypes::categorical"],[3317,"polars::datatypes::categorical::revmap"],[3323,"polars::datatypes::categorical::string_cache"],[3342,"polars::docs"],[3344,"polars::error"],[3432,"polars::error::PolarsError"],[3436,"polars::error::constants"],[3439,"polars::frame"],[3699,"polars::frame::explode"],[3728,"polars::frame::group_by"],[3963,"polars::frame::group_by::GroupByMethod"],[3964,"polars::frame::group_by::GroupsProxy"],[3966,"polars::frame::group_by::aggregations"],[3979,"polars::frame::group_by::expr"],[3982,"polars::frame::row"],[4089,"polars::functions"],[4091,"polars::prelude"],[9119,"polars::prelude::AggExpr"],[9126,"polars::prelude::BooleanFunction"],[9129,"polars::prelude::DslPlan"],[9183,"polars::prelude::Expr"],[9218,"polars::prelude::FunctionExpr"],[9240,"polars::prelude::GroupByMethod"],[9241,"polars::prelude::GroupsProxy"],[9243,"polars::prelude::LiteralValue"],[9246,"polars::prelude::PolarsError"],[9250,"polars::prelude::StringFunction"],[9264,"polars::prelude::TemporalFunction"],[9266,"polars::prelude::aggregations"],[9279,"polars::prelude::arity"],[9314,"polars::prelude::array"],[9333,"polars::prelude::binary"],[9349,"polars::prelude::cat"],[9350,"polars::prelude::chunkedarray"],[9417,"polars::prelude::chunkedarray::string"],[9455,"polars::prelude::chunkedarray::string::infer"],[9485,"polars::prelude::cloud"],[9532,"polars::prelude::cloud::options"],[9540,"polars::prelude::datatypes"],[9810,"polars::prelude::datatypes::categorical"],[9827,"polars::prelude::datatypes::categorical::revmap"],[9833,"polars::prelude::datatypes::categorical::string_cache"],[9837,"polars::prelude::datetime"],[9840,"polars::prelude::default_arrays"],[9846,"polars::prelude::dt"],[9898,"polars::prelude::expr"],[9901,"polars::prelude::fixed_size_list"],[9921,"polars::prelude::float_sorted_arg_max"],[9923,"polars::prelude::function_expr"],[10086,"polars::prelude::function_expr::BooleanFunction"],[10089,"polars::prelude::function_expr::FunctionExpr"],[10111,"polars::prelude::function_expr::StringFunction"],[10125,"polars::prelude::function_expr::TemporalFunction"],[10127,"polars::prelude::function_expr::cat"],[10129,"polars::prelude::function_expr::pow"],[10133,"polars::prelude::function_expr::rolling"],[10162,"polars::prelude::function_expr::rolling_by"],[10191,"polars::prelude::gather"],[10194,"polars::prelude::interpolate"],[10198,"polars::prelude::interpolate_by"],[10199,"polars::prelude::mode"],[10200,"polars::prelude::nan_propagating_aggregate"],[10204,"polars::prelude::null"],[10234,"polars::prelude::schema_inference"],[10258,"polars::prelude::search_sorted"],[10264,"polars::prelude::series"],[10286,"polars::prelude::slice"],[10289,"polars::prelude::sort"],[10296,"polars::prelude::sort::arg_bottom_k"],[10297,"polars::prelude::sort::arg_sort_multiple"],[10304,"polars::prelude::sort::options"],[10317,"polars::prelude::strings"],[10371,"polars::prelude::udf"],[10377,"polars::prelude::utf8"],[10381,"polars::series"],[10794,"polars::series::amortized_iter"],[10817,"polars::series::arithmetic"],[10838,"polars::series::arithmetic::checked"],[10844,"polars::series::ops"],[10870,"dyn_clone::sealed"],[10871,"polars_core::datatypes"],[10872,"polars_core::chunked_array"],[10873,"num_traits"],[10874,"num_traits::cast"],[10875,"polars_core::series"],[10876,"polars_error"],[10877,"core::result"],[10878,"polars_core::series::arithmetic::borrowed"],[10879,"polars_core::frame::group_by::proxy"],[10880,"polars_core::chunked_array::object"],[10881,"core::option"],[10882,"polars_arrow::array"],[10883,"alloc::boxed"],[10884,"core::iter::traits::iterator"],[10885,"polars_core::chunked_array::list::iterator"],[10886,"core::ops::function"],[10887,"core::marker"],[10888,"alloc::borrow"],[10889,"polars_core::series::amortized_iter"],[10890,"polars_core::datatypes::dtype"],[10891,"alloc::string"],[10892,"polars_core::chunked_array::ops::sort::options"],[10893,"polars_core::chunked_array::cast"],[10894,"polars_core::series::arithmetic::borrowed::checked"],[10895,"core::slice::iter"],[10896,"core::iter::adapters::map"],[10897,"alloc::vec"],[10898,"polars_core::chunked_array::metadata"],[10899,"core::iter::traits::double_ended"],[10900,"polars_arrow::offset"],[10901,"core::fmt"],[10902,"core::iter::traits::collect"],[10903,"polars_utils::iter::fallible"],[10904,"polars_core::chunked_array::from_iterator"],[10905,"core::convert"],[10906,"core::borrow"],[10907,"polars_arrow::bitmap::immutable"],[10908,"rayon::iter"],[10909,"polars_arrow::pushable"],[10910,"polars_arrow::trusted_len"],[10911,"polars_core::datatypes::any_value"],[10912,"polars_core::chunked_array::logical"],[10913,"polars_core::datatypes::time_unit"],[10914,"core::iter::traits::exact_size"],[10915,"polars_core::series::series_trait"],[10916,"polars_core::chunked_array::iterator"],[10917,"alloc::sync"],[10918,"core::ops::range"],[10919,"polars_core::datatypes::field"],[10920,"polars_arrow::legacy::kernels::rolling::no_nulls"],[10921,"polars_core::chunked_array::ops::rolling_window"],[10922,"polars_ops::chunked_array::scatter"],[10923,"polars_utils::index"],[10924,"ahash::random_state"],[10925,"polars_utils::hashing"],[10926,"ndarray"],[10927,"ndarray::dimension::dim"],[10928,"ndarray::data_repr"],[10929,"either"],[10930,"core::any"],[10931,"polars_core::chunked_array::arithmetic::numeric"],[10932,"polars_core::chunked_array::builder::list::anonymous"],[10933,"polars_core::chunked_array::builder::list::boolean"],[10934,"polars_core::chunked_array::builder::list::primitive"],[10935,"polars_core::chunked_array::builder::list"],[10936,"polars_core::chunked_array::builder"],[10937,"polars_core::chunked_array::builder::list::binary"],[10938,"polars_core::chunked_array::builder::list::null"],[10939,"polars_core::chunked_array::builder::string"],[10940,"polars_arrow::array::binview"],[10941,"polars_core::chunked_array::builder::boolean"],[10942,"polars_core::chunked_array::builder::null"],[10943,"polars_core::chunked_array::builder::primitive"],[10944,"core::clone"],[10945,"polars_core::series::implementations::null"],[10946,"core::hash"],[10947,"polars_core::chunked_array::collect"],[10948,"polars_core::chunked_array::float"],[10949,"polars_core::chunked_array::from_iterator_par"],[10950,"polars_arrow::array::boolean"],[10951,"polars_arrow::array::fixed_size_list"],[10952,"polars_core::chunked_array::metadata::env"],[10953,"bitflags::iter"],[10954,"std::fs"],[10955,"std::sync::mutex"],[10956,"polars_arrow::datatypes"],[10957,"polars_arrow::bitmap::utils::iterator"],[10958,"polars_arrow::bitmap::utils::zip_validity"],[10959,"polars_core::chunked_array::object::builder"],[10960,"polars_core::chunked_array::object::registry"],[10961,"polars_core::chunked_array::ops"],[10962,"polars_arrow::legacy::array::slice"],[10963,"polars_core::chunked_array::ops::arity"],[10964,"polars_arrow::array::static_array"],[10965,"core::error"],[10966,"polars_arrow::array::primitive"],[10967,"polars_core::chunked_array::ops::search_sorted"],[10968,"polars_core::utils"],[10969,"polars_row::row"],[10970,"chrono::naive::datetime"],[10971,"chrono_tz::timezones"],[10972,"chrono::naive::time"],[10973,"polars_core::chunked_array::logical::struct_"],[10974,"polars_core::chunked_array::logical::categorical"],[10975,"polars_core::chunked_array::logical::categorical::builder"],[10976,"polars_arrow::array::static_array_collect"],[10977,"bytemuck::zeroable"],[10978,"polars_core::chunked_array::logical::categorical::revmap"],[10979,"polars_core::chunked_array::logical::categorical::merge"],[10980,"polars_arrow::datatypes::physical_type"],[10981,"polars_arrow::types"],[10982,"chrono::time_delta"],[10983,"chrono::naive::date"],[10984,"smartstring::config"],[10985,"smartstring"],[10986,"polars_core::datatypes::into_scalar"],[10987,"core::cmp"],[10988,"polars_core::frame"],[10989,"polars_core::chunked_array::logical::categorical::string_cache"],[10990,"polars_error::warning"],[10991,"planus::errors"],[10992,"regex::error"],[10993,"simdutf8::basic"],[10994,"polars_parquet::parquet::error"],[10995,"std::io::error"],[10996,"alloc::collections"],[10997,"polars_core::schema"],[10998,"polars_core::series::from"],[10999,"hashbrown::set"],[11000,"polars_arrow::datatypes::schema"],[11001,"polars_core::frame::row"],[11002,"polars_core::frame::group_by"],[11003,"polars_time::group_by::dynamic"],[11004,"polars_lazy::frame"],[11005,"polars_core::frame::explode"],[11006,"polars_core::chunked_array::ndarray"],[11007,"polars_arrow::array::struct_"],[11008,"polars_arrow::record_batch"],[11009,"polars_time::windows::duration"],[11010,"polars_utils::idx_vec"],[11011,"rayon::iter::plumbing"],[11012,"polars_plan::plans::aexpr"],[11013,"polars_core::frame::group_by::into_groups"],[11014,"core::iter::adapters::copied"],[11015,"core::iter::adapters::zip"],[11016,"polars_utils::float"],[11017,"polars_arrow::types::native"],[11018,"polars_core::frame::group_by::aggregations::agg_list"],[11019,"polars_core::frame::group_by::aggregations"],[11020,"polars_core::frame::group_by::expr"],[11021,"polars_core::frame::row::av_buffer"],[11022,"polars_utils::arena"],[11023,"polars_plan::plans::ir"],[11024,"polars_ops::frame::join::hash_join"],[11025,"polars_ops::frame::join::args"],[11026,"polars_ops::chunked_array::gather::chunked"],[11027,"polars_ops::frame"],[11028,"polars_io::csv::read::reader"],[11029,"polars_io::predicates"],[11030,"polars_io::mmap"],[11031,"polars_plan::dsl::expr"],[11032,"core::alloc"],[11033,"polars_plan::plans::anonymous_scan"],[11034,"polars_lazy::scan::anonymous_scan"],[11035,"polars_plan::dsl::expr_dyn_fn"],[11036,"polars_plan::plans::visitor"],[11037,"polars_plan::dsl::function_expr"],[11038,"polars_ops::series::ops::arg_min_max"],[11039,"polars_plan::dsl::array"],[11040,"polars_plan::dsl::list"],[11041,"polars_plan::dsl::function_expr::schema"],[11042,"polars_io::ipc::ipc_stream"],[11043,"std::io"],[11044,"polars_ops::chunked_array::binary"],[11045,"polars_time::chunkedarray::string"],[11046,"std::os::fd::owned"],[11047,"polars_ops::chunked_array::list"],[11048,"std::os::fd::raw"],[11049,"polars_ops::series::ops"],[11050,"polars_ops::chunked_array::strings"],[11051,"core::mem::maybe_uninit"],[11052,"polars_ops::chunked_array::strings::namespace"],[11053,"polars_io::csv::read::read_impl::batched"],[11054,"polars_io::csv::write::writer"],[11055,"polars_io::ipc::write"],[11056,"polars_io::parquet::read::reader"],[11057,"polars_io::parquet::read::read_impl"],[11058,"polars_io::parquet::write::writer"],[11059,"polars_io::parquet::write::batched_writer"],[11060,"polars_plan::dsl::binary"],[11061,"polars_plan::dsl::udf"],[11062,"polars_lazy::frame::exitable"],[11063,"hashbrown::map"],[11064,"polars_plan::dsl::cat"],[11065,"polars_ops::series::ops::round"],[11066,"polars_time::series"],[11067,"polars_lazy::scan::csv"],[11068,"polars_lazy::scan::ipc"],[11069,"polars_lazy::scan::ndjson"],[11070,"polars_lazy::scan::parquet"],[11071,"polars_time::chunkedarray::rolling_window"],[11072,"polars_time::windows::bounds"],[11073,"polars_time::windows::group_by"],[11074,"polars_time::windows::window"],[11075,"polars_io::csv::read::options"],[11076,"polars_io::csv::write::options"],[11077,"polars_io::ipc::ipc_file"],[11078,"polars_io::json"],[11079,"polars_io::parquet::read::options"],[11080,"polars_ops::frame::join::asof"],[11081,"polars_io::parquet::write::options"],[11082,"polars_ops::series::ops::interpolation::interpolate"],[11083,"polars_ops::series::ops::is_between"],[11084,"polars_ops::series::ops::rank"],[11085,"polars_plan::plans"],[11086,"polars_plan::dsl::arity"],[11087,"polars_plan::dsl::function_expr::boolean"],[11088,"polars_plan::dsl::function_expr::cat"],[11089,"polars_plan::dsl::function_expr::datetime"],[11090,"polars_plan::dsl::function_expr::pow"],[11091,"polars_plan::dsl::function_expr::strings"],[11092,"polars_plan::dsl::functions::temporal"],[11093,"polars_plan::dsl::options"],[11094,"polars_plan::frame::opt_state"],[11095,"polars_plan::plans::lit"],[11096,"polars_plan::plans::options"],[11097,"polars_parquet::arrow::write"],[11098,"polars_parquet::parquet::metadata::file_metadata"],[11099,"polars_arrow::legacy::kernels::rolling"],[11100,"polars_arrow::legacy::kernels::time"],[11101,"polars_lazy::scan::file_list_reader"],[11102,"polars_io::cloud::options"],[11103,"polars_parquet::parquet::metadata::column_order"],[11104,"polars_ops::chunked_array::binary::namespace"],[11105,"polars_io::ndjson::core"],[11106,"std::path"],[11107,"polars_io::shared"],[11108,"polars_ops::frame::join::cross_join"],[11109,"polars_lazy::dsl::eval"],[11110,"polars_time::chunkedarray::date"],[11111,"polars_time::chunkedarray::datetime"],[11112,"polars_time::chunkedarray::duration"],[11113,"core::ffi::c_str"],[11114,"core::default"],[11115,"polars_parquet::parquet::metadata::row_metadata"],[11116,"polars_core::series::ops"],[11117,"polars_plan::dsl::dt"],[11118,"polars_ops::series::ops::various"],[11119,"polars_arrow::scalar"],[11120,"polars_lazy::dsl::list"],[11121,"crossterm::command"],[11122,"polars_plan::dsl::struct_"],[11123,"polars_plan::plans::apply"],[11124,"polars_plan::dsl::function_expr::list"],[11125,"polars_plan::dsl::function_expr::binary"],[11126,"polars_plan::dsl::function_expr::range"],[11127,"polars_plan::dsl::function_expr::struct_"],[11128,"polars_plan::dsl::function_expr::array"],[11129,"polars_parquet::arrow::read::statistics"],[11130,"alloc::ffi::c_str"],[11131,"std::ffi::os_str"],[11132,"polars_arrow::array::growable::structure"],[11133,"polars_arrow::array::struct_::mutable"],[11134,"polars_arrow::legacy::array::default_arrays"],[11135,"polars_arrow::buffer::immutable"],[11136,"polars_arrow::array::list"],[11137,"polars_core::named_from"],[11138,"polars_ops::frame::join"],[11139,"polars_arrow::legacy::array"],[11140,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[11141,"polars_time::chunkedarray::time"],[11142,"core::num::nonzero"],[11143,"parquet_format_safe::parquet_format"],[11144,"polars_arrow::array::struct_::iterator"],[11145,"polars_ops::frame::join::asof::groups"],[11146,"polars_ops::chunked_array::list::namespace"],[11147,"polars_plan::dsl::name"],[11148,"polars_io::options"],[11149,"polars_core::chunked_array::ops::aggregate"],[11150,"polars_core::chunked_array::ops::aggregate::quantile"],[11151,"polars_arrow::legacy::index"],[11152,"polars_ops::chunked_array::strings::split"],[11153,"core::pin"],[11154,"core::io::borrowed_buf"],[11155,"parquet_format_safe::thrift::varint::decode"],[11156,"polars_time::chunkedarray::rolling_window::dispatch"],[11157,"polars_time::round"],[11158,"polars_parquet::parquet::metadata::schema_descriptor"],[11159,"polars_core::chunked_array::ops::aggregate::var"],[11160,"polars_plan::dsl::string"],[11161,"polars_ops::series::ops::to_dummies"],[11162,"polars_time::truncate"],[11163,"std::sync::rwlock"],[11164,"polars_io::csv::read::schema_inference"],[11165,"polars_time::upsample"],[11166,"polars_core::hashing::vector_hasher"],[11167,"alloc::collections::btree::map"],[11168,"polars_ops::chunked_array::array::namespace"],[11169,"polars_ops::chunked_array::array"],[11170,"polars_time::chunkedarray::string::patterns"],[11171,"polars_time::chunkedarray::string::infer"],[11172,"polars_arrow::legacy::array::fixed_size_list"],[11173,"polars_plan::dsl::function_expr::rolling"],[11174,"polars_plan::dsl::function_expr::rolling_by"],[11175,"polars_arrow::legacy::array::null"],[11176,"polars_arrow::bitmap::mutable"],[11177,"polars_arrow::array::utf8"],[11178,"polars_arrow::array::binary"],[11179,"polars_core::series::iterator"],[11180,"alloc::rc"],[11181,"polars_core"],[11182,"polars_core::chunked_array::iterator::par"],[11183,"polars_core::chunked_array::ops::float_sorted_arg_max"],[11184,"polars_core::chunked_array::ops::gather"],[11185,"polars_core::chunked_array::ops::sort"],[11186,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[11187,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[11188,"polars_core::chunked_array::temporal"],[11189,"polars_core::chunked_array::temporal::conversion"],[11190,"polars_core::chunked_array::temporal::time"],[11191,"polars_core::chunked_array::logical::date"],[11192,"polars_core::chunked_array::logical::datetime"],[11193,"polars_core::chunked_array::logical::decimal"],[11194,"polars_core::chunked_array::logical::duration"],[11195,"polars_core::datatypes::aliases"],[11196,"polars_utils::aliases"],[11197,"polars_core::chunked_array::logical::time"],[11198,"polars_error::constants"],[11199,"polars_core::functions"],[11200,"polars_io::utils"],[11201,"polars_io::parquet::metadata"],[11202,"polars_arrow::legacy::prelude"],[11203,"polars_ops::series::ops::rolling"],[11204,"polars_parquet::parquet::write"],[11205,"polars_ops::frame::join::general"],[11206,"polars_ops::series::ops::abs"],[11207,"polars_plan::dsl::functions::selectors"],[11208,"polars_plan::dsl::functions::horizontal"],[11209,"polars_plan::dsl::functions::arity"],[11210,"polars_plan::dsl"],[11211,"polars_plan::dsl::functions::range"],[11212,"polars_plan::dsl::functions::index"],[11213,"polars_ops::chunked_array"],[11214,"polars_plan::dsl::functions::coerce"],[11215,"polars_plan::dsl::functions::syntactic_sugar"],[11216,"polars_time::base_utc_offset"],[11217,"polars_time"],[11218,"polars_ops::series::ops::clip"],[11219,"polars_io"],[11220,"polars_ops::series::ops::horizontal"],[11221,"polars_lazy::dsl::functions"],[11222,"polars_plan::dsl::functions::concat"],[11223,"polars_ops::series::ops::index"],[11224,"polars_io::csv::read::parser"],[11225,"polars_ops::series::ops::cum_agg"],[11226,"polars_ops::series::ops::diff"],[11227,"polars_time::dst_offset"],[11228,"polars_ops::series::ops::floor_divide"],[11229,"polars_ops::chunked_array::strings::concat"],[11230,"polars_ops::chunked_array::datetime::replace_time_zone"],[11231,"polars_time::date_range"],[11232,"polars_ops::series::ops::interpolation"],[11233,"polars_ops::series::ops::interpolation::interpolate_by"],[11234,"polars_io::csv::read::utils"],[11235,"polars_ops::series::ops::is_first_distinct"],[11236,"polars_ops::series::ops::is_in"],[11237,"polars_ops::series::ops::is_last_distinct"],[11238,"polars_io::parquet::read::utils"],[11239,"polars_ops::series::ops::negate"],[11240,"polars_ops::series::ops::not"],[11241,"polars_ops::series::ops::int_range"],[11242,"polars_plan::dsl::functions::repeat"],[11243,"polars_ops::chunked_array::repeat_by"],[11244,"polars_ops::series::ops::replace"],[11245,"polars_io::csv::read"],[11246,"polars_ops::chunked_array::strings::strip"],[11247,"polars_time::chunkedarray"],[11248,"polars_io::cloud"],[11249,"polars_ops::chunked_array::mode"],[11250,"polars_ops::chunked_array::nan_propagating_aggregate"],[11251,"polars_arrow::legacy::array::utf8"]],"if":"``````{{}b}`````````{{}d}```````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{l{c}}{l{c}}}{}n}{{{l{A`}}{l{A`}}}}{{{l{Ab}}{l{Ab}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{f{{l{Ad}}}}{f{Af}}}}{{{f{{l{c}}}}e}{}n{AhAj}}{{{l{c}}e}{}n{AhAj}}{{{f{{l{A`}}}}{f{{l{A`}}}}}}{{{f{{l{Ab}}}}{f{{An{Al}}}}}}{{{l{Ad}}{l{Ad}}}}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{Ad}}}}{f{Bh}}}B`}{{{f{{l{j}}}}{f{Bh}}}B`}{{{f{{l{c}}}}{f{Bh}}}B`n}{{{f{{l{Bj}}}}{f{Bh}}}B`}{{{f{{l{Ab}}}}{f{Bh}}}B`}{{{f{{l{A`}}}}{f{Bh}}}B`}{{{f{{l{{Bl{c}}}}}}{f{Bh}}}B`Bn}{{{f{{l{A`}}}}}d}{{{f{{l{A`}}}}}{{C`{d}}}}{{{f{{l{j}}}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{Bj}}}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{j}}}}{f{Af}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}{{{f{{l{Bj}}}}{f{Af}}}{{Cj{{`{{Ch{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}}}}}54{{{f{Cl{l{c}}}}{f{{l{c}}}}}b{{Db{}{{Cn{D`}}}}}}{{{f{{l{A`}}}}c}{{l{A`}}}{{Df{{C`{d}}}{{Dd{{C`{d}}}}}}Dh}}{{{f{{l{Ab}}}}c}{{l{Ab}}}{{Df{{C`{{f{{An{Al}}}}}}}{{Dd{{C`{{Dj{{An{Al}}}}}}}}}}Dh}}{{{f{{l{j}}}}c}{{l{j}}}{{Df{{C`{B`}}}{{Dd{{C`{B`}}}}}}Dh}}{{{f{{l{Ad}}}}c}{{l{Ad}}}{{Df{{C`{{f{Af}}}}}{{Dd{{C`{{Dj{Af}}}}}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}n{{Df{C`}{{Dd{C`}}}}Dh}}{{{f{{l{{Bl{c}}}}}}e}{{l{{Bl{c}}}}}Bn{{Df{{C`{{f{c}}}}}{{Dd{{C`{c}}}}}}Dh}}{{{f{{l{j}}}}c}{{l{j}}}{{Dn{Dl}{{Dd{B`}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Dn{{C`{Dl}}}{{Dd{{C`{c}}}}}}Dh}Db}{{{f{{l{Bj}}}}e}{{l{g}}}{}{{Dn{{C`{Dl}}}{{Dd{{C`{c}}}}}}Dh}Db}{{{f{{l{Bj}}}}c}{{l{Bj}}}{{Dn{Dl}{{Dd{B`}}}}}}{{{f{{l{E`}}}}c}B`{{Df{{f{B`}}}{{Dd{B`}}}}}}{{{f{{l{Eb}}}}c}B`{{Df{{f{B`}}}{{Dd{B`}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{}{{Dn{C`}{{Dd{{C`{e}}}}}}}Db}{{{l{c}}e}{{l{c}}}n{{Df{}{{Dd{}}}}Dh}}{{{f{{l{Ad}}}}{f{Df}}}{{l{Ad}}}}{{{f{{l{A`}}}}{f{Df}}}{{l{A`}}}}{{{f{{l{Ab}}}}{f{Df}}}{{l{Ab}}}}{{{f{{l{c}}}}{f{Df}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Df}}}{{l{e}}}nDb}{{{f{{l{A`}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{Ad}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{Ab}}}}{f{Df}}}{{l{c}}}Db}{{{f{{l{Ab}}}}c}{{l{Ab}}}{{Dn{{f{{An{Al}}}}}{{Dd{{f{{An{Al}}}}}}}}}}{{{f{Cl{l{c}}}}e}bn{{Df{}{{Dd{}}}}Dh}}{{{f{{l{Ad}}}}c}{{l{Ad}}}{{Dn{{f{Af}}}{{Dd{{f{Af}}}}}}}}{{{f{{l{c}}}}Edg}{{l{i}}}Db{}{{Dn{}{{Dd{e}}}}}Db}{{{f{{l{Ad}}}}c}{{l{Ad}}}{{Dn{{f{Af}}{f{ClEf}}}}}}{{{f{{l{j}}}}{f{Df}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{Bj}}}}{f{Df}}}{{Bd{{l{Bj}}Bb}}}}{{{f{{l{c}}}}g{f{Cl{An{e}}}}}bn{}{{Df{C`{f{e}}}{{Dd{e}}}}}}{{{f{{l{A`}}}}e{f{Cl{An{c}}}}}b{}{{Df{{C`{d}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{Ab}}}}e{f{Cl{An{c}}}}}b{}{{Df{{C`{{f{{An{Al}}}}}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{j}}}}e{f{Cl{An{c}}}}}b{}{{Df{{C`{B`}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{Ad}}}}e{f{Cl{An{c}}}}}b{}{{Df{{C`{{f{Af}}}}{f{c}}}{{Dd{c}}}}}}{{{f{{l{{Bl{c}}}}}}g{f{Cl{An{e}}}}}bBn{}{{Df{{C`{{f{c}}}}{f{e}}}{{Dd{e}}}}}}{{{f{{l{{Bl{c}}}}}}e}{{l{{Bl{c}}}}}Bn{{Df{{f{c}}}{{Dd{c}}}}Dh}}{{{f{{l{Ab}}}}c}{{l{Ab}}}{{Df{{f{{An{Al}}}}}{{Dd{{Dj{{An{Al}}}}}}}}Dh}}{{{f{{l{A`}}}}c}{{l{A`}}}{{Df{d}{{Dd{d}}}}Dh}}{{{f{{l{j}}}}c}{{l{j}}}{{Df{B`}{{Dd{B`}}}}Dh}}{{{f{{l{c}}}}e}{{l{c}}}n{{Df{}{{Dd{}}}}Dh}}{{{f{{l{Ad}}}}c}{{l{Ad}}}{{Df{{f{Af}}}{{Dd{{Dj{Af}}}}}}Dh}}{{{f{{l{c}}}}g}{{l{i}}}Db{}{{Dn{}{{Dd{e}}}}}Db}{{{f{{l{Ab}}}}Eh}{{l{Ej}}}}{{{f{{l{c}}}}Eh}{{l{Ej}}}n}{{{f{{l{El}}}}Eh}{{l{Ej}}}}{{{f{{l{Ad}}}}Eh}{{l{Ej}}}}{{{f{{l{A`}}}}Eh}{{l{Ej}}}}{{{f{{l{c}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}n}{{{f{{l{A`}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{Ad}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{El}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{Ab}}}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{Ej}}Bb}}}n}{{{f{{l{Ab}}}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{{Bl{c}}}}}}}{{Bd{{l{Ej}}Bb}}}Bn}{{{f{{l{Ad}}}}}{{Bd{{l{Ej}}Bb}}}}{{{f{{l{A`}}}}}{{Bd{{l{Ej}}Bb}}}}`{{{f{{l{Bj}}}}}{{f{{l{Bj}}}}}}{{{f{{l{Ab}}}}}{{f{{l{Ab}}}}}}{{{f{{l{Ad}}}}}{{l{Ab}}}}{{{f{{l{j}}}}}{{f{{l{j}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Db}{{{f{{l{c}}}}}{{f{Ed}}}Db}{{{f{{l{Ad}}}}}{{f{{l{Ad}}}}}}0{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}DbDb{{Dn{{C`{Dl}}C`C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}}{{{l{A`}}{l{A`}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}F`}102012{{{f{c}}}{{f{e}}}{}{}}0{{{f{Clc}}}{{f{Cle}}}{}{}}0``{{{f{{l{c}}}}e}{{l{g}}}n{{Df{}{{Dd{}}}}Dh}n}{{{f{{l{A`}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{j}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Ab}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Ad}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{Ed}}}{{Bd{B`Bb}}}n}{{{f{{l{El}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{Bj}}}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}n}{{{f{{l{Bj}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{El}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{Ab}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{A`}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{j}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{Ad}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Fd}{{{f{{l{c}}}}e}{{Bd{B`Bb}}}FdAj}{{{f{{l{c}}}}}{{`{{Ch{}{{Cb{Ff}}}}}}}Db}{{{f{{l{c}}}}}{{Fl{{Fh{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{Ff}}}}}}}Db}{{{f{{l{c}}}}}{{f{{Fn{{Cf{Cd}}}}}}}Db}{{{f{Cl{l{c}}}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}Db}{{{f{{l{c}}}}}{{l{c}}}Db}0{{{f{c}}{f{Cle}}}b{}{}}`{{{f{Cl{l{c}}}}}b{Dbn}}`{{{f{{l{c}}}}}{{Bd{{f{An}}Bb}}}n}{{{f{Cl{l{c}}}}{f{{l{c}}}}G`}bDb}{{{f{Cl{l{c}}}}{f{{l{e}}}}G`}bDbDb}{{{f{{l{c}}}}}{{`{Gb}}}n}{{}{{l{c}}}Db}{Ff{{f{c}}}{}}0{Ff{{f{Clc}}}{}}0{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}{l{c}}}{}n}{{{l{c}}e}{}n{AhAj}}{{{f{{l{c}}}}e}{}n{AhAj}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{Cl{l{c}}}}}bDb}{Ffb}0{{{f{{l{c}}}}}{{l{c}}}Db}{{{f{{l{c}}}}}{{f{Ed}}}Db}{{{f{{l{c}}}}}{{f{{Gd{c}}}}}Db}{{{f{{l{Ab}}}}{f{{An{Al}}}}}{{l{A`}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{A`}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{A`}}}n}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{A`}}}}{{{f{{l{Ad}}}}{f{Af}}}{{l{A`}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{A`}}}}{{{f{{l{c}}}}e}{{l{A`}}}nAj}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{A`}}}}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{A`}}}}025173846{{{f{{l{Bj}}}}}{{Bd{{Gj{B`{Gh{Gf}}}}Bb}}}}{{{f{{l{j}}}}}{{Bd{{Gj{B`{Gh{Gf}}}}Bb}}}}{{{f{Cl{l{c}}}}{f{{l{c}}}}}bn}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}n}{{{f{{l{A`}}}}d}{{Bd{{l{A`}}Bb}}}}{{{f{{l{Ab}}}}{f{{An{Al}}}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{Ab}}}}{f{{l{A`}}}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{Ad}}}}{f{{l{A`}}}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{l{Bj}}}}{f{{l{A`}}}}}{{Bd{{l{Bj}}Bb}}}}{{{f{{l{j}}}}{f{{l{A`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{{l{El}}}}{f{{l{A`}}}}}{{Bd{{l{El}}Bb}}}}{{{f{{l{c}}}}{f{{l{A`}}}}}{{Bd{{l{c}}Bb}}}n}{{{f{{l{{Bl{c}}}}}}{f{{l{A`}}}}}{{Bd{{l{{Bl{c}}}}Bb}}}Bn}{{{f{{l{c}}}}}{{C`{Ff}}}Db}`{{{f{{l{{Bl{c}}}}}}{f{ClGl}}}{{Bd{bGn}}}Bn}{{{f{{l{Bj}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{Ab}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{A`}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{Ad}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{c}}}}{f{ClGl}}}{{Bd{bGn}}}n}{{{f{{l{j}}}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{l{c}}}}e}bDb{{Dn{C`}}}}{{{f{{l{Bj}}}}c}b{{Dn{{C`{Dl}}}}}}{{{f{{l{j}}}}c}b{{Dn{{C`{Dl}}}}}}{cc{}}{c{{l{e}}}Cd{{Db{}{{H`{c}}}}}}1{{{f{Af}}c}{{l{e}}}Hb{{Db{}{{H`{}}}}Db}}{{{f{{l{c}}}}e}{{l{c}}}{{Db{}{{H`{}}}}Db}Hb}{{{f{Af}}{Fn{{Cf{Cd}}}}}{{l{c}}}Db}{{{f{Af}}{Fn{{Cf{Cd}}}}Ed}{{l{c}}}Db}{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}{e{{l{{Bl{c}}}}}Bn{{Hb{}{{Cb{{C`{c}}}}}}}}{c{{l{e}}}{{Hb{}{{Cb{C`}}}}}n}{c{{l{A`}}}{{Hb{}{{Cb{{C`{d}}}}}}}}{e{{l{Ad}}}{{Hf{Af}}}{{Hb{}{{Cb{c}}}}}}{e{{l{Ad}}}{{Hh{Af}}}{{Hb{}{{Cb{{C`{c}}}}}}}}{c{{l{A`}}}{{Hb{}{{Cb{d}}}}}}{e{{l{Ab}}}{{Hf{{An{Al}}}}}{{Hb{}{{Cb{c}}}}}}{c{{l{j}}}{{Hb{}{{Cb{{C`{B`}}}}}}}}{c{{l{j}}}{{Hb{}{{Cb{{C`{{Cf{Cd}}}}}}}}}}{e{{l{j}}}{{Hj{B`}}}{{Hb{}{{Cb{c}}}}}}{c{{l{e}}}{{Hb{}{{Cb{{Gj{Fn{C`{Hl}}}}}}}}}n}{e{{l{Ab}}}{{Hh{{An{Al}}}}}{{Hb{}{{Cb{{C`{c}}}}}}}}{{{f{Af}}c}{{l{e}}}{{Ch{}{{Cb{C`}}}}}n}{{{f{Af}}e}{{l{Ab}}}{{Hh{{An{Al}}}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{Af}}c}{{l{A`}}}{{Ch{}{{Cb{{C`{d}}}}}}}}{{{f{Af}}e}{{l{Ad}}}{{Hh{Af}}}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{Af}}e}{{l{{Bl{c}}}}}Bn{{Ch{}{{Cb{{C`{c}}}}}}}}{e{{l{{Bl{c}}}}}Bn{{Hb{}{{Cb{{C`{c}}}}}}}}86;=<{c{{l{e}}}{{Hb{}{{Cb{C`}}}}}n};?{c{{l{A`}}}{{Hb{}{{Cb{{C`{d}}}}}}}}{e{{l{El}}}{{Hh{{An{Al}}}}}{{Hb{}{{Cb{{C`{c}}}}}}}}{e{{l{El}}}{{Hf{{An{Al}}}}}{{Hb{}{{Cb{c}}}}}}{{{f{Af}}e}{{l{Ad}}}{{Hh{Af}}}{{Ch{}{{Cb{c}}}}}}{{{f{Af}}c}{{l{e}}}{{Ch{}{{Cb{}}}}}n}{{{f{Af}}c}{{l{A`}}}{{Ch{}{{Cb{d}}}}}}{{{f{Af}}e}{{l{Ab}}}{{Hh{{An{Al}}}}}{{Ch{}{{Cb{c}}}}}}{{{f{Af}}e}{{l{{Bl{c}}}}}Bn{{Ch{}{{Cb{c}}}}}}`{c{{l{e}}}{{Hn{}{{Cb{C`}}}}}n}{e{{l{Ab}}}{{Hf{{An{Al}}}}I`IbId}{{Hn{}{{Cb{c}}}}}}{c{{l{A`}}}{{Hn{}{{Cb{d}}}}}}{c{{l{A`}}}{{Hn{}{{Cb{{C`{d}}}}}}}}{e{{l{Ad}}}{{Hf{Af}}I`IbId}{{Hn{}{{Cb{c}}}}}}{c{{l{j}}}{{Hn{}{{Cb{{C`{B`}}}}}}}}{e{{l{Ab}}}{{Hh{{An{Al}}}}I`Ib}{{Hn{}{{Cb{{C`{c}}}}}}}}{e{{l{Ad}}}{{Hh{Af}}I`Ib}{{Hn{}{{Cb{{C`{c}}}}}}}}{{c{f{Af}}Ed}{{l{j}}}{{Hn{}{{Cb{{C`{B`}}}}}}}}{{{f{Af}}{f{An}}}{{l{c}}}n}{{{f{Af}}{f{{An{c}}}}}{{l{Ab}}}{{Hh{{An{Al}}}}}}{{{f{Af}}{f{{An{d}}}}}{{l{A`}}}}{{{f{Af}}{f{{An{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{Af}}{f{{An{c}}}}}{{l{Ad}}}{{Hh{Af}}}}{{{f{Af}}{f{{An{{C`{d}}}}}}}{{l{A`}}}}{{{f{Af}}{f{{An{{C`{c}}}}}}}{{l{{Bl{c}}}}}Bn}{{{f{Af}}{f{{An{C`}}}}}{{l{c}}}n}{{{f{Af}}{f{{An{{C`{c}}}}}}}{{l{Ab}}}{{Hh{{An{Al}}}}}}{{{f{Af}}{f{{An{{C`{c}}}}}}}{{l{Ad}}}{{Hh{Af}}}}{c{{l{e}}}{{If{}{{Cb{C`}}}}}n}{c{{l{A`}}}{{If{}{{Cb{{C`{d}}}}}}}}{{{f{Af}}Fn}{{l{c}}}n}{{{f{Af}}Fn{C`{Hl}}}{{l{c}}}n}{{{f{Af}}{f{{An{Al}}}}Ff}{{l{Ab}}}}{{{f{Af}}{f{B`}}Ff}{{l{Bj}}}}{{{f{Af}}Ff}{{l{c}}}n}{{{f{Af}}{f{B`}}Ff}{{l{j}}}}{{{f{Af}}cFf}{{l{{Bl{c}}}}}Bn}{{{f{Af}}dFf}{{l{A`}}}}{{{f{Af}}{f{Af}}Ff}{{l{Ad}}}}{{{f{Af}}{f{{An{Al}}}}Ff}{{l{El}}}}{{{f{Af}}Ff}{{l{j}}}}{{{f{Af}}Ff}{{l{El}}}}{{{f{Af}}Ff}{{l{A`}}}}{{{f{Af}}Ff}{{l{Bj}}}}{{{f{Af}}Ff}{{l{Ad}}}}{{{f{Af}}Ff}{{l{{Bl{c}}}}}Bn};{{{f{Af}}Ff}{{l{Ab}}}}{{{f{{l{c}}}}Ff}{{l{c}}}Db}{{{f{Af}}Ff{f{Ed}}}{{l{j}}}}{{{f{Af}}Ff{f{Ed}}Ff}{{l{Bj}}}}{{{f{{l{c}}}}Ff}C`Db}{{{f{{l{{Bl{c}}}}}}Ff}{{Bd{IhBb}}}Bn}{{{f{{l{c}}}}Ff}{{Bd{IhBb}}}n}{{{f{{l{Bj}}}}Ff}{{Bd{IhBb}}}}{{{f{{l{Ab}}}}Ff}{{Bd{IhBb}}}}{{{f{{l{Ad}}}}Ff}{{Bd{IhBb}}}}{{{f{{l{A`}}}}Ff}{{Bd{IhBb}}}}{{{f{{l{j}}}}Ff}{{Bd{IhBb}}}}{{{f{{l{El}}}}Ff}{{Bd{IhBb}}}}{{{f{{l{A`}}}}Ff}Ih}{{{f{{l{Ab}}}}Ff}Ih}{{{f{{l{El}}}}Ff}Ih}{{{f{{l{Bj}}}}Ff}Ih}{{{f{{l{c}}}}Ff}Ihn}{{{f{{l{{Bl{c}}}}}}Ff}IhBn}{{{f{{l{Ad}}}}Ff}Ih}{{{f{{l{j}}}}Ff}Ih}{{{f{{l{j}}}}Ff}{{C`{B`}}}}{{{f{{l{Bj}}}}Ff}{{C`{B`}}}}{{{f{{l{c}}}}}{{C`{Ij}}}Db}{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}}IlDb}{{{f{{l{j}}}}}B`}{{{f{{l{Bj}}}}}B`}{{{f{{l{c}}}}}{{C`{f}}}Db}0{{{f{{l{{Bl{c}}}}}}Ff}{{C`{{f{In}}}}}Bn}0{{{f{{l{c}}}}Ff}C`Db}{{{f{{l{j}}}}}Ff}{{{f{{l{El}}}}}Ff}{{{f{{l{Bj}}}}}Ff}{{{f{{l{Ad}}}}}Ff}{{{f{{l{{Bl{c}}}}}}dd}{{Bd{BhBb}}}Bn}{{{f{{l{A`}}}}dd}{{Bd{BhBb}}}}{{{f{{l{j}}}}dd}{{Bd{BhBb}}}}{{{f{{l{Ab}}}}dd}{{Bd{BhBb}}}}{{{f{{l{El}}}}dd}{{Bd{BhBb}}}}{{{f{{l{c}}}}dd}{{Bd{BhBb}}}n}{{{f{{l{Ad}}}}dd}{{Bd{BhBb}}}}{{{f{{l{Bj}}}}dd}{{Bd{BhBb}}}}{{{f{{l{c}}}}FfdFf}BhF`}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{A`}}}}{{{f{{l{Ab}}}}{f{{An{Al}}}}}{{l{A`}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{A`}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{A`}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{A`}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{A`}}}}{{{f{{l{c}}}}e}{{l{A`}}}nAj}{{{f{{l{Ad}}}}{f{Af}}}{{l{A`}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{A`}}}n}481053627{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}{C`{Ff}}}{{l{c}}}Db}{{}Ff}0{{FfJ`{C`{Jb}}}{{l{c}}}n}{{{f{{l{Bj}}}}}{{f{Ed}}}}{{{f{{l{j}}}}}{{f{Ed}}}}{ce{}{}}0{{{l{Jd}}}{{Jh{JfJd}}}}{{{l{Jj}}Jl{C`{Ef}}}{{Jh{JnJj}}}}{{{l{K`}}{C`{Ff}}Ff}{{Bd{{Jh{KbK`}}Bb}}}}{{{l{K`}}{C`{Ff}}Ff}{{Jh{KbK`}}}}{{{l{Jj}}Jl}{{Jh{KdJj}}}}{{{f{{l{Ad}}}}}}{{{f{{l{El}}}}}}{{{f{{l{A`}}}}}}{{{f{{l{Ab}}}}}}{{{f{{l{{Bl{c}}}}}}}{}Bn}{{{f{{l{Bj}}}}}}{{{f{{l{j}}}}}}{{{f{{l{c}}}}}{}n}{{{f{{l{c}}}}}{{`{I`IbKfGbIf}}}n}{{{l{c}}}B`Db}{{{l{K`}}}B`}{{{l{Jj}}}{{Jh{KhJj}}}}{{{f{{l{c}}}}}dDb}{{{f{{l{c}}}}}{{l{A`}}}Kj}000{{{f{{l{c}}}}}{{l{A`}}}Db}02{{{f{{l{c}}}}}KlDb}{{{f{{l{c}}}}}{{`{Kn}}}Db}{{{f{{l{c}}}}}{{`{{Ch{}{{Cb{{l{c}}}}}}}}}Db}{{{f{{l{j}}}}}{{`{{Ch{}{{Cb{Gf}}}}}}}}{{{f{{l{c}}}}}{{Fl{{Fh{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{{C`{{f{Hl}}}}}}}}}}}Db}`{{{f{{l{c}}}}}C`Db}{{{f{{l{c}}}}}{{C`{Ff}}}Db}{{{f{{l{c}}}}}{{L`{c}}}Db}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{f{{l{c}}}}}{}n}{{{l{c}}}{}n}01{{{f{{l{c}}}}}FfDb}0{{{f{{l{c}}}}e}{{l{c}}}n{AhLb}}00{{{f{{l{c}}}}Ff}{{l{c}}}Db}{{{f{{l{Ad}}}}{f{Af}}}{{l{A`}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{A`}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{A`}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{A`}}}}{{{f{{l{c}}}}e}{{l{A`}}}nAj}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{A`}}}n}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{A`}}}}{{{f{{l{Ab}}}}{f{{An{Al}}}}}{{l{A`}}}}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{A`}}}}275316840{{{f{{l{A`}}}}}{{C`{d}}}}{{{f{{l{c}}}}}C`n}{{{f{{l{Ab}}}}}Ld}{{{f{{l{A`}}}}}Ld}{{{f{{l{c}}}}}Ldn}{{{f{{l{Ad}}}}}Ld}{{{f{{l{c}}}}}{{C`{Lf}}}n}{{{f{{l{A`}}}}}{{C`{Lf}}}}{{{f{{l{Eb}}}}}{{C`{Lf}}}}{{{f{{l{c}}}}}{{C`{Lf}}}F`}{{{f{{l{E`}}}}}{{C`{J`}}}}{{{f{{l{c}}}}}LdF`}{{{f{{l{Eb}}}}}Ld}{{{f{{l{E`}}}}}Ld}{{{f{Cl{l{c}}}}{Gd{c}}}bDb}`{{{f{{l{c}}}}}{{C`{{f{{Gd{c}}}}}}}Db}{{{f{{l{c}}}}}{{C`{{f{{Lh{{Gd{c}}}}}}}}}Db}{{{f{Cl{l{c}}}}}{{f{Cl{Lh{{Gd{c}}}}}}}Db}{{{f{{l{c}}}}}{{Lh{{Gd{c}}}}}Db}{{{f{{l{A`}}}}}{{C`{d}}}}{{{f{{l{c}}}}}C`n}{{{f{{l{c}}}}}{{C`{Gj}}}n}{{{f{{l{Ad}}}}}Ld}{{{f{{l{c}}}}}Ldn}{{{f{{l{A`}}}}}Ld}{{{f{{l{Ab}}}}}Ld}{{{f{Af}}{f{{An{Al}}}}FfFf}{{l{A`}}}}{{{f{Af}}{f{An}}}{{l{c}}}n}{{{l{c}}e}{}n{AhAj}}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}e}{}n{AhAj}}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{c}}}}}FfDb}{{{f{{l{Ab}}}}}{{Bd{FfBb}}}}{{{f{{l{Ad}}}}}{{Bd{FfBb}}}}{{{f{{l{c}}}}}{{Bd{FfBb}}}n}{{{f{{l{c}}}}}{{f{Af}}}Db}{{{f{Af}}c}{{l{Eb}}}{{Hh{{An{{C`{Lf}}}}}}}}{{{f{Af}}c}{{l{Lj}}}{{Hh{{An{Ll}}}}}}{{{f{Af}}c}{{l{A`}}}{{Hh{{An{d}}}}}}{{{f{Af}}c}{{l{Ln}}}{{Hh{{An{{C`{M`}}}}}}}}{{{f{Af}}c}{{l{Mb}}}{{Hh{{An{{C`{Md}}}}}}}}{{{f{Af}}e}{{l{{Bl{c}}}}}Bn{{Hh{{An{{C`{c}}}}}}}}{{{f{Af}}{Mf{Jb}}}{{l{Mh}}}}{{{f{Af}}c}{{l{Mb}}}{{Hh{{An{Md}}}}}}{{{f{Af}}c}{{l{Ad}}}{{Hh{{An{Ef}}}}}}{{{f{Af}}c}{{l{Ab}}}{{Hh{{An{{C`{{f{{An{Al}}}}}}}}}}}}{{{f{Af}}c}{{l{Lj}}}{{Hh{{An{{C`{Ll}}}}}}}}{{{f{Af}}c}{{l{Mj}}}{{Hh{{An{Al}}}}}}{{{f{Af}}c}{{l{Ej}}}{{Hh{{An{Ij}}}}}}{{{f{Af}}c}{{l{Ad}}}{{Hh{{An{{Dj{Af}}}}}}}}{{{f{Af}}c}{{l{Ad}}}{{Hh{{An{{C`{{Dj{Af}}}}}}}}}}{{{f{Af}}c}{{l{Ej}}}{{Hh{{An{{C`{Ij}}}}}}}}{{{f{Af}}c}{{l{Jd}}}{{Hh{{An{{C`{Ml}}}}}}}}{{{f{Af}}c}{{l{Mj}}}{{Hh{{An{{C`{Al}}}}}}}}{{{f{Af}}c}{{l{Mh}}}{{Hh{{An{Jb}}}}}}{{{f{Af}}c}{{l{Ln}}}{{Hh{{An{M`}}}}}}{{{f{Af}}c}{{l{Ad}}}{{Hh{{An{{f{Af}}}}}}}}{{{f{Af}}c}{{l{Ab}}}{{Hh{{An{{Fn{Al}}}}}}}}{{{f{Af}}c}{{l{Jj}}}{{Hh{{An{{C`{Gf}}}}}}}}{{{f{Af}}c}{{l{Mh}}}{{Hh{{An{{C`{Jb}}}}}}}}{{{f{Af}}c}{{l{Jj}}}{{Hh{{An{Gf}}}}}}{{{f{Af}}c}{{l{A`}}}{{Hh{{An{{C`{d}}}}}}}}{{{f{Af}}c}{{l{Ad}}}{{Hh{{An{{C`{{f{Af}}}}}}}}}}{{{f{Af}}c}{{l{Ad}}}{{Hh{{An{{C`{Ef}}}}}}}}{{{f{Af}}c}{{l{Ab}}}{{Hh{{An{{C`{{Dj{{An{Al}}}}}}}}}}}}{{{f{Af}}c}{{l{Ab}}}{{Hh{{An{{f{{An{Al}}}}}}}}}}{{{f{Af}}{f{{An{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{Af}}c}{{l{E`}}}{{Hh{{An{J`}}}}}}{{{f{Af}}c}{{l{Eb}}}{{Hh{{An{Lf}}}}}}{{{f{Af}}c}{{l{Ab}}}{{Hh{{An{{C`{{Fn{Al}}}}}}}}}}{{{f{Af}}c}{{l{E`}}}{{Hh{{An{{C`{J`}}}}}}}}{{{f{Af}}{Mf{Gf}}}{{l{Jj}}}}{{{f{Af}}c}{{l{Jd}}}{{Hh{{An{Ml}}}}}}{{{f{Af}}{Mf{Ml}}}{{l{Jd}}}}{{{f{Af}}c}{{l{Ab}}}{{Hh{{An{{Dj{{An{Al}}}}}}}}}}{{{f{Af}}{Mf{Ij}}}{{l{Ej}}}}{{{f{Af}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{Ad}}}}FfFf}{{l{Ad}}}}{{{f{{l{Bj}}}}FfFf}{{l{Bj}}}}{{{f{{l{A`}}}}FfFf}{{l{A`}}}}{{{f{{l{El}}}}FfFf}{{l{El}}}}{{{f{{l{j}}}}FfFf}{{l{j}}}}{{{f{{l{c}}}}FfFf}{{l{c}}}n}{{{f{{l{{Bl{c}}}}}}FfFf}{{l{{Bl{c}}}}}Bn}{{{f{{l{Ab}}}}FfFf}{{l{Ab}}}}{{{f{Af}}{Fn{c}}}{{l{{Bl{c}}}}}Bn}{{{f{Af}}{Fn{c}}Hl}{{l{{Bl{c}}}}}Bn}{{{f{Af}}Fn}{{l{c}}}n}{{{Lh{Mn}}{Fn{{Cf{Cd}}}}}{{l{c}}}Db}{{{Lh{Mn}}{Fn{{Cf{Cd}}}}IjIj}{{l{c}}}Db}{{{f{{l{c}}}}}{{l{c}}}Kj}{{{f{{l{A`}}}}}}{{{l{A`}}}}{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{A`}}}}{{{f{{l{Bj}}}}{f{{l{Bj}}}}}{{l{A`}}}}{{{f{{l{Ad}}}}{f{Af}}}{{l{A`}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{A`}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{A`}}}n}{{{f{{l{A`}}}}{f{{l{A`}}}}}{{l{A`}}}}{{{f{{l{Ab}}}}{f{{An{Al}}}}}{{l{A`}}}}{{{f{{l{Ab}}}}{f{{l{Ab}}}}}{{l{A`}}}}{{{f{{l{c}}}}e}{{l{A`}}}nAj}06152{{{f{{l{Bj}}}}{f{{l{Bj}}}}}}954{{{f{{l{c}}}}}FfDb}`{{{f{{l{Bj}}}}}{{Bd{{Gh{Gf}}Bb}}}}{{{f{{l{j}}}}}{{Bd{{Gh{Gf}}Bb}}}}`{{{f{{l{Ad}}}}}{{`{{N`{}{{Cb{{C`{{f{Af}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{N`{}{{Cb{{C`{B`}}}}}}}}}}{{{f{{l{Ad}}}}}{{`{Nb}}}}{{{f{Cl{l{j}}}}}{{`{Nb}}}}{{{f{{l{c}}}}}Ldn}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{Eb}}}}LfNd}{{Bd{{C`{Lf}}Bb}}}}{{{f{{l{E`}}}}LfNd}{{Bd{{C`{J`}}Bb}}}}{{{f{{l{c}}}}LfNd}{{Bd{{C`{Lf}}Bb}}}F`}{{{f{{l{Eb}}}}LfNd}{{Bd{LdBb}}}}{{{f{{l{c}}}}LfNd}{{Bd{LdBb}}}F`}{{{f{{l{E`}}}}LfNd}{{Bd{LdBb}}}}{{{f{Af}}FfLf}{{Bd{{l{A`}}Bb}}}}{{{f{Af}}FfLfLf}{{Bd{{l{c}}Bb}}}n}{{{f{Af}}Ff}{{l{c}}}n}{{{f{Af}}FfLfLf}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Db}{{{f{{l{c}}}}}{{f{Mn}}}Db}{{{f{{l{j}}}}}B`}{{{f{{l{E`}}}}}B`}{{{f{{l{Jj}}}}}B`}{{{f{{l{Jd}}}}}B`}{{{f{{l{Lj}}}}}B`}{{{f{{l{Mb}}}}}B`}{{{f{{l{Mj}}}}}B`}{{{f{{l{Eb}}}}}B`}{{{f{{l{Ln}}}}}B`}{{{f{{l{Mh}}}}}B`}{{{f{{l{Ej}}}}}B`}6023518497:{{{l{c}}e}{}n{AhAj}}{{{f{{l{c}}}}e}{}n{AhAj}}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{Cl{l{c}}}}{f{Af}}}bDb}{{{f{{l{j}}}}}{{l{j}}}}{{{f{{l{Ab}}}}}{{l{Ab}}}}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{El}}}}}{{l{El}}}}{{{f{{l{A`}}}}}{{l{A`}}}}{{{f{{l{Ad}}}}}{{l{Ad}}}}{{{f{{l{Bj}}}}}{{l{Bj}}}}{{{f{{l{{Bl{c}}}}}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{c}}}}{f{Df}}Nf}{{Bd{B`Bb}}}n}{{{f{{l{c}}}}Ffe}{{Bd{{l{c}}Bb}}}Kj{{Dn{{f{Cl{l{c}}}}}{{Dd{C`}}}}}}{{{f{{l{c}}}}Lfdd{C`{Jb}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{c}}}}Ffdd{C`{Jb}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{A`}}}}{f{{An{Ij}}}}c}{{Bd{B`Bb}}}{{Hb{}{{Cb{{C`{d}}}}}}}}{{{f{{l{Ad}}}}{f{{An{Ij}}}}c}{{Bd{B`Bb}}}{{Hb{}{{Cb{{C`{{f{Af}}}}}}}}}}{{{f{Cl{l{c}}}}{f{{An{Ij}}}}e}{{Bd{B`Bb}}}Nh{{Hb{}{{Cb{C`}}}}}}{{{f{{l{c}}}}eC`}{{Bd{{l{c}}Bb}}}n{{Hb{}{{Cb{Ij}}}}}}{{{f{{l{Ab}}}}c{C`{{f{{An{Al}}}}}}}{{Bd{{l{Ab}}Bb}}}{{Hb{}{{Cb{Ij}}}}}}{{{f{{l{A`}}}}c{C`{d}}}{{Bd{{l{A`}}Bb}}}{{Hb{}{{Cb{Ij}}}}}}{{{f{{l{Ad}}}}c{C`{{f{Af}}}}}{{Bd{{l{Ad}}Bb}}}{{Hb{}{{Cb{Ij}}}}}}{{{f{{l{A`}}}}ce}{{Bd{{l{A`}}Bb}}}{{Hb{}{{Cb{Ij}}}}}{{Df{{C`{d}}}{{Dd{{C`{d}}}}}}}}{{{f{{l{Ab}}}}ce}{{Bd{{l{Ab}}Bb}}}{{Hb{}{{Cb{Ij}}}}}{{Df{{C`{{f{{An{Al}}}}}}}{{Dd{{C`{{Fn{Al}}}}}}}}}}{{{f{{l{Ad}}}}ce}{{Bd{{l{Ad}}Bb}}}{{Hb{}{{Cb{Ij}}}}}{{Df{{C`{{f{Af}}}}}{{Dd{{C`{Ef}}}}}}}}{{{f{{l{c}}}}eg}{{Bd{{l{c}}Bb}}}n{{Hb{}{{Cb{Ij}}}}}{{Df{C`}{{Dd{C`}}}}}}{{{f{{l{Ad}}}}{f{{l{A`}}}}{C`{{f{Af}}}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{l{A`}}}}{f{{l{A`}}}}{C`{d}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{Ab}}}}{f{{l{A`}}}}{C`{{f{{An{Al}}}}}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{c}}}}{f{{l{A`}}}}C`}{{Bd{{l{c}}Bb}}}n}{{{f{Cl{l{j}}}}}b}{{{f{Cl{l{c}}}}d}bDb}{{{f{Cl{l{j}}}}Ed}b}{{{f{Cl{l{c}}}}Ij}bDb}{{{f{Cl{l{c}}}}Kl}bDb}{{{f{{l{A`}}}}Gf}{{l{A`}}}}{{{f{{l{Ab}}}}Gf}{{l{Ab}}}}{{{f{{l{Ad}}}}Gf}{{l{Ad}}}}{{{f{{l{{Bl{c}}}}}}Gf}{{l{{Bl{c}}}}}Bn}{{{f{{l{j}}}}Gf}{{l{j}}}}{{{f{{l{c}}}}Gf}{{l{c}}}n}{{{f{{l{Bj}}}}Gf}{{l{Bj}}}}{{{f{{l{El}}}}Gf}{{l{El}}}}{{{f{{l{Ad}}}}Gf{C`{{f{Af}}}}}{{l{Ad}}}}{{{f{{l{El}}}}Gf{C`{{f{{An{Al}}}}}}}{{l{El}}}}{{{f{{l{Ab}}}}Gf{C`{{f{{An{Al}}}}}}}{{l{Ab}}}}{{{f{{l{Bj}}}}Gf{C`{{f{B`}}}}}{{l{Bj}}}}{{{f{{l{{Bl{c}}}}}}Gf{C`{{Bl{c}}}}}{{l{{Bl{c}}}}}Bn}{{{f{{l{j}}}}Gf{C`{{f{B`}}}}}{{l{j}}}}{{{f{{l{c}}}}GfC`}{{l{c}}}n}{{{f{{l{A`}}}}Gf{C`{d}}}{{l{A`}}}}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}GfFf}{{l{c}}}Db}0{{{f{{l{Ad}}}}d}{{l{Ad}}}}{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{A`}}}}d}{{l{A`}}}}{{{f{{l{El}}}}d}{{l{El}}}}{{{f{{l{Ab}}}}d}{{l{Ab}}}}{{{f{{l{Ab}}}}Eh}{{l{Ab}}}}{{{f{{l{El}}}}Eh}{{l{El}}}}{{{f{{l{c}}}}Eh}{{l{c}}}n}{{{f{{l{Ad}}}}Eh}{{l{Ad}}}}{{{f{{l{A`}}}}Eh}{{l{A`}}}}{{{f{{l{c}}}}Gf}{{Gj{{l{c}}{l{c}}}}}Db}0{{{f{{l{c}}}}Al}{{C`{Lf}}}n}{{{f{{l{Eb}}}}Al}Ld}{{{f{{l{E`}}}}Al}Ld}{{{f{{l{c}}}}Al}LdF`}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}e}{}n{AhAj}}{{{f{{l{c}}}}e}{}n{AhAj}}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}Bf}{{{f{{l{c}}}}}C`n}{{{f{{l{A`}}}}}{{C`{Ij}}}}{{{f{{l{c}}}}}Ldn}{{{f{{l{A`}}}}}Ld}{{{f{{l{Ab}}}}}Ld}{{{f{{l{c}}}}{C`{Ff}}}{{l{c}}}Db}{{{f{{l{c}}}}{f{e}}}{{Bd{{l{c}}Bb}}}Db{{Hh{{An{Ij}}}}Nj}}{{{f{{l{c}}}}{f{{l{Ej}}}}}{{Bd{{l{c}}Bb}}}Db}{{{f{{l{c}}}}{f{{An{Nl}}}}Kl}{{l{c}}}Db}{{{f{{l{c}}}}{f{{An{Nl}}}}}{{l{c}}}Db}{{{f{{l{Ad}}}}{f{{l{Ej}}}}}{{l{Ad}}}}{{{f{{l{c}}}}{f{{l{Ej}}}}}{{l{c}}}{{Db{}{{Nn{D`}}}}Db}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Db{}{{Nn{D`}}}}Db}{{Hh{{An{Ij}}}}Nj}}{{{f{{l{Ab}}}}{f{{l{Ej}}}}}{{l{Ab}}}}{{{f{{l{Ab}}}}{f{c}}}{{l{Ab}}}{{Hh{{An{Ij}}}}Nj}}{{{f{{l{Ad}}}}{f{c}}}{{l{Ad}}}{{Hh{{An{Ij}}}}Nj}}`{{{f{{l{c}}}}dO`}{{Fn{{Fn{Ob}}}}}Db}{{{f{{l{c}}}}}{{l{c}}}Kj}{{{f{{l{Ad}}}}Ff}{{Bd{B`Bb}}}}{{{f{Cl{l{Bj}}}}Ed}b}{{{f{Cl{l{j}}}}Ed}b}{{{f{{l{c}}}}}{{Bd{{Oj{{Od{f}}{Oh{{Of{Ff}}}}}}Bb}}}n}{{{f{{l{j}}}}}{{Bd{{Oj{Ol{Oh{{Of{Ff}}}}}}Bb}}}}{{{f{c}}}e{}{}}{{{f{{l{Ab}}}}}{{l{Ad}}}}{{{f{{l{c}}}}}{{Fn{C`}}}n}{{{f{{l{c}}}}}{{On{Fn{Fn{C`}}}}}n}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}{{{l{c}}}{}n}{{{f{{l{c}}}}}{}n}01{{{f{{l{j}}}}c}{{Bd{{l{j}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{j}}}}e}{{Bd{{l{g}}Bb}}}{}{{Dn{{C`{Dl}}}{{Dd{{Bd{{C`{c}}Bb}}}}}}Dh}Db}{{{f{{l{Bj}}}}e}{{Bd{{l{g}}Bb}}}{}{{Dn{{C`{Dl}}}{{Dd{{Bd{{C`{c}}Bb}}}}}}Dh}Db}{{{f{{l{Bj}}}}c}{{Bd{{l{Bj}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{Bj}}}}c}{{Bd{{l{j}}Bb}}}{{Dn{Dl}{{Dd{{Bd{B`Bb}}}}}}}}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}Dh}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{c{{Bd{e}}}{}{}}0{{{f{Af}}g}{{Bd{{l{i}}e}}}Cd{}{{Hb{}{{Cb{{Bd{ce}}}}}}}{{Db{}{{H`{c}}}}Db}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Bd{{l{j}}Bb}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}}}{{{f{c}}}A@`{}}0{{{f{{l{Ad}}}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{l{{Bl{c}}}}}}}{{Bd{{l{{Bl{c}}}}Bb}}}Bn}{{{f{{l{A`}}}}}{{Bd{{l{A`}}Bb}}}}{{{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}n}{{{f{{l{Ab}}}}}{{Bd{{l{Ab}}Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{{f{{l{c}}}}Bb}}}Db}{{{f{Cl{l{c}}}}}bDb}{{{f{{l{c}}}}Ff}{}Db}{{{f{{l{c}}}}Al}{{C`{Lf}}}n}{{{f{{l{E`}}}}Al}Ld}{{{f{{l{c}}}}Al}LdF`}{{{f{{l{Eb}}}}Al}Ld}{{{f{{l{Eb}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ad}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ej}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Jj}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Jd}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{El}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Mh}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Lj}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{E`}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{{Bl{c}}}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}Bn}{{{f{{l{Ab}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{A`}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{K`}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Mj}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ln}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Mb}}}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Mb}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{{Bl{c}}}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}Bn}{{{f{{l{El}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ej}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ad}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ln}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{A`}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Ab}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{K`}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Mj}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{E`}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Lj}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Jj}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Eb}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Mh}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{{{f{{l{Jd}}}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}{ce{}{}}0{{{f{{l{Bj}}}}}Ff}{{{f{Af}}c}{{l{e}}}Cd{{Db{}{{H`{c}}}}Db}}{{{f{{l{e}}}}c}{{l{e}}}Cd{{Db{}{{H`{c}}}}Db}}{{{f{{l{c}}}}{Fn{{Cf{Cd}}}}}{{l{c}}}Db}{{{l{c}}{f{Af}}}{{l{c}}}Db}{{{f{{An{A@b}}}}e}c{}{{A@d{{f{{l{Ej}}}}}{{Dd{c}}}}}}{{{f{{l{c}}}}Kl}{{l{c}}}Db}{{{f{{l{c}}}}}{}n}{{{l{c}}}{}n}{{{l{c}}{l{c}}}{}n}{{{f{{l{c}}}}{f{{l{c}}}}}{}n}32012332012323103223102332013232{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{Bj}}}}{f{{l{c}}}}e}{{l{Bj}}}Db{{Dn{{C`{Dl}}C`}{{Dd{{C`{B`}}}}}}}}{{{f{{l{c}}}}{f{{l{A`}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}````{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}e{}{}{}}{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}g{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}g{}{}{}}{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}g{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}65654654650654654````````````````{{{f{c}}h}b{}}000{{{f{ClA@n}}{f{Cd}}}b}{{{f{ClA@n}}}b}{{{f{ClAA`}}}b}{{{f{ClAAb}}c}b{{Ch{}{{Cb{{C`{d}}}}}}If}}{{{f{Cl{AAd{c}}}}e}bn{{Ch{}{{Cb{C`}}}}If}}{{{f{Cl{AAd{c}}}}e}bn{{Ch{}{{Cb{}}}}If}}{{{f{ClAAf}}}b}{{{f{ClAAh}}}b}65{{{f{ClAAj}}}b}{{{f{ClAAl}}}b}{{{f{ClAAb}}}b}{{{f{ClAAn}}}b}{{{f{Cl{AAd{c}}}}}bn}{{{f{Cl{AB`{c}}}}}b{ABbNj}}{{{f{ClABd}}}b}{{{f{ClABf}}}b}{{{f{Cl{ABh{c}}}}}bn}{{{f{ClA@n}}{C`{{f{Cd}}}}}b}{{{f{ClA@n}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAf}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{Cl{AAd{c}}}}{C`{{f{An}}}}}bn}{{{f{Cl{AB`{c}}}}{C`{e}}}b{ABbNj}{{Hh{c}}}}{{{f{ClAAh}}{C`{c}}}b{}}{{{f{ClAAf}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClA@n}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAA`}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAj}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAl}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAb}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAn}}{f{B`}}}{{Bd{bBb}}}}{{{f{Cl{AAd{c}}}}{f{B`}}}{{Bd{bBb}}}n}{{{f{Cl{AAd{c}}}}{f{An}}}bn}{{{f{ClAAj}}c}b{{Ch{}{{Cb{{C`{{f{Af}}}}}}}}If}}{{{f{ClAAl}}c}b{{Ch{}{{Cb{{C`{{f{{An{Al}}}}}}}}}}If}}{{{f{ClAAh}}c}b{}}{{{f{Cl{AB`{c}}}}e}b{ABbNj}{{Hh{c}}}}{{{f{ClABd}}d}b}{{{f{Cl{ABh{c}}}}}bn}{{{f{ClAAj}}c}b{{Ch{}{{Cb{{f{Af}}}}}}}}{{{f{ClAAl}}c}b{{Ch{}{{Cb{{f{{An{Al}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}0000000000{{{f{Clc}}}{{f{Cle}}}{}{}}0000000000`{{{f{{AB`{c}}}}}{{AB`{c}}}{ABbNj}}{{{f{ABd}}}ABd}{{{f{ABf}}}ABf}{{{f{{ABh{c}}}}}{{ABh{c}}}{ABjn}}{{{f{c}}{f{Cle}}}b{}{}}000{{}A@n}{{}AA`}{Ff{{f{c}}}{}}0000000000{Ff{{f{Clc}}}{}}0000000000{Ffb}0000000000{{{f{AAj}}}d}{{{f{AAl}}}d}{{{f{AAb}}}d}{{{f{{AAd{c}}}}}dn}{{{f{AAf}}}d}{{{f{AAj}}}{{f{Mn}}}}{{{f{AAl}}}{{f{Mn}}}}{{{f{AAb}}}{{f{Mn}}}}{{{f{{AAd{c}}}}}{{f{Mn}}}n}{{{f{AAf}}}{{f{Mn}}}}{AAh{{l{c}}}Db}{{{f{ClA@n}}}{{l{j}}}}{{{f{ClAA`}}}{{l{j}}}}{{{f{ClAAn}}}{{l{j}}}}{{{f{ClAAf}}}{{l{j}}}}{{{AB`{{An{Al}}}}}{{l{Ab}}}}{{{AB`{Af}}}{{l{Ad}}}}{ABd{{l{A`}}}}{ABfABl}{{{ABh{c}}}{{l{c}}}n}`{cc{}}0000000000{{{f{Af}}e}ABn{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{{f{Af}}e}ABn{}{{Ch{}{{Cb{c}}}}}}{{{f{Af}}{f{{An{c}}}}}ABn{}}{{{f{Af}}{f{{An{{C`{c}}}}}}}ABn{}}{{{f{Ed}}FfFf{f{Af}}}{{Bd{{Cf{AAf}}Bb}}}}{{}Ff}0000000000{{{f{ClAAj}}}{{Cf{Cd}}}}{{{f{ClAAl}}}{{Cf{Cd}}}}{{{f{ClAAb}}}{{Cf{Cd}}}}{{{f{Cl{AAd{c}}}}}{{Cf{Cd}}}n}{{{f{ClAAf}}}{{Cf{Cd}}}}{ce{}{}}0000000000`{{{f{Af}}Ff{C`{Ed}}}A@n}{{{f{Af}}Ff{C`{Ed}}}AA`}{{{f{Af}}FfFf}AAj}{{{f{Af}}FfFf}AAl}{{{f{Af}}FfFf}AAb}{{{f{Af}}Ff}AAn}{{{f{Af}}FfFfEd}{{AAd{c}}}n}{{{f{Af}}Ff}{{AB`{c}}}{ABbNj}}{{{f{Af}}Ff}ABd}{{{f{Af}}Ff}ABf}{{{f{Af}}Ff}{{ABh{c}}}n}{{{f{Af}}FfFfEdEd}{{AAd{c}}}n}{{{f{ClAAh}}}b}{{{f{ClABd}}}b}{{{f{ClABf}}}b}{{{f{Cl{ABh{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{Bd{e}}}{}{}}000000000000000000000{{{f{c}}}A@`{}}0000000000{ce{}{}}0000000000````````{{{f{ClAAf}}}b}{{{f{ClAAf}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAf}}{f{B`}}}{{Bd{bBb}}}}`{{{f{AAf}}}d}{{{f{AAf}}}{{f{Mn}}}}{{{f{ClAAf}}}{{l{j}}}}{{{f{Ed}}FfFf{f{Af}}}{{Bd{{Cf{AAf}}Bb}}}}{{{f{ClAAf}}}{{Cf{Cd}}}}````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{Fb}}}Fb}{{{f{c}}{f{Cle}}}b{}{}}{{}Fb}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{Fb}}{f{Fb}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Fb}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{Fb}}{f{Clc}}}bAC`}{{}Ff}{ce{}{}}{{{f{Fb}}}d}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4``{{ACb{f{Af}}}{{l{c}}}Db}{{ACd{f{{l{c}}}}}{{l{c}}}Db}10{{ACd{f{Af}}Ed}{{l{c}}}Db}0{{ACb{f{Af}}}{{Bd{{l{c}}e}}}Db{}}{{ACd{f{{l{c}}}}}{{Bd{{l{c}}e}}}Db{}}10{{ACd{f{Af}}Ed}{{Bd{{l{c}}e}}}Db{}}0`{ACfACf}``{{ACh{f{Af}}Ed}e{}{{ACj{c}}}}{{e{f{Af}}Ed}ACj{}{{Hn{}{{Cb{c}}}}}}`````{{{f{c}}}{{f{e}}}{}{}}000{{{f{Clc}}}{{f{Cle}}}{}{}}000{Ff{{f{c}}}{}}000{Ff{{f{Clc}}}{}}000{Ffb}000{cc{}}000{{}Ff}000{ce{}{}}0000000{{{f{ACl}}}ACn}{{{f{AD`}}Ed}ADb}{{{f{ClACn}}}C`}{{{f{ClADb}}}C`}{{{f{ClADd}}}C`}{{{f{Cl{ADf{c}}}}}C`Ch}32{{{f{Cl{ADf{c}}}}}C`Gb}`{{{f{ACn}}}{{Gj{Ff{C`{Ff}}}}}}{{{f{ADb}}}{{Gj{Ff{C`{Ff}}}}}}{{{f{{ADf{c}}}}}{{Gj{Ff{C`{Ff}}}}}Ch}{c{{Bd{e}}}{}{}}0000000{{{f{c}}}A@`{}}000<<<<`````````````````````{{{f{c}}h}b{}}000{{}G`}{{}Il}{{G`G`}G`}{{IlIl}Il}{{{f{ClG`}}G`}b}{{{f{ClIl}}Il}b}3210{{{f{G`}}}Ij}0{{{f{Il}}}Al}05432{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Clc}}}{{f{Cle}}}{}{}}0000{{{f{{Gd{c}}}}}{{Gd{c}}}Db}{{{f{ADh}}}ADh}{{{f{G`}}}G`}{{{f{Il}}}Il}{{{f{c}}{f{Cle}}}b{}{}}000{{{f{ClADj}}}b}{G`G`}{IlIl}{{{f{G`}}G`}d}{{{f{Il}}Il}d}{{}{{Gd{c}}}Db}{{}G`}{{}Il}{Ff{{f{c}}}{}}0000{Ff{{f{Clc}}}{}}0000{{G`G`}G`}{{IlIl}Il}{{}d}{{{f{ADl}}}{{C`{Ij}}}}{{{Gd{c}}Ij}{{Gd{c}}}Db}{{{f{{Gd{c}}}}}{{C`{Ij}}}Db}{{{Gd{c}}{C`{Ij}}}{{Gd{c}}}Db}{Ffb}0000;:5{{{f{G`}}{f{G`}}}d}{{{f{Il}}{f{Il}}}d}7{{{f{ClG`}}c}b{{Hb{}{{Cb{G`}}}}}}{{{f{ClIl}}c}b{{Hb{}{{Cb{Il}}}}}}{{{Gd{c}}d}{{Gd{c}}}Db}{{{Gd{c}}{C`{d}}}{{Gd{c}}}Db}{{{f{{Gd{c}}}}G`}{{Gd{c}}}Db}{{{f{{Gd{c}}}}G`}{{Gd{e}}}DbDb}{{{Gd{c}}Il}{{Gd{c}}}Db}{{{Gd{c}}{C`{Il}}}{{Gd{c}}}Db}{{{f{{Gd{c}}}}{f{ClGl}}}{{Bd{bGn}}}Db}{{{f{ADh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{G`}}{f{ClGl}}}{{Bd{bGn}}}}0000{{{f{Il}}{f{ClGl}}}{{Bd{bGn}}}}0000{cc{}}0000{Ij{{C`{G`}}}}{Al{{C`{Il}}}}{IjG`}0{AlIl}010{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}0{cG`{{Hb{}{{Cb{G`}}}}}}{cIl{{Hb{}{{Cb{Il}}}}}}{{{f{Af}}}{{C`{G`}}}}{{{f{Af}}}{{C`{Il}}}}{{{f{{Gd{c}}}}}{{C`{Ij}}}Db}{{{f{{Gd{c}}}}}dDb}{{{f{Il}}}d}{{{f{ADl}}}Il}{{{f{{Gd{c}}}}}IlDb}0{{{f{{Gd{c}}}}}{{C`{f}}}Db}0{{{f{Il}}}Kl}{{}Ff}0000{{{f{ClG`}}G`}b}{{{f{ClIl}}Il}b}{{G`G`}G`}{{IlIl}Il}{{{f{G`}}G`}d}{{{f{Il}}Il}d}{ce{}{}}0000{G`}{Il}{{{f{G`}}}d}?{{{f{{Gd{c}}}}}dDb}1{{{f{Il}}}d}{{{f{{Gd{c}}}}}KlDb}22{{{f{G`}}}{{ADn{G`}}}}{{{f{Il}}}{{ADn{Il}}}}{{{f{G`}}}{{AE`{G`}}}}{{{f{Il}}}{{AE`{Il}}}}{{}d}{{}{{f{{AEd{AEb}}}}}}{{{f{ADl}}}{{C`{Ld}}}}{{{Gd{c}}}{{Gd{c}}}Db}{{{f{{Gd{c}}}}}{{C`{Ld}}}Db}{{{Gd{c}}C`}{{Gd{c}}}Db}{{{f{{Gd{c}}}}{Gd{c}}}{{AEf{c}}}Db}4321{G`G`}{IlIl}{{{f{ClG`}}G`}b}{{{f{ClIl}}Il}b}{{{f{ClG`}}G`d}b}{{{f{ClIl}}Ild}b}{{{f{Cl{Gd{c}}}}{C`{Ij}}}bDb}{{{f{Cl{Gd{c}}}}d}bDb}{{{f{ClIl}}d}b}{{{f{Cl{Gd{c}}}}Il}bDb}{{{f{Cl{Gd{c}}}}C`}bDb}033{{{f{Cl{Gd{c}}}}Kl}bDb}{{{f{ClIl}}Kl}b}{{{Gd{c}}Kl}{{Gd{c}}}Db}{{{Gd{c}}{C`{Kl}}}{{Gd{c}}}Db}{{G`G`}G`}{{IlIl}Il}>=10{{{f{c}}}e{}{}}000?>{c{{Bd{e}}}{}{}}000000000{{{f{c}}}A@`{}}000043{ce{}{}}0000{ADjADj}````{{{f{c}}h}b{}}{{{f{{AEh{c}}}}Ff}{{Gj{{AEh{c}}{AEh{c}}}}}Bn}{e{{AEh{c}}}Bn{{Hb{}{{Cb{{f{c}}}}}}}}{e{{AEh{c}}}Bn{{Hb{}{{Cb{{C`{{f{c}}}}}}}}}}{{AEje}g{}{{Hb{}{{Cb{c}}}}}{}}0{{{f{In}}}{{f{AEl}}}}{{{f{{AEh{c}}}}}{{f{AEl}}}Bn}{{{f{Cl{AEh{c}}}}}{{f{ClAEl}}}Bn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}`{{{f{{AEh{c}}}}Ff}dBn}{{{f{{AEh{c}}}}}{{AEh{c}}}{ABjBn}}{{{f{c}}{f{Cle}}}b{}{}}{{{f{{AEh{c}}}}}{{f{AEj}}}Bn}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{{f{In}}}}{f{{f{In}}}}}d}{{{f{In}}{f{In}}}d}{{{f{{AEh{c}}}}{f{ClGl}}}{{Bd{bGn}}}{AEnBn}}{cc{}}{{FfAEj}{{AEh{c}}}Bn}{{{f{{AEh{c}}}}Ff}{{C`{{f{c}}}}}Bn}{{}AEj}{{{f{Hl}}{f{{AEh{c}}}}{f{{AEh{c}}}}}{{AEh{c}}}Bn}{{AEj{f{Hl}}}{{AEh{c}}}Bn}{{{f{Hl}}{f{{AEh{c}}}}}{{AEh{c}}}Bn}0{{}Ff}{ce{}{}}{{{f{{AEh{c}}}}}{}Bn}{{{f{{AEh{c}}}}Ff}dBn}{{{f{c}}Ff}d{}}1{{{f{{AEh{c}}}}}{{AFb{{f{c}}{Fh{c}}AF`}}}Bn}{{{f{{AEh{c}}}}}{{AFb{AF`}}}Bn}{{{f{{AEh{c}}}}}FfBn}0`{{{f{Cl{AEh{c}}}}{C`{Hl}}}bBn}{{{f{Cl{AEh{c}}}}FfFf}bBn}{{{f{c}}FfFf}e{}{}}01{{{f{{AEh{c}}}}Ff}{{Gj{{Cf{Cd}}{Cf{Cd}}}}}Bn}0{{{f{In}}}{{Cf{In}}}}{{{f{{AEh{c}}}}}{{Cf{Cd}}}Bn}{{{f{c}}}e{}{}}{g{{Bd{{AEh{c}}e}}}Bn{}{{Hb{}{{Cb{{Bd{{C`{{f{c}}}}e}}}}}}}}{g{{Bd{{AEh{c}}e}}}Bn{}{{Hb{}{{Cb{{Bd{{f{c}}e}}}}}}}}{{AEjg}{{Bd{ie}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}{}}0{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}{{{f{In}}}{{f{Af}}}}{{}{{f{Af}}}}{{{f{{AEh{c}}}}}{{C`{{f{Hl}}}}}Bn}{{{f{{AEh{c}}}}Ff}{{f{c}}}Bn}0{{{f{{AEh{c}}}}Ff}{}Bn}{{{f{{AEh{c}}}}}{{f{{Lh{{Fn{c}}}}}}}Bn}{{{f{{AEh{c}}}}}{{Fh{c}}}Bn}{{{f{{AEh{c}}}}}{}Bn}{ce{}{}}{{{AEh{c}}{C`{Hl}}}{{AEh{c}}}Bn}{{{f{{AEh{c}}}}{C`{Hl}}}{{Cf{Cd}}}Bn}1`{{{f{Cl{AFd{c}}}}}bBn}0{{{f{Cl{AFd{c}}}}{C`{c}}}bBn}{{{f{Cl{AFd{c}}}}{f{AEl}}}bBn}{{{f{Cl{AFd{c}}}}c}bBn}{{{f{Cl{AFd{c}}}}{f{AEl}}}{{Bd{bBb}}}Bn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}{{AFd{c}}}Bn}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{AFd{c}}}{{l{{Bl{c}}}}}Bn}{cc{}}{{}Ff}{ce{}{}}{{{f{Af}}Ff}{{AFd{c}}}Bn}{{{f{Cl{AFd{c}}}}}B`Bn}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4````{{{f{ClAFf}}}b}{{{f{ClAFf}}{C`{{f{AEl}}}}}b}{{{f{ClAFf}}{f{AEl}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}`?>={{{f{AFh}}{f{ClGl}}}{{Bd{bGn}}}}<{{{f{Af}}Ff}{{Cf{AFf}}}}{{}{{Lh{Df}}}}{{}AEj}>={{}d}`{{{Cf{Df}}{Lh{Df}}AEj}b}{{{f{ClAFf}}}B`}==<{ce{}{}}``````````````````````````````````````````````{{{f{c}}h}b{}}00{{{f{{AFl{}{{AFj{c}}}}}}g}{{AFl{}{{AFj{c}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{c}}}}}}Dh}}{{{f{AFn}}{f{Df}}}AFn}{{{f{AFn}}{f{Df}}}{{l{c}}}Db}{{{f{{AFl{}{{AFj{c}}}}}}i{f{Cl{An{g}}}}}b{}{}{}{{Df{{C`{e}}{f{g}}}{{Dd{g}}}}}}{{{f{{AFl{}{{AFj{c}}}}}}g}{{AFl{}{{AFj{c}}}}}{}{}{{Df{e}{{Dd{c}}}}Dh}}{{{f{AG`}}Eh}{{l{Ej}}}}{{{f{AG`}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{AGb}}}{{Bd{{l{Ej}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{AGd}}{f{Ed}}}{{Bd{B`Bb}}}}0{{{f{AGd}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{Eh}}}Eh}{{{f{En}}}En}{{{f{AGf}}}AGf}{{{f{c}}{f{Cle}}}b{}{}}00{{}Eh}{{}En}{Ff{{f{c}}}{}}00{Ff{{f{Clc}}}{}}00``{Ffb}00{{{f{Eh}}{f{Eh}}}d}{{{f{En}}{f{En}}}d}{{{f{AGf}}{f{AGf}}}d}{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000{{{f{AGj}}}{{Bd{B`Bb}}}}{{{f{AGj}}}{{Bd{{Gj{B`{Gh{Gf}}}}Bb}}}}`{{{f{AGl}}c}{{Bd{AGlBb}}}{}}{{{f{AGn}}{f{{l{A`}}}}}{{Bd{{l{c}}Bb}}}Db}`{{{f{Eh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{En}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{AGf}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{En}}}Eh}{{{f{Eh}}}En}22`{{{f{Af}}cFf}AH`{}}{{{f{Af}}Ff}AHb}`{{{f{AHd}}Ff}{{Bd{IhBb}}}}{{{f{AHd}}Ff}Ih}??{{{f{Eh}}{f{Clc}}}bAC`}{{{f{En}}{f{Clc}}}bAC`}{{{f{AGf}}{f{Clc}}}bAC`}{{}Ff}00{ce{}{}}00{{{f{AHf}}}{{Bd{{l{A`}}Bb}}}}{{{f{AHh}}}{{Bd{{l{A`}}Bb}}}}{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}0``{{{f{AHj}}}{{C`{c}}}{}}{{{f{AHj}}}{{C`{Lf}}}}{{{f{AHl}}}{{C`{c}}}{}}2{{{f{AHj}}}{{C`{{Gj{cc}}}}}{}}``{{{f{AGb}}}{{Bd{FfBb}}}}{{}Eh}{{}En}{{{f{AHn}}FfFf}{{l{c}}}Db}88``{{{f{AGj}}}{{Bd{{Gh{Gf}}Bb}}}}{{{f{AHl}}LfNd}{{Bd{{C`{c}}Bb}}}{}}{{{f{AI`}}}B`}0{{{f{AIb}}}AIb}{{{f{AId}}{f{Df}}Nf}{{Bd{B`Bb}}}}{{{f{AIf}}c{C`{e}}}{{Bd{AIfBb}}}{{Hb{}{{Cb{Ij}}}}}{}}{{{f{AIf}}ci}{{Bd{AIfBb}}}{{Hb{}{{Cb{Ij}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{g}}}}}}}}`{{{f{AIf}}{f{{l{A`}}}}{C`{c}}}{{Bd{AIfBb}}}{}}{{{f{AIh}}Gf}{{l{c}}}Db}{{{f{AIj}}Gfc}{{l{e}}}{}Db}{{{f{AIl}}FfFf}AIl}0`{{{f{AG`}}d}{{l{c}}}Db}{{{f{AG`}}Eh}{{l{c}}}Db}{{{f{AIn}}Al}{{C`{Lf}}}}{{{f{AHj}}}{{C`{c}}}{}}{{{f{AJ`}}{f{c}}}{{Bd{AJ`Bb}}}Nj}{{{f{AJb}}{f{c}}}AJbNj}{{{f{AJd}}}{{Fn{{f{{An{Al}}}}}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}A@`{}}00{{{f{AGb}}}{{Bd{AGbBb}}}}8{ce{}{}}00{{Ehd}Eh}{{End}En}1010{{Enc}En{{Hb{}{{Cb{d}}}}}}210{EhEh}{EnEn}`{{{f{AJf}}{f{{l{A`}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DbDb{{Df{ff}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}Db}{{{l{c}}{l{e}}gik}{{l{m}}}DbDb{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DbDb{{AJh{C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}g}bDbDb{{Dn{C`C`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDb{}{{Dn{}{{Dd{g}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Af}}}{{l{k}}}DbDb{CdAJj}{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Af}}}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DbDbCd{{Dn{}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDb{}{}{{Dn{C`C`}{{Dd{{Bd{{C`{g}}i}}}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DbDbDb{{AJl{C`C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDbCdAJn{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{H`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Af}}}{{Bd{{l{m}}i}}}DbDbCdAJn{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DbDbAJn{{Dn{ff}{{Dd{{Bd{{Cf{Cd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DbDbDb{}{}{{Dn{C`C`C`}{{Dd{{Bd{{C`{i}}k}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{CdAJj}AJn{{Dn{f}{{Dd{{Bd{eg}}}}}}}{{Db{}{{H`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Db{{AK`{C`}}}Db}{{{f{{l{c}}}}e}{{l{g}}}DbAK`Db}{{{f{{l{c}}}}g}{{l{i}}}DbCd{{Dn{f}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}{{{l{c}}g}{{l{i}}}DbCd{{Dn{}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{CdAJj}{{Dn{f}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}0{{{f{{l{c}}}}}Ffn}0{{KlKl}Kl}{{{f{{l{Ej}}}}Ij}{{Bd{bBb}}}}{{{f{{AKb{Ij}}}}Ij}{{Bd{bBb}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAKdd}{{Fn{Ij}}}Db{{Ch{}{{Cb{C`}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{AKd}}}AKd}{{{f{c}}{f{Cle}}}b{}{}}{{}AKd}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{AKd}}{f{AKd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AKd}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{AKd}}{f{Clc}}}bAC`}{{}Ff}{ce{}{}}{{{f{{An{f}}}}cIje}{{Fn{Ij}}}{{Ch{}{{Cb{C`}}}}}{{Df{fFff}{{Dd{d}}}}}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4`{{Ff{f{Cl{Fn{d}}}}}b}```{{{f{AIl}}FfFf}AIl}0{{Ff{f{{An{B`}}}}{f{ClEn}}}{{Bd{{AKf{{l{Ej}}}}Bb}}}}{{{f{{An{B`}}}}{f{{An{d}}}}{f{{An{d}}}}}{{Bd{AKhBb}}}}{{{f{Af}}{f{{An{B`}}}}{f{{An{d}}}}{f{{An{d}}}}}{{Bd{{l{El}}Bb}}}}{{{f{Af}}{f{{An{B`}}}}}{{Bd{{l{El}}Bb}}}}{{{f{B`}}}{{Bd{{Cf{Cd}}Bb}}}}{{{f{{An{B`}}}}}{{Bd{AKhBb}}}}{{{f{{An{B`}}}}}{{Bd{{l{El}}Bb}}}}0```````````77`{AKjGf}00{{{f{Af}}}{{Bd{EfBb}}}}{{{f{Af}}}{{Bd{AKlBb}}}}{{{f{AKn}}}Gf}{{{f{Af}}}{{Bd{bBb}}}}444```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}000000000000000000000000000000000{{{f{AL`}}c}AL`{{Dn{{f{B`}}}{{Dd{B`}}}}}}{{{f{ALb}}}d}{{{f{Ih}}}{{`{{Ch{}{{Cb{Ih}}}}}}}}{{{f{Ih}}{f{Cl{Fn{Ih}}}}}b}{{ALbd}ALb}{{{f{{Jh{KbK`}}}}{f{{Jh{KbK`}}}}}}{{{f{Ih}}{f{Ih}}}Ih}{{{f{{l{Bj}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{l{Ad}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Ab}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{A`}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AL`}}{f{Bh}}}B`}{{{f{ClALd}}{C`{{f{Af}}}}}b}{{{f{ClALb}}{f{ALb}}}{{Bd{bBb}}}}{{{f{ClALd}}}b}{{{f{ClALd}}{f{Af}}}b}{{{f{ALb}}Eh}{{l{Ej}}}}{eALf{}{{Hb{}{{Cb{c}}}}}}0{{AEje}ALh{}{{Hb{}{{Cb{c}}}}}}0{{{f{Ld}}}Ih}{{{f{Ih}}}Ih}{{{f{{Jh{JfJd}}}}}{{`{If}}}}{{{f{{Jh{JnJj}}}}}{{`{If}}}}{{{f{Ed}}}{{f{Ed}}}}{{{f{Mn}}}{{f{Ed}}}}{{{f{ALj}}}{{f{Ed}}}}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}{{C`{{f{{An{c}}}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{{Jh{KhJj}}}}}{{`{If}}}}{{{f{c}}}{{f{e}}}{}{}}000000000000000000000000000000000000000000{{{f{Clc}}}{{f{Cle}}}{}{}}000000000000000000000000000000000000000000{Ed{{Cf{Ed}}}}{{{AMf{Af}}}AMh}{{{f{ALb}}{f{ALb}}c}{{Bd{ALbBb}}}AMj}{{{f{AMl}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{Ih}}{f{Ed}}}Ih}{{{f{Ed}}Ed}Ed}{{{f{{Jh{JnJj}}}}Jl}{{Jh{JnJj}}}}{{{f{{Jh{KdJj}}}}Jl}{{Jh{KdJj}}}}{{{f{AMl}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{KhJj}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{KbK`}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{JfJd}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{JnJj}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{{Jh{KdJj}}}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{ALb}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{AL`}}{f{Ed}}Fb}{{Bd{B`Bb}}}}`{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}00000000{{{f{{l{E`}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Eb}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{AL`}}}{{f{{Fn{{Cf{Cd}}}}}}}}{{{f{{Jh{ce}}}}}{{Jh{ce}}}DbDb}{{{f{AMn}}}AMn}{{{f{AMh}}}AMh}{{{f{ALb}}}ALb}{{{f{AL`}}}AL`}{{{f{Ld}}}Ld}{{{f{AN`}}}AN`}{{{f{Ih}}}Ih}{{{f{ANb}}}ANb}{{{f{Ed}}}Ed}{{{f{Mn}}}Mn}{{{f{Jl}}}Jl}{{{f{Mj}}}Mj}{{{f{Lj}}}Lj}{{{f{Ej}}}Ej}{{{f{Mh}}}Mh}{{{f{Mb}}}Mb}{{{f{Ln}}}Ln}{{{f{Jd}}}Jd}{{{f{Jj}}}Jj}{{{f{E`}}}E`}{{{f{Eb}}}Eb}{{{f{Jf}}}Jf}{{{f{Kh}}}Kh}{{{f{Ad}}}Ad}{{{f{Ab}}}Ab}{{{f{El}}}El}{{{f{A`}}}A`}{{{f{Kb}}}Kb}{{{f{Jn}}}Jn}{{{f{Kd}}}Kd}{{{f{ANd}}}ANd}{{{f{AEj}}}AEj}{{{f{ANf}}}ANf}{{{f{c}}{f{Cle}}}b{}{}}000000000000000000000000000000000{{{f{ClMn}}Ed}b}{ANhe{}{{ALf{c}}AJj}}0{{ANhAEj}e{}{{ALh{c}}AJj}}0{{{f{Ed}}}d}00{{{AMf{Af}}}Ed}{{{f{Mn}}}{{f{Ed}}}}{{{f{{Jh{KdJj}}}}}{{l{Jj}}}}{{}ANj}{{}AMn}{{}AMh}{{}Ih}{{}ANb}{{}Ed}{{}AEj}{Ff{{f{c}}}{}}00{{{f{{Jh{ce}}}}}fDbDb}1111111111111111111111111111111111111111{Ff{{f{Clc}}}{}}00{{{f{Cl{Jh{ce}}}}}{{f{Cl}}}DbDb}1111111111111111111111111111111111111111{{{f{{Jh{KbK`}}}}{f{{Jh{KbK`}}}}}}{{{f{{l{Bj}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{ALdc}ALb{{Hb{}{{Cb{{C`{{f{Af}}}}}}}}}}{Ffb}0000000000000{{{f{ClAL`}}}b}11111111111111111111111111111{{{f{AMl}}}{{f{Ed}}}}{{{f{{Jh{KdJj}}}}}{{f{Ed}}}}{{{f{{Jh{KbK`}}}}}{{f{Ed}}}}{{{f{{Jh{JnJj}}}}}{{f{Ed}}}}{{{f{{Jh{JfJd}}}}}{{f{Ed}}}}{{{f{{Jh{KhJj}}}}}{{f{Ed}}}}{{{f{ALb}}}{{f{Ed}}}}{{{f{AL`}}}{{f{Ed}}}}{{{f{Ld}}}{{f{Ed}}}}{{{f{Ih}}}Ed}`{{{f{AMn}}{f{AMn}}}d}{{{f{Ih}}{f{Ih}}}d}{{{f{ANb}}{f{ANb}}}d}{{{f{Ed}}{f{Ed}}}d}{{{f{Ed}}{f{AEj}}}d}{{{f{Mn}}{f{Mn}}}d}{{{f{Jl}}{f{Jl}}}d}{{{f{AEj}}{f{AEj}}}d}{{{f{ANf}}{f{ANf}}}d}{{{f{Ih}}{f{Ih}}d}d}{{{f{ALb}}{f{{l{Ad}}}}}}{{{f{ALb}}{f{Af}}}}{{{f{ALb}}{f{ALb}}}}{{{f{AL`}}{f{AL`}}}{{l{A`}}}}2310{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{{Jh{ce}}}}}MnDbDb}{{{f{AL`}}{f{Af}}}{{Bd{B`Bb}}}}{{{f{AL`}}}{{f{{An{B`}}}}}}{{{f{ClAL`}}}{{f{Cl{Fn{B`}}}}}}{{{f{AMh}}{f{Af}}}{{C`{Ij}}}}{{AMj{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}{ALdALb}{ANj{{Lh{AMh}}}}{{{f{AMn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{AMh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{AN`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Ih}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{ANb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Ed}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{Mn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Jl}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{AEj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{ANf}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}0{{{l{Jd}}}{{Jh{JfJd}}}}1{{{l{Jj}}}{{Jh{KhJj}}}}2222222222222{{{C`{c}}}Ih{{ANl{Ih}}}}{{{f{Af}}}Ih}{dIh}{{{f{{An{Al}}}}}Ih}6{cIhANn}7{{{f{AEj}}}Ed}8{IhEd}{{{f{Ih}}}Ed}{{{f{Ih}}}Mn};{{{f{AO`}}}Mn}{{{f{ANf}}}Jl}====================={AObAEj}>{AOdAEj}?{{{f{AEj}}d}Ed}{{{l{Ej}}{Lh{AMh}}dAMn}ALb}{{{f{Af}}cJl}{{Jh{KdJj}}}{{Hb{}{{Cb{AOf}}}}}}{{{f{Af}}cJl}{{Jh{KdJj}}}{{Hb{}{{Cb{{C`{AOf}}}}}}}}{{{l{Ej}}AMn}ALb}{{{f{Af}}c}{{Jh{JfJd}}}{{Hb{}{{Cb{AOh}}}}}}{{{f{Af}}c}{{Jh{JfJd}}}{{Hb{}{{Cb{{C`{AOh}}}}}}}}{{{f{Af}}cJl}{{Jh{JnJj}}}{{Hb{}{{Cb{AKj}}}}}}{{{f{Af}}cJl}{{Jh{JnJj}}}{{Hb{}{{Cb{{C`{AKj}}}}}}}}{{{f{Af}}c}{{Jh{KhJj}}}{{Hb{}{{Cb{AKn}}}}}}{{{f{Af}}c}{{Jh{KhJj}}}{{Hb{}{{Cb{{C`{AKn}}}}}}}}{{{AOl{AOj}}Ed}Mn}{{{f{{l{Ad}}}}{f{{AMf{Af}}}}AMn}{{Bd{ALbBb}}}}{{{Fn{c}}AEj}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{Fn{c}}AEj}{{AJj{}{{ALl{e}}{ALn{c}}{AM`{g}}}}}{AMb{AMd{e}}}ABj{{Gb{}{{Cb{e}}}}IfI`Ib}}{{FfcAEj}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{FfAEj}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{Af}}dFfAMn}ALb}{{{f{Af}}Ff}AL`}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}Ff}{{C`{c}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{AMh}}Ij}{{f{Af}}}}{{{f{{Jh{KbK`}}}}Ff}{{Bd{IhBb}}}}{{{f{{Jh{JnJj}}}}Ff}{{Bd{IhBb}}}}{{{f{{Jh{KhJj}}}}Ff}{{Bd{IhBb}}}}{{{f{{Jh{JfJd}}}}Ff}{{Bd{IhBb}}}}{{{f{{Jh{KdJj}}}}Ff}{{Bd{IhBb}}}}{{{f{AMl}}Ff}{{Bd{IhBb}}}}{{{f{ALb}}Ff}{{Bd{IhBb}}}}{{{f{AL`}}Ff}{{Bd{IhBb}}}}{{{f{{Jh{JnJj}}}}Ff}Ih}{{{f{{Jh{KbK`}}}}Ff}Ih}{{{f{{Jh{JfJd}}}}Ff}Ih}{{{f{{Jh{KdJj}}}}Ff}Ih}{{{f{{Jh{KhJj}}}}Ff}Ih}{{{f{AMl}}Ff}Ih}{{{f{ALb}}Ff}Ih}{{{f{AL`}}Ff}Ih}{{{f{AMh}}}{{f{{AMf{Af}}}}}}{{}Ed}000000000000000000000000{{{f{AMh}}Ij}{{C`{{f{Af}}}}}}{{{f{ALb}}}{{f{{Lh{AMh}}}}}}{{{f{Ed}}}{{C`{{Fn{Ff}}}}}}{{{f{Ih}}}{{C`{{f{Af}}}}}}{{{f{AOn}}Ff}Ih}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}Ff}{{C`{c}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{ALb}}{f{ALb}}}}{{{f{ALb}}{f{{l{Ad}}}}}}{{{f{ALb}}{f{Af}}}}{{{f{AL`}}{f{AL`}}}{{l{A`}}}}3210{{{f{Ih}}{f{Clc}}}bAC`}{{{f{ANb}}{f{Clc}}}bAC`}{{{f{Ed}}{f{Clc}}}bAC`}{{{f{Mn}}{f{Clc}}}bAC`}{{{f{Jl}}{f{Clc}}}bAC`}{{{f{AEj}}{f{Clc}}}bAC`}{{{f{ANf}}{f{Clc}}}bAC`}{{{f{Ih}}{f{Clc}}d}bAC`}{{{f{{Jh{KhJj}}}}}{{l{Mb}}}}{{{f{{Jh{KdJj}}}}}{{l{Jj}}}}{EdEd}{{}Ff}000000000000000000000000000000000000000000{{{f{Ed}}}{{C`{{f{Ed}}}}}}{{{f{AEj}}}{{C`{{f{AEj}}}}}}{ce{}{}}0000000000000000000000000000000000000000000{{{f{AL`}}}}{{B@`Ed}{{Bd{LdBb}}}}{{{Jh{KbK`}}}B`}{{{Jh{JnJj}}}B`}{{{Jh{KhJj}}}B`}{{{Jh{JfJd}}}B`}{{{Jh{KdJj}}}B`}{ALbB`}{AL`B`}{{Ld{f{Af}}}B`}{Ih{{Bd{IhBb}}}}{{{f{Ed}}}d}00{{{f{Ih}}}d}11{{{f{ALb}}}d}{{{f{AL`}}}d}1323{{{f{AMh}}}d}34440443434344443444434{{{f{AEj}}}d}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}{{AFb{cgAF`}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{AL`}}}ADd}{{{f{ALb}}}B@b}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}{{C`{c}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{Ed}}}{{f{Ed}}}}{{{f{AMh}}}Ff}{{{f{ALb}}}Ff}{{{f{AL`}}}Ff}{{{f{ALb}}{f{Af}}}}{{{f{ALb}}{f{ALb}}}}{{{f{ALb}}{f{{l{Ad}}}}}}{{{f{AL`}}{f{AL`}}}{{l{A`}}}}2130{{{f{ALb}}{f{ALb}}}{{Bd{{Gj{ALbALb}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gj{{l{j}}{l{j}}}}Bb}}}}{{{f{Ed}}{f{Ed}}}{{Bd{dBb}}}}{{{f{ANb}}}{{C`{Ed}}}}{{{f{ALb}}}Ld}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}{{{f{ClANj}}{f{{Lh{AMh}}}}}{{Bd{bBb}}}}{{{f{{Jh{KdJj}}}}}{{l{Jj}}}}03{{{f{{Jh{KhJj}}}}}{{l{Mb}}}}1{{{f{{Jh{KbK`}}}}{f{{Jh{KbK`}}}}}}{{{f{{l{Bj}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{ALb}}}{{Bd{FfBb}}}}{{{f{ALb}}}{{f{Af}}}}{{{f{AL`}}}{{f{{AOl{AOj}}}}}}{{{f{Mn}}}{{f{{AOl{AOj}}}}}}`{{{f{{Jh{KhJj}}}}}{{l{Jd}}}}9{{}c{}}0{{{f{Af}}FfAMn}ALd}{{{f{Af}}c}{{Jh{JnJj}}}{{Hh{{An{AKj}}}}}}{{{f{Af}}c}{{Jh{KhJj}}}{{Hh{{An{{C`{AKn}}}}}}}}{{{f{Af}}c}{{Jh{KhJj}}}{{Hh{{An{AKn}}}}}}{{{f{Af}}c}{{Jh{JfJd}}}{{Hh{{An{{C`{AOh}}}}}}}}{{{f{Af}}c}{{Jh{KdJj}}}{{Hh{{An{AOf}}}}}}{{{f{Af}}c}{{Jh{JnJj}}}{{Hh{{An{{C`{AKj}}}}}}}}{{{f{Af}}c}{{Jh{JfJd}}}{{Hh{{An{AOh}}}}}}{{{f{Af}}c}{{Jh{KdJj}}}{{Hh{{An{{C`{AOf}}}}}}}}{{{Lh{AMh}}}ANj}{{{f{Af}}{f{{An{B`}}}}}{{Bd{AL`Bb}}}}{{EdIh}Ld}{{{f{Af}}Ed}Mn}{{{l{c}}}{{Jh{ec}}}DbDb}{{{f{ClB@b}}}C`}{{{f{ALb}}{f{Af}}}}{{{f{ALb}}{f{ALb}}}}{{{f{ALb}}{f{{l{Ad}}}}}}{{{f{AL`}}{f{AL`}}}{{l{A`}}}}2310{{{f{ALb}}}Ff}{{{f{AL`}}}Ff}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}}{{Jh{KhJj}}}}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}}{{Jh{JfJd}}}}{{{f{Ih}}{f{Ih}}}{{C`{B@d}}}}{{{f{Jl}}{f{Jl}}}{{C`{B@d}}}}{{{f{ALb}}}{{f{{l{Ej}}}}}}{{{f{{Jh{KbK`}}}}}{{C`{Ff}}}}{{{f{ClAL`}}}b}{{{f{AL`}}}{{f{Mn}}}}{{{f{ClALd}}{f{Af}}}{{Gj{Ijd}}}}{{{f{{l{Bj}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{ClAL`}}{f{Af}}}b}{{{f{{Jh{JnJj}}}}{f{{l{Ad}}}}{C`{{f{AKl}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{{Jh{JfJd}}}}{f{{l{Ad}}}}{C`{{f{AKl}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{AL`}}}{{Bd{{l{El}}Bb}}}}{{{f{AMh}}{f{AMh}}}d}{{{f{{Jh{KbK`}}}}}Ff}{{{f{{Jh{KhJj}}}}}{{l{Mb}}}}{{{f{{Jh{KdJj}}}}}{{l{Jj}}}}{{{f{ClMn}}{AOl{AOj}}}b}{{{f{Cl{Jh{JnJj}}}}Jl}b}{{{f{Cl{Jh{KdJj}}}}Jl}b}{{{f{Cl{Jh{JnJj}}}}JlEf}{{Bd{bBb}}}}{{{f{Cl{Jh{JnJj}}}}Ef}{{Bd{bBb}}}}{{{f{B@b}}}{{Gj{Ff{C`{Ff}}}}}}{{{f{ALb}}d}ALb}{{{f{ALb}}Eh}ALb}{{{f{{Jh{KhJj}}}}{f{Af}}}{{l{Ad}}}}{{{f{{Jh{JfJd}}}}{f{Af}}}{{l{Ad}}}}{{{f{{Jh{JnJj}}}}{f{Af}}}{{Bd{{l{Ad}}Bb}}}}{{{f{Ih}}{f{Ed}}}{{C`{Ih}}}}{{{f{{Jh{KbK`}}}}{f{{Jh{KbK`}}}}}}{{{f{{l{Bj}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{c}}}}{f{B`}}}{{Bd{B`Bb}}}{}}0000000000{{{f{{Jh{KdJj}}}}}Jl}{{{f{{Jh{JnJj}}}}}Jl}{{{f{{Jh{JnJj}}}}}{{f{{C`{Ef}}}}}}{{{f{ALb}}dd}{{Cf{Cd}}}}{{{f{Ed}}d}AEj}{{{f{Mn}}d}AO`}{JlANf}{{{f{Ed}}{f{Af}}d}AO`}{Jl{{f{Af}}}}{{{f{ALb}}{f{{AMf{Af}}}}B@f}ALb}{{{f{ALb}}}{{Bd{ALbBb}}}}{{{f{ALb}}}ALb}{{{f{AEj}}}{{f{AEj}}}}{{{f{c}}}e{}{}}000000000000000000000000000000000{{{f{Ed}}}Ed}{{{f{AEj}}}B@h}{{{f{{Jh{JnJj}}}}{f{Af}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{Jh{JfJd}}}}{f{Af}}}{{l{Ad}}}}{{{f{{Jh{KhJj}}}}{f{Af}}}{{l{Ad}}}}{{{f{c}}}Ef{}}00{{{f{Ih}}{f{Ih}}}d}{{{f{AL`}}}Ff}{{{f{{Jh{JfJd}}}}{C`{{f{AKl}}}}{f{{l{Ad}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{{Jh{JnJj}}}}{C`{{f{AKl}}}}{f{{l{Ad}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{g{{Bd{ALfe}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{{AEjg}{{Bd{ALhe}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{ANh{{Bd{eg}}}{}{{ALf{c}}AJj}{}}0{{ANhAEj}{{Bd{eg}}}{}{{ALh{c}}AJj}{}}0{{{f{Ih}}}{{Bd{cBb}}}Lb}{c{{Bd{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{Ih}}{f{Ed}}}{{Bd{IhBb}}}}{{{f{Ed}}d}{{Bd{AEjBb}}}}{{{f{c}}}A@`{}}000000000000000000000000000000000000000000{{{f{AEj}}}AEj}{{{f{ALb}}}{{Bd{ALbBb}}}}{AL`B@j}{{{f{ClLd}}Ih}b}{{{f{ALb}}}d}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}Ff}cABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{Ld}}}{{f{Ih}}}}{{{f{ALb}}}{{Bd{B@jBb}}}}2{{{f{Ed}}Ih}d}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}gABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{ce{}{}}000000000000000000000000000000000000000000{Ffc{}}0{{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}{C`{Hl}}}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{Ed}}}Ih}```````````{{{f{ALb}}{f{ALb}}c}{{Bd{ALbBb}}}AMj}{{AMj{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}{{{f{ALb}}{f{ALb}}}{{Bd{{Gj{ALbALb}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gj{{l{j}}{l{j}}}}Bb}}}}`````````{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}B@l}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{{}b}{{{f{ClB@l}}}b}{Ffb}2{cc{}}6{{}Ff}{ce{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}{{}d}3``````````````````````````{{{f{B@n}}}{{f{Af}}}}>>>===`{{BbB@n}Bb}{BbBb}={{{f{B@n}}}f}>>===:::`{{{f{BA`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{B@n}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{Bb}}{f{ClGl}}}{{Bd{bGn}}}}0<{cB@n{{ANl{{Dj{Af}}}}}}={BAbBb}{BAdBb}{BAfBb}{BAhBb}{cc{}}{BAjBb}{BAlBb}{{}{{Fj{{f{Af}}BA`}{{Dd{b}}}}}}{{}Ff}00{ce{}{}}00{cBbAJn}````{{{Fj{{f{Af}}BA`}{{Dd{b}}}}}b}{cBbBAn}{{{f{c}}}Ef{}}0{c{{Bd{e}}}{}{}}00000{{{f{c}}}A@`{}}00666``````````````````{{{f{c}}h}b{}}00{{{f{ClB@j}}{Fn{B`}}{f{BB`}}}{{Bd{bBb}}}}{{{f{B@j}}{f{Df}}}{{Fn{B`}}}}0{{{f{B@j}}{f{{l{A`}}}}}{{Bd{B@jBb}}}}{{{f{B@j}}{f{{An{{AOl{AOj}}}}}}}{{Bd{B@jBb}}}}0{{{f{B@j}}GfFf}B@j}{{{f{ClB@j}}}{{f{ClB@j}}}}{{{f{ClB@j}}{f{Af}}e}{{Bd{{f{ClB@j}}Bb}}}BBb{{A@d{{f{B`}}}{{Dd{c}}}}}}{{{f{ClB@j}}Ffe}{{Bd{{f{ClB@j}}Bb}}}BBb{{A@d{{f{B`}}}{{Dd{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Clc}}}{{f{Cle}}}{}{}}0000{{{f{B@j}}}{{`{{Ch{}{{Cb{Ff}}}}}}}}{{{f{B@j}}}B@j}{{{f{BBd}}}BBd}{{{f{BBf}}}BBf}2{{{f{c}}{f{Cle}}}b{}{}}00{{{f{B@j}}{f{Af}}}{{Bd{{f{B`}}Bb}}}}{{{f{B@j}}e}{{Bd{{Fn{{f{B`}}}}Bb}}}{{Hh{Af}}}{{Hb{}{{Cb{c}}}}}}{{}BBf}{{}B@j}{Ff{{f{c}}}{}}0000{Ff{{f{Clc}}}{}}0000{Ffb}0000{{{f{B@j}}{f{Af}}}{{Bd{B@jBb}}}}{{{f{ClB@j}}{f{Af}}}{{Bd{B`Bb}}}}{{{f{B@j}}{f{{An{c}}}}}B@j{{Hh{Af}}}}{{{f{B@j}}{f{{BBh{{f{Af}}O`}}}}}B@j}{{{f{B@j}}{C`{{f{{An{c}}}}}}}{{Bd{B@jBb}}}{{Hh{Af}}}}{{{f{B@j}}}{{Fn{Ed}}}}9{{{f{BBf}}{f{BBf}}}d}{{{f{B@j}}{f{B@j}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{B@j}}}Ff}`{{{f{B@j}}e}{{Bd{B@jBb}}}{{Hh{Af}}}{{Hb{}{{Cb{c}}}}}}{{{f{B@j}}{Fn{B`}}}{{Bd{B@jBb}}}}{{{f{ClB@j}}{f{B@j}}}{{Bd{bBb}}}}{{{f{B@j}}}{{Fn{Mn}}}}{{{f{B@j}}AGf}{{Bd{B@jBb}}}}{{{f{B@j}}{f{{l{A`}}}}}{{Bd{B@jBb}}}}{{{f{BBd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BBf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{B@j}}{f{ClGl}}}{{Bd{bGn}}}}0{cc{}}000{{{f{BB`}}}B@j}{AL`B@j}2{{{f{BBj}}}B@j}{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}{cB@j{{Hb{}{{Cb{B`}}}}}}{{{f{{An{BBl}}}}}{{Bd{B@jBb}}}}{{{f{{An{BBl}}}}{f{BB`}}}{{Bd{B@jBb}}}}{{c{f{BB`}}}{{Bd{B@jBb}}}{{Ch{}{{Cb{{f{BBl}}}}}}}}{{{f{B@j}}Ff}{{C`{{Fn{Ih}}}}}}{{{f{B@j}}{f{Af}}}{{C`{Ff}}}}{{{f{B@j}}}{{Fn{{f{Af}}}}}}{{{f{B@j}}}{{Fn{{AOl{AOj}}}}}}{{{f{B@j}}}{{f{{An{B`}}}}}}{{{f{ClB@j}}}{{f{Cl{Fn{B`}}}}}}{{{f{B@j}}Ff}{{Bd{BBlBb}}}}{{{f{B@j}}Ff{f{ClBBl}}}{{Bd{bBb}}}}{{{f{B@j}}Ff{f{ClBBl}}}b}{{{f{B@j}}}{{C`{{Bd{EdBb}}}}}}`{{{f{B@j}}e}{{Bd{BBnBb}}}{{Hh{Af}}}{{Hb{}{{Cb{c}}}}}}{{{f{B@j}}{Fn{B`}}{f{BC`}}}{{Bd{{Gj{B`{Fn{B`}}Bh}}Bb}}}}1{{{f{B@j}}{Fn{B`}}dd}{{Bd{BBnBb}}}}{{{f{BBf}}{f{Clc}}}bAC`}{{{f{B@j}}{C`{Ff}}}B@j}{{{f{B@j}}}Ff}{{{f{B@j}}{f{{An{B`}}}}}{{Bd{B@jBb}}}}{{{f{ClB@j}}{f{{An{B`}}}}}{{Bd{{f{ClB@j}}Bb}}}}{{{f{ClB@j}}{f{{An{B`}}}}}{{f{ClB@j}}}}{{{f{B@j}}{BCb{Ff}}}f}{{{f{B@j}}BCd}f}{{{f{B@j}}{BCf{Ff}}}f}{{{f{B@j}}{BCh{Ff}}}f}{{{f{B@j}}{BCj{Ff}}}f}{{{f{B@j}}Ff}f}{{{f{B@j}}{Mf{Ff}}}f}{{{f{B@j}}{f{Af}}}f}{{}Ff}0000{{{f{ClB@j}}Ffc}{{Bd{{f{ClB@j}}Bb}}}BBb}{ce{}{}}000000{{B@j{f{Af}}}AL`}{{{f{B@j}}}{{Bd{{l{A`}}Bb}}}}{{{f{B@j}}}d}1{{{f{B@j}}}{{Fh{B`}}}}{{{f{B@j}}dd}BCl}{{{f{B@j}}}{{`{{Ch{}{{Cb{B@j}}}}}}}}{{{f{B@j}}}BCn}{B@jBD`}{{{f{B@j}}}Ff}{{{f{B@j}}}{{Bd{{C`{B`}}Bb}}}}{{{f{B@j}}BBd}{{Bd{{C`{B`}}Bb}}}}{{{f{B@j}}ce}{{Bd{B@jBb}}}{{BDb{{AOl{AOj}}}}}{{BDb{{AOl{AOj}}}}}}{{{f{B@j}}BDd}{{Bd{B@jBb}}}}344{{{Fn{c}}}{{Bd{B@jBb}}}BBb}{{{Fn{B`}}}B@j}{{{Fn{B`}}}{{Bd{B@jBb}}}}{{{f{ClBCl}}}C`}{{{f{ClBCn}}}C`}{{{f{B@j}}}B@j}{{B@je}{{Bd{cBb}}}{}{{Df{B@j}{{Dd{{Bd{cBb}}}}}}}}{{{f{ClB@j}}e}{{Bd{cBb}}}{}{{Df{{f{ClB@j}}}{{Dd{{Bd{cBb}}}}}}}}{{B@jgc}{{Bd{eBb}}}{}{}{{Df{B@jc}{{Dd{{Bd{eBb}}}}}}}}{{{f{ClB@j}}}{{C`{B`}}}}{{{f{B@j}}{f{B@j}}}d}{{{f{ClB@j}}{f{Af}}{f{Af}}}{{Bd{{f{ClB@j}}Bb}}}}{{{f{ClB@j}}{f{Af}}c}{{Bd{{f{ClB@j}}Bb}}}BBb}{{{f{ClB@j}}Ffc}{{Bd{{f{ClB@j}}Bb}}}BBb}18{{{f{B@j}}{Fn{B`}}{f{BDf}}}{{Bd{{Gj{B`{Fn{B`}}Bh}}Bb}}}}`{{{f{B@j}}{f{B`}}dd{C`{Jb}}}{{Bd{B@jBb}}}}0{{{f{B@j}}Ffdd{C`{Jb}}}{{Bd{B@jBb}}}}{{{f{B@j}}}BB`}{{{f{B@j}}{f{B@j}}}{{Bd{bBb}}}}{{{f{B@j}}e}{{Bd{B@jBb}}}{{Hh{Af}}}{{Hb{}{{Cb{c}}}}}}{{{f{B@j}}Ff}{{C`{{f{B`}}}}}}{{{f{B@j}}c}{{Bd{B@jBb}}}{{BDh{Ff}}}}2{{{f{B@j}}c}{{Bd{{Fn{B`}}Bb}}}{{BDb{{AOl{AOj}}}}}}{{{f{B@j}}e{f{{Lh{BB`}}}}}{{Bd{B@jBb}}}{{Hh{Af}}}{{Hb{}{{Cb{c}}}}}}{{{f{B@j}}e{f{BB`}}}{{Bd{B@jBb}}}{{Hh{Af}}}{{Hb{}{{Cb{c}}}}}}{{{f{ClB@j}}{f{{An{c}}}}}{{Bd{bBb}}}{{Hh{Af}}}}{{{f{B@j}}}{{Gj{FfFf}}}}{{{f{B@j}}Gf}B@j}{{{f{B@j}}}d}{{{f{ClB@j}}}b}{{{f{BCl}}}{{Gj{Ff{C`{Ff}}}}}}{{{f{BCn}}}{{Gj{Ff{C`{Ff}}}}}}{{{f{B@j}}GfFf}B@j}00{{{f{B@j}}cEn}{{Bd{B@jBb}}}{{BDb{{AOl{AOj}}}}}}{{{f{ClB@j}}cEn}{{Bd{{f{ClB@j}}Bb}}}{{BDb{{AOl{AOj}}}}}}{{{f{B@j}}Gf}{{Gj{B@jB@j}}}}0{{{f{ClB@j}}}{{`{{Ch{}{{Cb{B@j}}}}}}}}{{B@jFfd}{{Fn{B@j}}}}{{{f{B@j}}BBd}{{Bd{{C`{B`}}Bb}}}}{{{f{B@j}}{C`{Ff}}}B@j}{{{f{B@j}}{f{{l{Ej}}}}}{{Bd{B@jBb}}}}{{{f{B@j}}{f{{l{Ej}}}}}B@j}{{{f{B@j}}{f{{l{Ej}}}}d}B@j}{{{f{B@j}}}{{f{B@j}}}}{{{f{B@j}}BDj}{{Bd{{Oj{Ol{Oh{{Of{Ff}}}}}}Bb}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Ef{}}{{{f{B@j}}FfcEn}{{Bd{B@jBb}}}{{BDb{{AOl{AOj}}}}}}{{{f{ClB@j}}{C`{{f{Af}}}}{C`{{On{Ef{Fn{Ef}}}}}}}{{Bd{B@jBb}}}}{{{f{ClB@j}}{f{Af}}e}{{Bd{{f{ClB@j}}Bb}}}BBb{{A@d{{f{B`}}}{{Dd{{Bd{cBb}}}}}}}}{{{f{ClB@j}}Ffe}{{Bd{{f{ClB@j}}Bb}}}BBb{{A@d{{f{B`}}}{{Dd{{Bd{cBb}}}}}}}}{c{{Bd{e}}}{}{}}0000{BDl{{Bd{B@jBb}}}}{{{Gj{{BDn{{Cf{Cd}}}}{f{{An{AO`}}}}}}}{{Bd{B@jBb}}}}{{c{f{BB`}}}{{Bd{B@jBb}}}{{Ch{}{{Cb{{Bd{{f{BBl}}Bb}}}}}}}}{{{f{B@j}}{f{Af}}}{{Bd{FfBb}}}}44444{{{f{c}}}A@`{}}0000{{{f{B@j}}{C`{{f{{An{Ef}}}}}}BBf{C`{{Gj{GfFf}}}}}{{Bd{B@jBb}}}}{{{f{B@j}}d{C`{{f{{An{Ef}}}}}}BBf{C`{{Gj{GfFf}}}}}{{Bd{B@jBb}}}}1{{{f{B@j}}c}{{Bd{B@jBb}}}{{BDb{Ef}}}}{{{f{B@j}}c{f{Af}}BE`}{{Bd{B@jBb}}}{{BDb{Ef}}}}0{{{f{B@j}}{f{B@j}}}{{Bd{B@jBb}}}}{{{f{ClB@j}}{f{B@j}}}{{Bd{{f{ClB@j}}Bb}}}}{ce{}{}}0000{{{f{B@j}}}Ff}{{{f{ClB@j}}c}{{Bd{{f{ClB@j}}Bb}}}BBb}{{{f{ClB@j}}c{f{BB`}}}{{Bd{{f{ClB@j}}Bb}}}BBb}{{{f{ClB@j}}B`}{{f{ClB@j}}}}{{{f{B@j}}{f{Af}}{C`{Ij}}}{{Bd{B@jBb}}}}{{{f{ClB@j}}{f{Af}}{C`{Ij}}}{{f{ClB@j}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{BDd}}}BDd}{{{f{c}}{f{Cle}}}b{}{}}{{}BDd}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{BDd}}{f{BDd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BDd}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{BDd}}{f{Clc}}}bAC`}`{{}Ff}{ce{}{}}`{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BBn}}}{{Bd{B@jBb}}}}`{{{f{BEb}}}{{f{{An{{BEd{Ij}}}}}}}}{{{f{BBn}}c}{{Bd{B@jBb}}}{{Dn{B@j}{{Dd{{Bd{B@jBb}}}}}}I`Ib}}{{{f{Bh}}}{{l{j}}}}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Clc}}}{{f{Cle}}}{}{}}0000000{{{f{BEb}}}BEb}{{{f{Bh}}}Bh}{{{f{BBn}}}BBn}{{{f{BEf}}}BEf}{{{f{c}}{f{Cle}}}b{}{}}000:{{}BEb}{{}Bh}{Ff{{f{c}}}{}}000{{{f{BEh}}}f}1111{Ff{{f{Clc}}}{}}0000000`{{BEjc}{}BEl}{Ffb}000{{{f{ClBEb}}}b}1111{{{f{BEb}}{f{BEb}}}d}{{{f{Bh}}{f{Bh}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BEn}}}Ij}{{{f{BEb}}}{{f{{An{Ij}}}}}}{{{f{BBn}}}{{Bd{B@jBb}}}}{{{f{ClBEb}}}{{f{Cl{Fn{Ij}}}}}}{{{f{BEb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Bh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BBn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BEf}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{Af}}BEf}Ef}{cc{}}000{{{Fn{{Fn{{Gj{Ij{BEd{Ij}}}}}}}}}BEb}{{{Fn{{Gj{{Fn{Ij}}{Fn{{BEd{Ij}}}}}}}}}BEb}2{{{Fn{{Gj{Ij{BEd{Ij}}}}}}}BEb}{BEbBh}444{BF`BEf}{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}{cBEb{{Hb{}{{Cb{{Gj{Ij{BEd{Ij}}}}}}}}}}{cBEb{{Hn{}{{Cb{{Gj{Ij{BEd{Ij}}}}}}}}}}{{{f{Bh}}Ff}BEn}{{{f{BBn}}}{{f{Bh}}}}{{{f{ClBBn}}}{{f{ClBh}}}}{{{f{Bh}}}{{l{Ej}}}}{{{f{BFb}}dd}{{Bd{BhBb}}}}{{{f{BBn}}}{{Bd{B@jBb}}}}{{{f{ClBh}}}{{f{ClBEb}}}}{{}Ff}0000000{ce{}{}}0000000{BhBEb}1{BEb}{{{f{BEb}}}}310{{{f{BEn}}}d}{{{f{Bh}}}d}{{{f{BEb}}}d}{{{f{BEb}}}{{BFf{{BFd{{Fh{Ij}}}}{Fh{{BEd{Ij}}}}}}}}{{{f{Bh}}}BFh}{{{f{BBn}}}{{Fn{B`}}}}{{{f{BBn}}{C`{{Gj{GfFf}}}}}{{Fn{B`}}}}={{{f{BEn}}}Ff}{{{f{Bh}}}Ff}?????{{{Fn{Ij}}{Fn{{BEd{Ij}}}}d}BEb}{{{f{B@j}}{Fn{B`}}Bh{C`{{Fn{Ef}}}}}BBn}{{{f{ClBFh}}}C`}{{{f{ClBFh}}Ff}C`}{{{f{BBn}}c}{{Bd{B@jBb}}}{{Df{B@j}{{Dd{{Bd{B@jBb}}}}}}I`Ib}}{{{f{c}}}{}{}}{{{f{Bh}}}BEj}{{{f{BBn}}LfNd}{{Bd{B@jBb}}}}{{BBne}BBn{{Hh{Af}}}{{Hb{}{{Cb{c}}}}}}{{{f{Bh}}GfFf}BEh}{{{f{ClBEb}}}b}{{{f{ClBh}}}b}{{{f{BBn}}Al}{{Bd{B@jBb}}}}{{{f{BBn}}}{{Bd{B@jBb}}}}{Bh{{Fn{Ij}}}}0{BBnBh}{{{f{ClBBn}}}Bh}{{{f{c}}}e{}{}}000{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}000000000000000{{{f{c}}}A@`{}}0000000{BhBh}{{{f{Bh}}}{{f{BEb}}}}{{{f{Bh}}}{{f{{Fn{{Of{Ij}}}}}}}};{ce{}{}}0000000`````{{{f{BEb}}c}B`{{Df{{Gj{Ij{f{{BEd{Ij}}}}}}}{{Dd{C`}}}}I`Ib}}{{{f{BEb}}c}B`{{Df{{Gj{Ij{f{{BEd{Ij}}}}}}}{{Dd{}}}}I`Ib}}{{{f{{An{{Of{Ij}}}}}}c}B`{{Df{{Of{Ij}}}{{Dd{C`}}}}I`Ib}}{{{f{{An{{Of{Ij}}}}}}c}B`{{Df{{Of{Ij}}}{{Dd{}}}}I`Ib}}{{{f{{An{c}}}}e{C`{{Lh{AEl}}}}}{{AKb{c}}}{BFjBFl}{{Ch{}{{Cb{{Gj{IjIj}}}}}}If}}{{{f{{An{c}}}}{f{Hl}}e{C`{{Lh{AEl}}}}}{{AKb{c}}}{BFjBFl}{{Ch{}{{Cb{{Gj{IjIj}}}}}}If}}{{{f{{l{c}}}}IjIj}{{l{c}}}Db}{{{f{{Fn{{Of{Ij}}}}}}{f{{An{{Cf{Cd}}}}}}}d}{{{f{BFn}}{f{Bh}}}B`}{{BG`BG`}BG`}0`{{{f{BGb}}{f{B@j}}{f{Bh}}}{{Bd{B`Bb}}}}{{{f{BGb}}}{{Bd{{f{Af}}Bb}}}}````````````````````````````````````{{{f{c}}h}b{}}00{{{f{ClBGd}}Ih}{{C`{b}}}}{{{f{ClBGf}}{f{Ih}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{BGd}}}BGd}{{{f{BGf}}}BGf}{{{f{BBl}}}BBl}{{{f{c}}{f{Cle}}}b{}{}}00{{{f{{An{c}}}}}Ed{{Hj{Ed}}}}{{}BBl}{Ff{{f{c}}}{}}00{Ff{{f{Clc}}}{}}00{Ffb}00{{{f{BBl}}{f{BBl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BBl}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{Gj{{f{Ed}}Ff}}}BGd}{{{Gj{{f{Ed}}Ff}}}BGf}22{{eFf}BB`{{ANl{Ed}}}{{Ch{}{{Cb{{Fn{{Gj{Efc}}}}}}}}}}{{}Ff}00{ce{}{}}00{BGdB`}{BGfB`}{{{f{Ed}}Ff}BGd}{{{f{Ed}}Ff}BGf}{{{Fn{Ih}}}BBl}{{{f{ClBGd}}Ff}B`}{{{f{ClBGf}}Ff}B`}{{{f{{An{BBl}}}}{C`{Ff}}}{{Bd{BB`Bb}}}}0{{{f{{An{BBl}}}}{C`{Ff}}}{{Bd{{Fn{Ed}}Bb}}}}{{{f{c}}}e{}{}}00{c{{Bd{e}}}{}{}}00000{{{f{c}}}A@`{}}00<<<{{{f{{An{B@j}}}}}{{Bd{B@jBb}}}}0`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{B@j{f{{An{{f{Af}}}}}}{f{{An{{f{Af}}}}}}{C`{{f{Af}}}}{f{B@j}}}B@j}{{BD`c}{{Bd{B@jBb}}}{{Df{BGh{f{Cl{BGl{BGj}}}}{f{Cl{BGl{BGn}}}}}{{Dd{{Bd{bBb}}}}}}}}{{{f{BH`}}{f{{An{Ij}}}}dd}B@j}{{{f{BH`}}{Gj{{On{{Fn{Ij}}{Fn{Nl}}}}{On{{Fn{A@b}}{Fn{Nl}}}}}}{f{B@j}}BHb}{{Bd{B@jBb}}}}{{{f{BH`}}{f{B@j}}{f{B`}}{f{B`}}BHb}{{Bd{B@jBb}}}}{{{f{Af}}{f{Af}}}Ef}{{{f{BH`}}{f{B@j}}{f{B`}}{f{B`}}BHbd{C`{{f{{An{{f{Af}}}}}}}}}{{Bd{B@jBb}}}}{{{f{BDl}}Ff}{{Gj{BDlBDl}}}}{{{f{BHd}}{f{{An{Nl}}}}Kl}B@j}0{{{f{BHd}}{f{{An{Nl}}}}}B@j}0{{{f{BHf}}{C`{{Fn{{f{Af}}}}}}{C`{{f{Af}}}}d}{{Bd{B@jBb}}}}{{BD`d}BD`}{{{BHh{c}}{C`{{Lh{BHj}}}}}{{BHh{c}}}BHl}{{{f{B`}}}{{Bd{B`Bb}}}}{BHnBHn}{{{BI`{}{{Dd{c}}}}{f{B`}}}c{}}{{BHnBHn}}{{{f{BE`}}Gf{C`{{f{AKl}}}}}{{Bd{GfBb}}}}0{{{f{BIb}}{f{B`}}}{{Bd{B`Bb}}}}1{{BIdc}BD`{{Hh{{An{BHn}}}}}}5`{{BHn{f{Af}}}BHn}{{}BHn}{{BHnd}BHn}{c{{Bd{BHnBb}}}{{Hh{{An{BHn}}}}}}{{{f{{Lh{ce}}}}}{{f{e}}}{}BIf}{{BIhd}BIh}`{{{f{BIj}}}d}00`{{BHnc}BHn{{ANl{BHn}}}}{{{Lh{BIj}}BIl}{{Bd{BD`Bb}}}}65{{BHncd}BHn{{ANl{BHn}}}}{{{f{ClAAf}}}b}{{{f{ClAAh}}}b}{{{f{ClAAf}}{C`{{f{B`}}}}}{{Bd{bBb}}}}{{{f{ClAAh}}{C`{c}}}b{}}{{{f{ClAAf}}{f{B`}}}{{Bd{bBb}}}}{{{f{ClAAh}}c}b{}}{{{f{{AFl{}{{AFj{c}}}}}}g}{{AFl{}{{AFj{c}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{c}}}}}}Dh}}{{BIdc{Lh{BB`}}}BD`{{Df{B@j}{{Dd{{Bd{B@jBb}}}}}}I`Ib}}{{BHnc{BJ`{{Lh{BIn}}}}}BHn{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}{{BHnBHnc{BJ`{{Lh{BIn}}}}}BHn{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}{{{f{BHn}}{f{Clc}}f}{{Bd{BJbBb}}}{{Dn{{f{BHn}}f}{{Dd{{Bd{BJbBb}}}}}}}}{{{f{AFn}}{f{Df}}}AFn}{{{f{AFn}}{f{Df}}}{{l{c}}}Db}{{BHnc{f{{An{BHn}}}}{BJ`{{Lh{BIn}}}}}BHn{{Df{{f{Cl{An{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}{{BHnBJd{f{{An{BHn}}}}dd}BHn}{{ce{BJ`{{Lh{BIn}}}}d}BHn{{Df{{f{Cl{An{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}{{Hh{{An{BHn}}}}}}{{{f{{AFl{}{{AFj{c}}}}}}i{f{Cl{An{g}}}}}b{}{}{}{{Df{{C`{e}}{f{g}}}{{Dd{g}}}}}}{{{f{{AFl{}{{AFj{c}}}}}}g}{{AFl{}{{AFj{c}}}}}{}{}{{Df{e}{{Dd{c}}}}Dh}}{{BHnBHnGfEd}BHn}{BDl{{Lh{Cd}}}}{{{f{BJf}}}{{C`{Ff}}}}{BJhBHn}{BJjBHn}{BHnBHn}3210{{{f{AG`}}Eh}{{l{Ej}}}}{{BHnEh}BHn}{{{f{BJl}}Eh}{{l{Ej}}}}{{cEn}BHn{{Hh{{An{BHn}}}}}}{{{f{AG`}}{f{{An{B`}}}}{f{En}}}{{Bd{{l{Ej}}Bb}}}}{{{f{AGb}}}{{Bd{{l{Ej}}Bb}}}}6{{{f{BJl}}}{{Bd{{l{Ej}}Bb}}}}{cBHn{{ANl{BHn}}}}{{{f{BJn}}}{{f{{An{Mn}}}}}}``{BHnBJh}{eALf{}{{Hb{}{{Cb{c}}}}}}0{{AEje}ALh{}{{Hb{}{{Cb{c}}}}}}0`{{{f{Cl{BK`{c}}}}}{{Bd{BBjBb}}}BKb}{{{f{BIj}}}{{f{AEl}}}}{{{f{BJl}}}{{f{AEl}}}}{{{f{BKd}}}{{f{AEl}}}}{{{f{BDl}}}{{f{AEl}}}}{{{f{ClBJl}}}{{f{ClAEl}}}}{{{f{ClBDl}}}{{f{ClAEl}}}}{{{f{BKf}}}{{f{{l{Ab}}}}}}{{{f{BKh}}{C`{{f{Af}}}}d}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKh}}{C`{{f{Af}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKh}}{C`{{f{Af}}}}Jldd{C`{{f{Ef}}}}{f{{l{Ad}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{BKh}}{C`{{f{Af}}}}Jld{C`{{f{Ef}}}}{f{{l{Ad}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{{Lh{c}}}}}BKj{BKlNj}}{{{f{BKn}}}{{f{{l{j}}}}}}{{{f{{Lh{ce}}}}}{}NjBIf}{{{f{{Lh{c}}}}}MlBL`}{{{f{BLb}}}{{f{BHn}}}}{{{f{{Lh{ce}}}}}{{f{c}}}NjBIf}{{{f{ALj}}}{{f{Ed}}}}{{{f{BLd}}}{{f{B`}}}}{{{f{ClBJl}}}{{Bd{FfBb}}}}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}{{C`{{f{{An{c}}}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{BLf}}}{{f{{l{Ad}}}}}}{{{Fn{BHn}}}BHn}{{{f{BKh}}{C`{{f{Af}}}}d}{{Bd{{Jh{KhJj}}Bb}}}}{{{Lh{{An{{BLh{c}}}}e}}}{{Lh{{An{c}}e}}}{}BIf}{{{Lh{{BLh{c}}e}}}{{Lh{ce}}}{}BIf}{{{f{Af}}}BHn}{{BHn{C`{Ij}}}BHn}{{{f{BLj}}}{{Bd{{l{Ad}}Bb}}}}{{{f{BLj}}}{{l{Ad}}}}{{{f{{Jh{JnJj}}}}{f{Jl}}{f{AKl}}}{{Jh{KdJj}}}}`{{{BHh{{Cf{BHl}}}}{C`{{Lh{BB`}}}}}{{Bd{BLlBb}}}}{{{BLn{c}}{f{BB`}}}{{Bd{{BM`{c}}Bb}}}BMb}{{{BMd{c}}{f{BB`}}}{{Bd{{BMf{c}}Bb}}}BMb}{{{BMh{c}}Ff}{{Bd{BMjBb}}}BHl}{{{BMl{c}}{f{BB`}}}{{Bd{{BMn{c}}Bb}}}BMb}{{{f{Cl{BHh{c}}}}}{{Bd{BN`Bb}}}BHl}`{BHnBNb}{{BHnBNdBHn}BHn}{{{f{BJl}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Lh{ce}}}}}{{f{c}}}NjBIf}11111111111111{{{f{Clc}}}{{f{Cle}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BD`IjcEn}BD`{{Hh{{An{BHn}}}}}}{BDl{{Cf{Cd}}}}`{BD`BD`}```{{{f{BNf}}{f{Af}}}{{Bd{EfBb}}}}{{BNh{Fn{BHn}}}{{Bd{BHnBb}}}}{{{f{ALb}}{f{ALb}}c}{{Bd{ALbBb}}}AMj}{{{f{BKd}}{f{Cl{An{B`}}}}}{{Bd{{C`{B`}}Bb}}}}{{{f{BNj}}B`B`}{{Bd{B`Bb}}}}{{BNh{Fn{BHn}}}BHn}{{{f{BNl}}}b}{{BHnEd}BHn}{{{f{BJl}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{BD`{BNn{{f{Af}}EdO`}}d}BD`}{{{f{AGd}}{f{Ed}}}{{Bd{B`Bb}}}}3{{{f{AMl}}{f{Ed}}}{{Bd{B`Bb}}}}{{BD`Edd}BD`}2{{{f{AGd}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{AMl}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{BHnEdFb}BHn}`{BHnBO`}{{{f{{Lh{c}}}}}{{C`{{f{AJn}}}}}{AJnNj}}{BHnBHn}{{{f{BOb}}}{{Bd{B`Bb}}}}1`{{{f{BOd}}}{{Bd{{l{Jd}}Bb}}}}{{{f{BDl}}Ff}d}{{{f{BBj}}{f{BBj}}{C`{{f{{An{Ef}}}}}}{f{Af}}}{{Bd{bBb}}}}{{{f{BB`}}{f{BB`}}{C`{{f{{An{Ef}}}}}}{f{Af}}}{{Bd{bBb}}}}0{{{f{BOf}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BJl}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BOf}}c}{{Bd{B`Bb}}}Aj}{{{f{BJl}}}{{Fl{{Fh{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{Ff}}}}}}}}``{{{f{BJl}}}{{f{{Fn{{Cf{Cd}}}}}}}}{{{f{ClBJl}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}}{{{f{B`}}{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BHnBHnBHn}BHn}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{BHnBHn}BHn}10{{{f{BNl}}}BNl}{{{f{BD`}}}BD`}{{{f{BId}}}BId}{{{f{BIl}}}BIl}{{{f{BOh}}}BOh}{{{f{BOj}}}BOj}{{{f{BOl}}}BOl}{{{f{BOn}}}BOn}{{{f{C@`}}}C@`}{{{f{BC`}}}BC`}{{{f{BDf}}}BDf}{{{f{C@b}}}C@b}{{{f{BE`}}}BE`}{{{f{C@d}}}C@d}{{{f{C@f}}}C@f}{{{f{C@h}}}C@h}{{{f{C@j}}}C@j}{{{f{A@b}}}A@b}{{{f{Nl}}}Nl}{{{f{C@l}}}C@l}{{{f{C@n}}}C@n}{{{f{CA`}}}CA`}{{{f{CAb}}}CAb}{{{f{CAd}}}CAd}{{{f{CAf}}}CAf}{{{f{CAh}}}CAh}{{{f{CAj}}}CAj}{{{f{CAl}}}CAl}{{{f{CAn}}}CAn}{{{f{CB`}}}CB`}{{{f{BHb}}}BHb}{{{f{CBb}}}CBb}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{CBl}}}CBl}{{{f{CBn}}}CBn}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{BLb}}}BLb}{{{f{BHn}}}BHn}{{{f{CDn}}}CDn}{{{f{BNd}}}BNd}{{{f{{BJ`{c}}}}}{{BJ`{c}}}ABj}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{BJd}}}BJd}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{BNh}}}BNh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{{Lh{ce}}}}}{{Lh{ce}}}Nj{BIfABj}}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{Nf}}}Nf}{{{f{BDj}}}BDj}{{{f{BDl}}}BDl}{{{f{BB`}}}BB`}{{{f{AO`}}}AO`}{{{f{BBj}}}BBj}{{{f{Nd}}}Nd}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{CGj}}}CGj}{{{f{BJl}}}{{Lh{BJl}}}}{{{f{c}}{f{Cle}}}b{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CGl}}}{{C`{{f{CGn}}}}}}````{{{f{BE`}}{f{BE`}}}B@d}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}B@d{CH`Nj}BIf}{{{f{{An{BHn}}}}}BHn}{{BIhCBd}BIh}{{{f{CBd}}{f{CBf}}}d}`{{{f{{An{B`}}}}}{{Bd{B`Bb}}}}{{{f{Af}}}BHn}{BD`{{Bd{B@jBb}}}}{c{{Bd{{Fn{B@j}}Bb}}}{{Hn{}{{Cb{BD`}}}}}}{ANhe{}{{ALf{c}}AJj}}0{{ANhAEj}e{}{{ALh{c}}AJj}}0{{ACb{f{Af}}}{{l{c}}}Db}{{ACd{f{{l{c}}}}}{{l{c}}}Db}10{{ACd{f{Af}}Ed}{{l{c}}}Db}0{BD`{{Bd{BNlBb}}}}{cBHn{{BDb{Ef}}}}{{{f{CGd}}Ff}CHb}``{{{f{BHf}}{Fn{{f{Af}}}}{C`{{f{Af}}}}d}{{Bd{B@jBb}}}}`{{{f{c}}{f{e}}}B@d{}{}}0``{{{f{CDd}}}{{Bd{{Lh{BB`}}Bb}}}}{{cCGb}{{Bd{BD`Bb}}}{{Hh{{An{BD`}}}}}}{{{f{BLj}}{f{{l{Ad}}}}}{{l{Ad}}}}{{ed}{{Bd{BHnBb}}}{{ANl{BHn}}ABj}{{Hh{{An{c}}}}}}{{{f{CGl}}{Fn{BD`}}}{{Bd{BD`Bb}}}}{{{f{BOh}}{Fn{BD`}}}{{Bd{BD`Bb}}}}44{e{{Bd{BHnBb}}}{{ANl{BHn}}ABj}{{Hh{{An{c}}}}}}{{c{f{Af}}d}BHn{{Hh{{An{BHn}}}}}}{{BJhc}BHn{{ANl{BHn}}}}{{{f{CHd}}{f{{An{Al}}}}}{{l{A`}}}}{{{f{BLj}}{f{Af}}d}{{Bd{{l{A`}}Bb}}}}{{BJjc}BHn{{ANl{BHn}}}}{{{f{BB`}}{f{Af}}}d}{{{f{CHd}}{f{{l{Ab}}}}}{{l{A`}}}}{{{f{BLj}}{f{{l{Ad}}}}dd}{{Bd{{l{A`}}Bb}}}}{{{f{BLj}}{f{Af}}}{{Bd{{l{A`}}Bb}}}}{{{f{Cd}}{f{AEj}}}{{Cf{Cd}}}}{{{f{B`}}Ff}{{Bd{{l{Ej}}Bb}}}}{BD`BD`}{{{CHf{c}}}{{Bd{FfBb}}}BHl}{BHnBHn}{{{f{BLj}}{f{Af}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{BLj}}{f{{l{Ad}}}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{CHh}}Al{C`{Al}}{C`{{f{CAb}}}}Ald}{{Bd{FfBb}}}}{{{AMf{Af}}}Ed}{{{f{BH`}}{f{{An{Nl}}}}d}B@j}{{{f{CHj}}c}{{Cf{CHl}}}BMb}{{{f{CHn}}c}{{Cf{CHl}}}BMb}`{{BD`BD`{C`{Ef}}}BD`}{{{f{CI`}}{f{B@j}}{C`{{f{Af}}}}{C`{{Gj{GfFf}}}}}{{Bd{B@jBb}}}}{{{f{CI`}}{f{B@j}}{C`{{Gj{GfFf}}}}d}{{Bd{{Gj{B@jB@j}}Bb}}}}{{{f{B`}}d}{{Bd{B`Bb}}}}{{BHnd}BHn}{{BHnced}BHn{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`IbABj}{{Hh{{An{BHn}}}}}}212121{{ce}BHn{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`IbABj}{{Hh{{An{BHn}}}}}}32{{CIbBHnFfd}BHn}`{{{f{BDl}}}{{f{AEj}}}}{{{f{AO`}}}{{f{AEj}}}}```{{BHnBHnBE`C@d}BHn}`{CEjBHn}`{{BHnBHnBE`C@d{C`{Jl}}{C`{Ef}}}BHn}0{AKjGf}00{{{f{CId}}}{{l{Mb}}}}{{{f{CIf}}}{{l{Mb}}}}{{{f{BOd}}}{{Bd{{l{Mb}}Bb}}}}`{{{f{CIh}}}{{l{Jj}}}}{{{f{BE`}}}Gf}`{{{f{BE`}}}d}```{{}b}{cbBIf}{{}BD`}{{}BIl}{{}BOj}{{}BOn}{{}CHj}{{}CHn}{{}BC`}{{}BDf}{{}C@h}{{}C@l}{{}C@n}{{}CA`}{{}CAf}{{}CAh}{{}CAj}{{}CAn}{{}CB`}{{}BHb}{{}CBb}{{}CBd}{{}CBh}{{}CBl}{{}CBn}{{}CC`}{{}CCb}{{}CCf}{{}CCh}{{}CD`}{{}CDd}{{}BHn}{{}{{BJ`{{Lh{BNj}}}}}}{{}{{BJ`{{Lh{BIn}}}}}}{{}{{BJ`{{Lh{CIj}}}}}}{{}CEj}{{}CEl}{{}CF`}{{}CFb}{{}CFd}{{}CFf}{{}CFj}{{}CFn}{{}CG`}{{}{{Lh{{An{c}}}}}{}}{{}{{Lh{CIl}}}}{{}{{Lh{c}}}CIn}{{}{{Lh{Af}}}}{{}CGb}{{}Nf}{{}BDj}{{}BB`}{{}AO`}{{}BBj}{{}Nd}`{{}{{On{{Fn{A@b}}{Fn{Nl}}}}}}{Ff{{f{c}}}{}}00{{{f{{AKf{c}}}}}f{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BJ`{c}}}}}f{}}222222222222222222222{{{f{{Lh{ce}}}}}{{f{c}}}NjBIf}3333333333333{Ff{{f{Clc}}}{}}00{{{f{Cl{AKf{c}}}}}{{f{Cl}}}{}}1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CDd}}}{{Bd{EfBb}}}}{{{f{BD`}}}{{Bd{EfBb}}}}0001{{{f{{Lh{c}}}}}{{f{Af}}}{AJnNj}}{{{f{AO`}}{f{CJ`}}}{{Bd{CJbBb}}}}```{{{f{B`}}GfCJd}{{Bd{B`Bb}}}}{{BJjGfCJd}BHn}{{BHnGfCJd}BHn}{{{f{CDd}}}{{Bd{{`{BAn}}Bb}}}}``{{{BI`{}{{Dd{c}}}}{f{B`}}}c{}}{{BHnBHn}}{{{f{BIb}}{f{B`}}}{{Bd{B`Bb}}}}{{BHnc}BHn{{ANl{BHn}}}}{{{Lh{AElc}}}{{Bd{{Lh{ec}}{Lh{AElc}}}}}BIf{AElI`Ib}}{{{Lh{AElc}}}{{Lh{ec}}}BIf{AElI`Ib}}{{{f{{Lh{ce}}}}}{{CJf{ce}}}Nj{ABjBIf}}{Ffb}0000000{{{f{ClBNl}}}b}1{{BD`e}BD`{{Hh{Af}}}{{Hb{}{{Cb{c}}}}}}222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Cl{Lh{ce}}}}}bNjBIf}3333333333333{BHnBHn}2{{BD`{C`{{Fn{BHn}}}}}BD`}1{{{f{BJl}}}B`}{{{f{{Jh{JnJj}}}}{f{Jl}}{f{AKl}}}{{Jh{KdJj}}}}`{BHnCJh}{{{f{AMl}}}{{f{Ed}}}}{{{f{BJl}}}{{f{Ed}}}}`{{{f{Ed}}}BHn}{cBHn{{Hh{{An{Ed}}}}}}`{CElBHn}``{{}CG`}{{{f{c}}}e{}{{CJl{CJj}}}}0`{{{f{CHd}}{f{{An{Al}}}}}{{l{A`}}}}{{{f{CHd}}{f{{l{Ab}}}}}{{l{A`}}}}{{BE`{f{Ed}}{f{Af}}}{{Bd{bBb}}}}{{BE`{C`{{f{Af}}}}{f{Af}}}{{Bd{bBb}}}}{{{f{CJn}}{f{Af}}}{{Bd{bBb}}}}`{{{f{C@`}}{f{C@`}}}d}{{{f{BC`}}{f{BC`}}}d}{{{f{BDf}}{f{BDf}}}d}{{{f{BE`}}{f{BE`}}}d}{{{f{C@d}}{f{C@d}}}d}{{{f{C@f}}{f{C@f}}}d}{{{f{C@h}}{f{C@h}}}d}{{{f{A@b}}{f{A@b}}}d}{{{f{C@l}}{f{C@l}}}d}{{{f{C@n}}{f{C@n}}}d}{{{f{CA`}}{f{CA`}}}d}{{{f{CAb}}{f{CAb}}}d}{{{f{CAd}}{f{CAd}}}d}{{{f{CAf}}{f{CAf}}}d}{{{f{CAh}}{f{CAh}}}d}{{{f{CAj}}{f{CAj}}}d}{{{f{CAl}}{f{CAl}}}d}{{{f{CAn}}{f{CAn}}}d}{{{f{CB`}}{f{CB`}}}d}{{{f{BHb}}{f{BHb}}}d}{{{f{CBb}}{f{CBb}}}d}{{{f{CBd}}{f{CBd}}}d}{{{f{CBf}}{f{CBf}}}d}{{{f{CBh}}{f{CBh}}}d}{{{f{CBj}}{f{CBj}}}d}{{{f{CBl}}{f{CBl}}}d}{{{f{CBn}}{f{CBn}}}d}{{{f{CC`}}{f{CC`}}}d}{{{f{CCb}}{f{CCb}}}d}{{{f{CCd}}{f{CCd}}}d}{{{f{CCf}}{f{CCf}}}d}{{{f{CCh}}{f{CCh}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{BLb}}{f{BLb}}}d}{{{f{BHn}}{f{BHn}}}d}{{BHnc}BHn{{ANl{BHn}}}}{{{f{CDn}}{f{CDn}}}d}{{{f{BNd}}{f{BNd}}}d}{{{f{{BJ`{{Lh{c}}}}}}{f{{BJ`{{Lh{c}}}}}}}dNj}{{{f{{BJ`{B`}}}}{f{{BJ`{B`}}}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{BJd}}{f{BJd}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{CJb}}{f{CJb}}}d}{{{f{CFn}}{f{CFn}}}d}{{{f{CG`}}{f{CG`}}}d}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CK`Nj}BIf}{{{f{{Lh{CKb}}}}{f{CKb}}}d}{{{f{{Lh{Cd}}}}{f{Cd}}}d}{{{f{CGb}}{f{CGb}}}d}{{{f{Nf}}{f{Nf}}}d}{{{f{BDj}}{f{BDj}}}d}{{{f{BDl}}{f{BDl}}}d}{{{f{BDl}}{f{{f{Cd}}}}}d}{{{f{BB`}}{f{BB`}}}d}{{{f{AO`}}{f{AO`}}}d}{{{f{BBj}}{f{BBj}}}d}{{{f{Nd}}{f{Nd}}}d}{{{f{CGj}}{f{CGj}}}d}{{BHnc}BHn{{ANl{BHn}}}}{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}0{{{f{c}}{f{e}}}d{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CKdBHnd}BHn}``{{BHnc}BHn{{BDb{Ef}}}}{{BHnc}BHn{{Hh{{An{Ed}}}}}}{{{f{Clc}}e}{{Bd{{f{Clg}}BAj}}}{}CKf{}}{{{f{CGl}}}{{Bd{{Gj{{Lh{{An{CHh}}}}Ff}}Bb}}}}{{{f{BD`}}d}{{Bd{EfBb}}}}{{BD`e}BD`{{ANl{BHn}}ABj}{{Hh{{An{c}}}}}}{{{f{AGj}}}{{Bd{B`Bb}}}}{BHnBHn}{{{f{AGj}}}{{Bd{{Gj{B`{Gh{Gf}}}}Bb}}}}`{{BHnBHnBHn}BHn}{{{f{CHj}}}CHh}{{{f{CHn}}}CHh}{{{f{BLj}}{f{{l{Ad}}}}Ff}{{Bd{{l{Ad}}Bb}}}}{Nl{{Gj{IjIj}}}}{{{f{BLj}}{f{Af}}}{{Bd{{l{j}}Bb}}}}{{{f{BLj}}{f{{l{Ad}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BLj}}{f{Af}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{AAf}}}d}``{{{f{BNl}}}{{C`{{Bd{B@jBb}}}}}}{{BD`Ff}{{Bd{B@jBb}}}}{{{f{BNl}}}{{Bd{B@jBb}}}}{{{f{AAf}}}{{f{Mn}}}}{{{f{BJl}}}{{Dj{Mn}}}}{{CKhGf}BHn}{{CKh{f{Af}}}BHn}{{CKh{f{{An{c}}}}}BHn{{Hh{Af}}}}{{{f{BDl}}}{{f{{An{AO`}}}}}}```{{BD`c}BD`{{ANl{BHn}}}}{{BHnc}BHn{{ANl{BHn}}}}`10{{BHnAGf}BHn}{{{f{AGl}}c}{{Bd{AGlBb}}}{}}{{{f{AGn}}{f{{l{A`}}}}}{{Bd{{l{c}}Bb}}}Db}{{{f{BJl}}{f{{l{A`}}}}}{{Bd{B`Bb}}}}{{BD`BHn}BD`}5{{BBjc}BBj{{Df{Ff{f{AO`}}}{{Dd{d}}}}}}{{{f{BLj}}{f{Af}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{BLj}}{f{{l{Ad}}}}dd}{{Bd{{l{Ej}}Bb}}}}{{{f{BLj}}{f{Af}}}{{Bd{{l{Ej}}Bb}}}}{CKj{{Bd{B@jBb}}}}{{{f{ClCHl}}{f{ClB@j}}}{{Bd{bBb}}}}{AAh{{l{c}}}Db}{{AMj{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}{BIhBD`}{CGl{{Bd{BD`Bb}}}}{{{BHh{c}}}{{Bd{B@jBb}}}BHl}{BOh{{Bd{BD`Bb}}}}{BOl{{Bd{BD`Bb}}}}{{{f{Cl{BLn{c}}}}{f{ClB@j}}}{{Bd{bBb}}}BMb}{{{CKl{c}}}{{Bd{B@jBb}}}BHl}{{{BK`{c}}}{{Bd{B@jBb}}}BKb}{{{f{Cl{CKn{c}}}}{f{ClB@j}}}{{Bd{bBb}}}BMb}{{{f{Cl{BMd{c}}}}{f{ClB@j}}}{{Bd{bBb}}}BMb}{{{f{Cl{CL`{c}}}}{f{ClB@j}}}{{Bd{bBb}}}BMb}{{{CLb{c}}}{{Bd{B@jBb}}}BHl}{{{CHf{c}}}{{Bd{B@jBb}}}BHl}{{{BMh{c}}}{{Bd{B@jBb}}}BHl}{{{BMl{c}}{f{ClB@j}}}{{Bd{JbBb}}}BMb}{{{f{ClAAf}}}{{l{j}}}}><;{{{CKl{c}}{C`{{Lh{BHj}}}}d}{{Bd{B@jBb}}}BHl}{{{f{BMj}}Ff}d}{{}BHn}{BD`BD`}{BJjBHn}{BHnBHn}`0``{{}{{BJ`{{Lh{BIn}}}}}}{{{f{BOb}}}{{Bd{B`Bb}}}}2{{BHnBHn}BHn}{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{Cl{Lh{AEb}}}}}{{Bd{bBAj}}}}{{{f{BKd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BNj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BNf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BC`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BDf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@b}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BE`}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{C@d}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@f}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@h}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{A@b}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Nl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BIj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@l}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{C@n}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CA`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CAn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CLd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CB`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BHb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBf}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CBh}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CBj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CBn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CC`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CCn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CD`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CDb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BHn}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CDn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BNd}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{{BJ`{c}}}}{f{ClGl}}}{{Bd{bGn}}}{}}{{{f{CE`}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CEb}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CEd}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CEf}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CEh}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{BJd}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{CEj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CEl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CEn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CF`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BNh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CJb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CFn}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CG`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{{Lh{ce}}}}{f{ClGl}}}{{Bd{bGn}}}{BAnNj}BIf}{{{f{{Lh{ce}}}}{f{ClGl}}}{{Bd{bGn}}}NjBIf}{{{f{{Lh{ce}}}}{f{ClGl}}}{{Bd{bGn}}}{AEnNj}BIf}{{{f{CGb}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CGd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Nf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BDj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BDl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BB`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{AO`}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{BBj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Nd}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CGf}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CGh}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{CGj}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{Af}}BEf}Ef}```{{BHnce}BHn{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`IbABj}{{Hh{{An{BHn}}}}}}{{BIhd}BIh}``{{{f{Af}}c}{{Bd{BHnBb}}}{{Hh{{An{BHn}}}}}}{{BHn{C`{Ij}}}BHn}{cc{}}0000000{CDdBD`}1{BIdBD`}222222222222222222222222222222222{IjA@b}33333333{{{f{Af}}}CAb}444444444{CBfBHb}555555555555555555555555{BLbBHn}{JbBHn}{LlBHn}{dBHn}{J`BHn}{LfBHn}{GfBHn}{IjBHn}={AlBHn}{M`BHn}{{{f{Af}}}BHn}{MlBHn}{MdBHn}{cc{}}00{CLf{{BJ`{{Lh{BKd}}}}}}{CEh{{BJ`{{Lh{BKd}}}}}}{CE`{{BJ`{{Lh{BKd}}}}}}{CLh{{BJ`{{Lh{BKd}}}}}}{CLj{{BJ`{{Lh{BKd}}}}}}{BJd{{BJ`{{Lh{BKd}}}}}}{CLl{{BJ`{{Lh{BKd}}}}}}{CEd{{BJ`{{Lh{BKd}}}}}}{CLn{{BJ`{{Lh{BKd}}}}}}{CEb{{BJ`{{Lh{BKd}}}}}}:::::{CE`BJd}{CLhBJd}{CEhBJd}={CEbBJd}>>>>>>{CFfCFd}??????{CM`CJb}{cc{}}0{{{f{Af}}}{{Lh{Af}}}}{CHh{{Lh{CMb}}}}{CMdc{}}{{{Cf{ce}}}{{Lh{ce}}}NjBIf}{c{{Lh{c}}}{}}{{{f{{An{c}}}}}{{Lh{{An{c}}}}}ABj}{Ef{{Lh{Af}}}}{{{Fn{ce}}}{{Lh{{An{c}}e}}}{}{BIfABj}}8{CMf{{Lh{CIl}}}}{{{Of{c}}}{{Lh{{An{c}}}}}{}}{{{f{CMh}}}{{Lh{CMh}}}}{{{Lh{Af}}}{{Lh{{An{Al}}}}}}{{{f{CMb}}}{{Lh{CMb}}}}{{{f{CIl}}}{{Lh{CIl}}}}{CMj{{Lh{CMh}}}}{{{Dj{c}}}{{Lh{c}}}{CMlNj}}{cc{}}00000{CMnBDl}{CN`BDl}{BBjBB`}3{{{Lh{BBj}}}BB`}{{{f{{Lh{BBj}}}}}BB`}{{{f{BBl}}}BB`}{{{f{{An{B`}}}}}BB`}{{{f{BBj}}}BB`}88{{{Fn{AO`}}}BBj}9999{{c{C`{Hl}}}CNb{}}{{{CNd{Gf}}{CNd{Al}}{C`{Hl}}}CNf}{{{CNd{Gf}}{CNd{Al}}{C`{Hl}}}CNh}{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}00{c{{AKf{{l{e}}}}}{{Hb{}{{Cb{}}}}}n}{c{{AKf{{l{A`}}}}}{{Hb{}{{Cb{d}}}}}}{e{{Lh{{An{c}}}}}{}{{Hb{}{{Cb{c}}}}}}{eBB`{{ANl{Mn}}}{{Hb{}{{Cb{c}}}}}}{{gFf}{{CNj{Gf}}}Hh{{Hb{}{{Cb{{C`{c}}}}}}}{{Hb{}{{Cb{{C`{e}}}}}}}}0{e{{CNj{Gf}}}{{Hb{}{{Cb{{C`{d}}}}}}}{{Hb{}{{Cb{{C`{c}}}}}}}}{{{f{Af}}e}ABn{}{{Ch{}{{Cb{{C`{c}}}}}}}}{{gAEj}{{CNj{Gf}}}BFl{{Hb{}{{Cb{{C`{c}}}}}}}{{Hb{}{{Cb{{C`{e}}}}}}}}673{{{f{Af}}e}ABn{}{{Ch{}{{Cb{c}}}}}}{c{{AKf{{l{e}}}}}{{Hn{}{{Cb{}}}}}n}{e{{Lh{{An{c}}}}}I`{{Hn{}{{Cb{c}}}}}}`{c{{Bd{{CHf{AEb}}Bb}}}{{ANl{CHh}}}}{{}{{Lh{c}}}Nj}{c{{Lh{ec}}}BIfNj}{{{f{Af}}{f{{An{c}}}}}ABn{}}{{{f{Af}}{f{{An{{C`{c}}}}}}}ABn{}}{{{f{Af}}}{{Bd{CNl}}}}{c{{AKf{{l{A`}}}}}{{If{}{{Cb{d}}}}}}{c{{AKf{{l{e}}}}}{{If{}{{Cb{}}}}}n}{Ed{{BJ`{{Lh{BIn}}}}}}{{{f{Af}}c}CNn{}}{{{Fn{c}}AEj}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{Fn{c}}AEj}{{AJj{}{{ALl{e}}{ALn{c}}{AM`{g}}}}}{AMb{AMd{e}}}ABj{{Gb{}{{Cb{e}}}}IfI`Ib}}`{{{f{Af}}cFf}AH`{}}{{FfcAEj}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{}CG`}{{BD`BD`cc}BD`{{ANl{BHn}}}}{{{f{CO`}}{f{B@j}}ee}{{Bd{B@jBb}}}{{Hh{Af}}}{{Hb{}{{Cb{c}}}}}}{{{f{Af}}Ff}AHb}{{FfAEj}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}``{{BHnc{BJ`{{Lh{BIn}}}}COb}BHn{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}`{{BHnc}BHn{{ANl{BHn}}}}{{BHnFfFf}BHn}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{COdNj}BIf}{{{f{BJl}}Ff}{{Bd{IhBb}}}}{{BJhBHnd}BHn}{{BJjBHnd}BHn}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}Ff}{{C`{c}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}6{{{f{BB`}}{f{Af}}}{{C`{{f{Ed}}}}}}{{{f{AHd}}Ff}{{Bd{IhBb}}}}{{{f{AMl}}Ff}{{Bd{IhBb}}}}{{{f{AHd}}Ff}Ih}{{{f{AMl}}Ff}Ih}{{{f{BB`}}Ff}{{C`{{Gj{{f{{AOl{AOj}}}}{f{Ed}}}}}}}}{{{f{ClBB`}}Ff}{{C`{{Gj{{f{Cl{AOl{AOj}}}}{f{ClEd}}}}}}}}{BO`BHn}{{{f{BD`}}}CFj}{{{f{CFl}}}Ed}{{}Ed}{{{f{C@j}}GfC@d{C`{{f{AKl}}}}}{{Bd{C@bBb}}}}00{{{f{CIj}}{f{BB`}}COf{f{Mn}}{f{Mn}}}{{C`{Mn}}}}{{{f{BIn}}{f{BB`}}COf{f{{An{Mn}}}}}Mn}{{{f{BB`}}{f{Af}}}{{C`{Mn}}}}{{{f{AEj}}}{{f{{An{AO`}}}}}}{{{f{BJn}}}Ff}{{{f{BB`}}{f{Af}}}{{C`{{Gj{Ff{f{{AOl{AOj}}}}{f{Ed}}}}}}}}{{{f{Cl{BMh{c}}}}}{{Bd{{f{{Lh{CGd}}}}Bb}}}BHl}{{{f{BJl}}}{{C`{{f{ADl}}}}}}{{{f{Cl{Lh{ce}}}}}{{C`{{f{Clc}}}}}NjBIf}{{{f{Cl{Lh{ce}}}}}{{f{Clc}}}NjBIf}{{{f{COh}}}{{Fn{{f{Af}}}}}}{{{f{BB`}}}{{Fn{{f{Af}}}}}}{{{f{BBj}}}{{Fn{{f{Af}}}}}}{{{f{BJl}}Ff}{{C`{{f{In}}}}}}{{{f{BJl}}FfFf}{{C`{{f{In}}}}}}{{{f{BKd}}}{{C`{{BJ`{{Lh{BIn}}}}}}}}{{{f{C@j}}C@bC@dJl{C`{{f{AKl}}}}C@h}{{Bd{COjBb}}}}{{{f{C@l}}}{{Lh{C@n}}}}{{{f{Clc}}}{{Bd{COlBb}}}{BKbBHlNj}}{{{f{CLd}}{f{BB`}}}{{Bd{{Lh{BB`}}Bb}}}}{{cFf}{{Fn{{Gj{FfFf}}}}}{{Ch{}{{Cb{Ff}}}}}}{{{f{AOn}}Ff}Ih}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}Ff}{{C`{c}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{BJl}}Ff}Ih}{{{f{CGl}}}d}{{{f{BOh}}}d}`{{BD`e}BId{{ANl{BHn}}ABj}{{Hh{{An{c}}}}}}{{{f{COn}}{Fn{B`}}{f{BC`}}}{{Bd{{Gj{B`{Fn{B`}}Bh}}Bb}}}}{{BD`BHncBC`}BId{{Hh{{An{BHn}}}}}}2{{BE`BE`{f{{An{Gf}}}}C@dJl{C`{AKl}}}{{Bd{{Fn{{Of{Ij}}}}Bb}}}}{{C@j{f{{An{Gf}}}}C@dJl{f{{C`{Ef}}}}ddC@h}{{Gj{{Fn{{Of{Ij}}}}{Fn{Gf}}{Fn{Gf}}}}}}{{{f{BFb}}dd}{{Bd{BhBb}}}}{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}{{BHnc}BHn{{ANl{BHn}}}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{COdNj}BIf}21`{{{f{BJl}}}d}{{{f{D@`}}}d}{{{f{BC`}}{f{Clc}}}bAC`}{{{f{BDf}}{f{Clc}}}bAC`}{{{f{BE`}}{f{Clc}}}bAC`}{{{f{C@d}}{f{Clc}}}bAC`}{{{f{C@f}}{f{Clc}}}bAC`}{{{f{C@h}}{f{Clc}}}bAC`}{{{f{C@l}}{f{Clc}}}bAC`}{{{f{C@n}}{f{Clc}}}bAC`}{{{f{CA`}}{f{Clc}}}bAC`}{{{f{CAb}}{f{Clc}}}bAC`}{{{f{CAd}}{f{Clc}}}bAC`}{{{f{CAf}}{f{Clc}}}bAC`}{{{f{CAh}}{f{Clc}}}bAC`}{{{f{CAj}}{f{Clc}}}bAC`}{{{f{CAl}}{f{Clc}}}bAC`}{{{f{CAn}}{f{Clc}}}bAC`}{{{f{CB`}}{f{Clc}}}bAC`}{{{f{BHb}}{f{Clc}}}bAC`}{{{f{CBb}}{f{Clc}}}bAC`}{{{f{CBd}}{f{Clc}}}bAC`}{{{f{CBf}}{f{Clc}}}bAC`}{{{f{CBh}}{f{Clc}}}bAC`}{{{f{CBj}}{f{Clc}}}bAC`}{{{f{CBl}}{f{Clc}}}bAC`}{{{f{CBn}}{f{Clc}}}bAC`}{{{f{CC`}}{f{Clc}}}bAC`}{{{f{CCb}}{f{Clc}}}bAC`}{{{f{CCd}}{f{Clc}}}bAC`}{{{f{CCf}}{f{Clc}}}bAC`}{{{f{CCh}}{f{Clc}}}bAC`}{{{f{CCj}}{f{Clc}}}bAC`}{{{f{CCl}}{f{Clc}}}bAC`}{{{f{CCn}}{f{Clc}}}bAC`}{{{f{CD`}}{f{Clc}}}bAC`}{{{f{CDb}}{f{Clc}}}bAC`}{{{f{BLb}}{f{Clc}}}bAC`}{{{f{BHn}}{f{Clc}}}bAC`}{{{f{CDn}}{f{Clc}}}bAC`}{{{f{BNd}}{f{Clc}}}bAC`}{{{f{CE`}}{f{Clc}}}bAC`}{{{f{CEb}}{f{Clc}}}bAC`}{{{f{CEd}}{f{Clc}}}bAC`}{{{f{CEf}}{f{Clc}}}bAC`}{{{f{CEh}}{f{Clc}}}bAC`}{{{f{BJd}}{f{Clc}}}bAC`}{{{f{CEn}}{f{Clc}}}bAC`}{{{f{CF`}}{f{Clc}}}bAC`}{{{f{CFb}}{f{Clc}}}bAC`}{{{f{CFd}}{f{Clc}}}bAC`}{{{f{CFf}}{f{Clc}}}bAC`}{{{f{CFh}}{f{Clc}}}bAC`}{{{f{CFl}}{f{Clc}}}bAC`}{{{f{CFn}}{f{Clc}}}bAC`}{{{f{CG`}}{f{Clc}}}bAC`}{{{f{{Lh{ce}}}}{f{Clg}}}b{D@bNj}BIfAC`}{{{f{CGb}}{f{Clc}}}bAC`}{{{f{BDj}}{f{Clc}}}bAC`}{{{f{BB`}}{f{Clc}}}bAC`}{{{f{AO`}}{f{Clc}}}bAC`}{{{f{Nd}}{f{Clc}}}bAC`}{{{f{CGj}}{f{Clc}}}bAC`}{{{f{D@d}}{f{B`}}CBhd}{{Bd{{Gj{{Gj{{Fn{Ij}}{Fn{Ij}}}}d}}Bb}}}}{{{f{D@d}}{f{B`}}CBhd}{{Bd{{Gj{{AKb{Ij}}{AKb{Ij}}}}Bb}}}}{{BId{C`{Ff}}}BD`}{{BJjBHn}BHn}{{BHn{C`{Ff}}}BHn}{{{f{BLj}}}{{Bd{{l{Ad}}Bb}}}}{{{f{BLj}}}{{l{Ad}}}}`{{{f{{An{{f{{l{Ad}}}}}}}}{f{Af}}d}{{Bd{{l{Ad}}Bb}}}}{{{f{D@f}}}{{l{Mb}}}}{{{f{CIf}}}{{l{Mb}}}}{{{f{BOd}}}{{Bd{{l{Mb}}Bb}}}}`{{{f{CIh}}}{{l{Jj}}}}`{{BIhCBf}BIh}``{{{f{A@b}}}Ij}`{{{f{{Jh{JnJj}}}}{f{{l{Ad}}}}CGj{Fj{Gf}{{Dd{AKj}}}}{Fj{AKj}{{Dd{Gf}}}}{f{AKl}}{f{AKl}}}{{Bd{{l{Jj}}Bb}}}}{{{f{{Jh{JnJj}}}}{C`{{f{Af}}}}{Fj{Gf}{{Dd{AKj}}}}{Fj{AKj}{{Dd{Gf}}}}{f{AKl}}{f{AKl}}}{{Bd{{l{Jj}}Bb}}}}{BHnBHn}{{{f{AKj}}}d}{{{BLn{c}}d}{{BLn{c}}}BMb}``0`{{}b}{cb{ABjBIf}}{cBHn{{Hh{{An{Gf}}}}}}``{{{f{COh}}{f{Af}}}{{C`{Ff}}}}{{{f{BB`}}{f{Af}}}{{C`{Ff}}}}{{{f{BBj}}{f{Af}}}{{C`{Ff}}}}{{{f{{An{Ij}}}}}{{`{{Ch{}{{Cb{Ff}}}}}}}}{{{f{COl}}Al{C`{Ff}}d{C`{{f{BB`}}}}FfFf{C`{{f{CAb}}}}{C`{Al}}Al{C`{{f{CAd}}}}dd{f{Cl{C`{Ff}}}}d}{{Bd{{Gj{BB`FfFf}}Bb}}}}{{{CLb{c}}{C`{{D@h{Ff}}}}}{{CLb{c}}}BHl}{{{CHf{c}}{C`{{D@h{Ff}}}}}{{CHf{c}}}BHl}``{{}Ff}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{ClAAf}}}{{Cf{Cd}}}}{{BD`BD`cc}BD`{{ANl{BHn}}}}{{{f{CO`}}{f{B@j}}ee}{{Bd{B@jBb}}}{{Hh{Af}}}{{Hb{}{{Cb{c}}}}}}{{{f{ClNl}}}{{f{ClJb}}}}`{{{f{ClBB`}}Ff{AOl{AOj}}Ed}{{Bd{{C`{Ed}}Bb}}}}{{BHnBHnGfEd}BHn}{{BHnBHnBHn}BHn}``{{{f{B`}}CCd}B`}{{BHnCCd}BHn}`{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{BHnBHn}BHn}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BDl{{Gj{{Fn{AO`}}{Fn{{Cf{Cd}}}}{C`{Hl}}}}}}{{{AKf{c}}}c{}}{{{Lh{ce}}}{{C`{c}}}{}BIf}33{{{f{BHn}}}}{{{f{BDl}}}}{BB`}{D@jBJj}{BJjBJj}{{{Lh{ce}}}{}NjBIf}{{{Lh{ce}}}{{Gj{e}}}NjBIf}{{C@lc}{{BHh{c}}}BHl}{{B@`Ed}{{Bd{LdBb}}}}{BBbB`}{{{Lh{BJl}}}B`}{CGdD@l}{BDb{{Fn{c}}}{}}{c{{Fn{{AOl{AOj}}}}}{}}{c{{Fn{Ef}}}{}}{{{f{CBf}}}d}{{{f{B`}}{f{B`}}{f{B`}}CCh}{{Bd{{l{A`}}Bb}}}}{{BHnccCCh}BHn{{ANl{BHn}}}}{cd{{Hh{CMb}}}}{{{f{{An{Al}}}}}d}{{{f{BE`}}{C`{{f{Af}}}}}d}{{{f{CG`}}}d}{{{f{BJl}}}d}{{{f{BB`}}}d}{{{f{BBj}}}d}{{{f{BMj}}}d}{BHnBHn}{{{f{B`}}}{{Bd{{l{A`}}Bb}}}}{{{f{AHf}}}{{Bd{{l{A`}}Bb}}}}27{{{f{BE`}}}d}{{{f{B`}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}{{BHnc}BHn{{ANl{BHn}}}}54{{{f{AHh}}}{{Bd{{l{A`}}Bb}}}}6{{{f{CId}}}{{l{A`}}}}{{{f{CIf}}}{{l{A`}}}}{{{f{BOd}}}{{Bd{{l{A`}}Bb}}}}999{{{f{BJl}}}{{l{A`}}}}::0{{{f{Nl}}}d};{{{f{A@b}}}d}`{{{f{B`}}}d}{{{f{{Lh{AEb}}}}}d}{{}d}{{{f{CJn}}Eh}{{Bd{dBb}}}}{{{f{c}}}d{}}0{{{f{CBh}}{f{CBf}}}{{Bd{bBb}}}}4?{{{f{CId}}}{{l{Jd}}}}{{{f{CIf}}}{{l{Jd}}}}{{{f{BOd}}}{{Bd{{l{Jd}}Bb}}}}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}{{AFb{cgAF`}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{BDl}}}{{AFb{{Fn{{Cf{CKb}}}}D@nAF`}}}}{{{f{BB`}}}{{`{{Ch{}{{Cb{{Gj{{f{{AOl{AOj}}}}{f{Ed}}}}}}}}}}}}{{{f{BB`}}}{{`{Kf}}}}{{{f{ClBB`}}}{{`{Kf}}}}11{{BJhBHnd}BHn}{{BD`BD`ccBHb}BD`{{Hh{{An{BHn}}}}}}{{BJjBHnd}BHn}{{{f{CO`}}{f{B@j}}eeBHb}{{Bd{B@jBb}}}{{Hh{Af}}}{{Hb{}{{Cb{c}}}}}}{{{f{DA`}}{f{B@j}}{f{Af}}{f{Af}}eeCC`{C`{Ih}}}{{Bd{B@jBb}}}{{Hh{Af}}}{{Hb{}{{Cb{c}}}}}}{BD`BIh}{{{f{DAb}}{f{Af}}d}{{Bd{{l{Ad}}Bb}}}}{{{f{DAb}}{f{{l{Ad}}}}d}{{Bd{{l{Ad}}Bb}}}}{{BIhd}BIh}`{CKhBHn}{DAdBHn}{{{f{CGd}}}{{f{{C`{{Fn{DAf}}}}}}}}``{{}BHn}{BD`BD`}{BJjBHn}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}{{C`{c}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{BHnBHn}{DAhBD`}4{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{COdNj}BIf}`{{BD`BD`cc}BD`{{ANl{BHn}}}}{{{f{CO`}}{f{B@j}}ee}{{Bd{B@jBb}}}{{Hh{Af}}}{{Hb{}{{Cb{c}}}}}}{{BIhc}BIh{{Hh{{An{BHn}}}}}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}e{}{}{}}{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}<{{{f{BJl}}}Ff};9{{{f{BDl}}}Ff}{{{f{BB`}}}Ff}{{{f{BBj}}}Ff}{{BD`Ij}BD`}{{{f{BJl}}Ff}B`}{{{f{BMj}}}d}`{BHnBJj}{cBHnDAj}{DAjBHn}{BE`BHn}{DAlBHn}{CFlBHn}{{BHnc}BHn{{ANl{BHn}}}}0``{{BOld}BOl}{{{CHf{c}}d}{{CHf{c}}}BHl}```{BHnBHn}{{{f{DAb}}}{{l{Ej}}}}0{{{f{DAb}}{f{{An{B`}}}}}{{Bd{{l{j}}Bb}}}}{{{f{DAb}}GfCJd}{{Bd{{l{j}}Bb}}}}{{{f{DAb}}Gfd}{{Bd{B`Bb}}}}{{{f{DAb}}{f{{l{Ad}}}}d}{{Bd{{l{Ad}}Bb}}}}4{{{f{DAb}}}{{Bd{B`Bb}}}}{{{f{DAb}}}B`}01{{{f{DAb}}}{{Bd{{l{Ej}}Bb}}}}{{{f{DAb}}}{{l{j}}}}{{{f{DAb}}{f{B`}}}{{Bd{{l{j}}Bb}}}}{{{f{DAb}}GfFf}{{l{j}}}}{{{f{DAb}}Eh}{{Bd{{l{j}}Bb}}}}{{{f{DAb}}Al}B`}7{{{f{DAb}}}{{Bd{{l{j}}Bb}}}}01{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}{{BHnc}BHn{{ANl{BHn}}}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{COdNj}BIf}21``````{{{f{ALb}}{f{ALb}}}{{Bd{{Gj{ALbALb}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gj{{l{j}}{l{j}}}}Bb}}}}{{{f{Cl{Lh{ce}}}}}{{f{Clc}}}ABj{BIfABj}}{{BD`cCFj{C`{{Lh{CLd}}}}{C`{{f{Af}}}}}BD`{{Df{B@j}{{Dd{{Bd{B@jBb}}}}}}I`Ib}}{{DAdc}BHn{{Df{{f{Af}}}{{Dd{{Bd{EfBb}}}}}}I`Ib}}{{BHnc{BJ`{{Lh{BIn}}}}}BHn{{Df{B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}{{BHnBHnc{BJ`{{Lh{BIn}}}}}BHn{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}{{BHn{f{Clc}}{f{Cl}}}{{Bd{BHnBb}}}{{Dn{BHn{f{Cl}}}{{Dd{{Bd{BHnBb}}}}}}}}{{{f{BJn}}{C`{{f{Ef}}}}}{{Bd{MnBb}}}}{{{f{BJn}}c}{{Bd{MnBb}}}{{A@d{{f{Ed}}}{{Dd{Ed}}}}}}{c{{BJ`{{Lh{BIn}}}}}{{Df{{f{Ed}}}{{Dd{Ed}}}}I`Ib}}{c{{BJ`{{Lh{BIn}}}}}{{Df{{f{{An{{f{Ed}}}}}}}{{Dd{Ed}}}}I`Ib}}{{BHnc}BHn{{Dn{BHn}{{Dd{BHn}}}}}}{c{{BJ`{{Lh{BIn}}}}}{{Df{{f{Mn}}}{{Dd{Mn}}}}I`Ib}}{{DAd{Lh{Df}}}BHn}{c{{BJ`{{Lh{BIn}}}}}{{Df{{f{{An{Mn}}}}}{{Dd{Mn}}}}I`Ib}}:{{ce{BJ`{{Lh{BIn}}}}}BHn{{Df{{f{Cl{An{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}{{Hh{{An{BHn}}}}}}{{BHnc{f{{An{BHn}}}}{BJ`{{Lh{BIn}}}}}BHn{{Df{{f{Cl{An{B`}}}}}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`Ib}}{{BHnBJd{f{{An{BHn}}}}dd}BHn}2{{{f{BJn}}}{{Bd{MnBb}}}}{{C@lc}C@l{{Df{C@n}{{Dd{C@n}}}}}}1111{CFlCFl}{{{C`{{f{{An{Ff}}}}}}{f{BBj}}{C`{{f{{An{B`}}}}}}{C`{{f{DAn}}}}}B@j}{{{C`{{f{{An{Ef}}}}}}{f{BB`}}{C`{{f{{An{B`}}}}}}d}{{C`{{Fn{Ff}}}}}}{{{f{Af}}}BHn}{BJhBHn}{BD`BD`}{BJjBHn}{{{f{AHj}}}{{C`{c}}}{}}{BHnBHn}{{{f{DB`}}}Ld}{{{f{BJl}}}{{Bd{LdBb}}}}``754{{{f{AHj}}}{{C`{Lf}}}}3{{{f{BJl}}}{{C`{Lf}}}}9876{{{f{AHl}}}{{C`{c}}}{}}51{{{f{DBb}}}Ld}4{{BD`BDd}BD`}``{{{CKl{c}}{C`{CHh}}}{{CKl{c}}}BHl}{{{f{ClBB`}}BB`}b}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}{{{f{ClBB`}}{f{BB`}}}b}````{{{f{CIh}}}{{l{Jj}}}}`{{{f{BOd}}}{{Bd{{l{Jd}}Bb}}}}1`{{{f{Af}}}BHn}{BJhBHn}{BD`BD`}{BJjBHn}{{{f{AHj}}}{{C`{c}}}{}}{BHnBHn}{{{f{AHj}}}{{C`{{Gj{cc}}}}}{}}```{{{f{DB`}}}Ld}{{{f{BJl}}}{{Bd{LdBb}}}}``{{{f{D@f}}}{{l{Mb}}}}{{{f{CIf}}}{{l{Mb}}}}{{{f{BOd}}}{{Bd{{l{Mb}}Bb}}}}`=```6{{{f{CId}}}{{l{Mb}}}}21`{{{f{BE`}}}Gf}{{{f{BE`}}}d}{{{BI`{}{{Dd{c}}}}{f{B`}}}c{}}{{BE`Gf}BE`}{{BHnBHn}}{{{f{BIb}}{f{B`}}}{{Bd{B`Bb}}}}``{{{f{BJl}}}Ff}{{{f{CGl}}}{{C`{Ff}}}}{{{f{BOh}}}{{C`{Ff}}}}{{{f{BOl}}}{{C`{Ff}}}}`````{{{BLn{c}}Ff}{{BLn{c}}}BMb}`{BJhBHn}{BJjBHn}{{{f{AGb}}}{{Bd{FfBb}}}}{BHnBHn}{{{f{BJl}}}{{Bd{FfBb}}}}{{{f{BJl}}}{{f{Af}}}}{BHnDAd}````33`{{{f{D@f}}}{{l{Jd}}}}{{{f{CIf}}}{{l{Jd}}}}{{{f{BOd}}}{{Bd{{l{Jd}}Bb}}}}{{{f{CIh}}}{{l{Jj}}}}{{{f{BE`}}}Gf}`{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}d{CK`Nj}BIf}{{{f{CBh}}}d}{BE`}{BHn}{{{f{B`}}}{{Bd{B`Bb}}}}0{{{f{BE`}}}d}{{DBdFf}{{C`{Ff}}}}{{BHnc}BHn{{ANl{BHn}}}}0{{{f{BJn}}}{{Bd{MnBb}}}}{{}c{}}{cCKjBKb}{cCHlBMb}2{{{f{Af}}c}DBf{}}{c{{AKf{c}}}{}}{BD`BIh}{c{{BHh{c}}}BHl}{cBOh{{Hh{CMb}}}}{cBOl{{Hh{CMb}}}}{c{{BLn{c}}}BMb}{{{f{{An{Mn}}}}}BJn}{c{{CKl{c}}}BHl}{c{{BK`{c}}}BKb}{c{{CKn{c}}}BMb}{{}CHj}{c{{BMd{c}}}BMb}{{}CHn}{c{{CL`{c}}}BMb}{GfBE`}{c{{CLb{c}}}BHl}{{BE`BE`BE`}C@j}{c{{CHf{c}}}BHl}{{DBh{Lh{CGd}}{Lh{BBj}}Ff{C`{{Fn{Ff}}}}{C`{{Lh{BHj}}}}{C`{DAn}}Ffd{C`{{Fn{B`}}}}CBl}{{Bd{BMjBb}}}}{c{{BMh{c}}}BHl}{c{{BMl{c}}}{BMbBMb}}{CBfBHb}{c{{BJ`{c}}}{}}{{BHnBHnBHn}CEj}{{}CEl}{{{f{Af}}{Fn{Mn}}{BJ`{{Lh{BIn}}}}c}BNhBKd}{c{{Lh{c}}}{}}{{AEj{Fn{{Cf{Cd}}}}{C`{Hl}}}BDl}{{}BB`}{{cAEjd}AO`{{ANl{Ef}}}}{e{{Lh{c}}}{}{{A@d{{f{{CJf{c}}}}}{{Dd{c}}}}}}{AEjBDl}{{{f{AHn}}FfFf}{{l{c}}}Db}{{{f{BJl}}FfFf}B`}{{{f{Af}}}CAb}{{ce}{{Lh{ce}}}{}BIf}{{{f{BB`}}Ff{AOl{AOj}}Ed}{{Bd{BB`Bb}}}}{{Gf{f{Af}}}{{Bd{B`Bb}}}}{EfCAb}{{AEjFf}BDl}{{{Lh{{An{CHh}}}}}BOh}{{{Lh{{An{CHh}}}}}BOl}{AlCAb}``{{}{{Lh{{BLh{c}}}}}{}}{c{{Lh{{BLh{e}}c}}}BIf{}}{Ff{{Lh{{An{{BLh{c}}}}}}}{}}{{Ffc}{{Lh{{An{{BLh{e}}}}c}}}BIf{}}3210{{{f{ClDBj}}}C`}{{{f{ClCOj}}}C`}{{{f{ClBN`}}Ff}{{Bd{{C`{{Fn{B@j}}}}Bb}}}}{{{f{ClBLl}}Ff}{{Bd{{C`{{Fn{B@j}}}}Bb}}}}{{{f{ClBMj}}Ff}{{Bd{{C`{{Fn{B@j}}}}Bb}}}}{{{f{BHn}}{f{Cl{BEd{{f{BHn}}}}}}}b}{{BHn{f{Cl{BEd{BHn}}}}}b}{BHnBHn}0{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}0{GfBHn}`{{}A@b}{{}Nl}`{{{f{BJl}}}Ff}{BD`BD`}6`````{{{f{Cl{BMh{c}}}}}{{Bd{FfBb}}}BHl}````{{{f{AGj}}}{{Bd{{Gh{Gf}}Bb}}}}{{BIhc}BIh{{Hh{{An{BHn}}}}}}{{BD`{f{Cl{BGl{BGj}}}}{f{Cl{BGl{BGn}}}}}{{Bd{BGhBb}}}}`{{BHnc}BHn{{ANl{BHn}}}}{{{f{CId}}}{{l{Ln}}}}{{{f{CIf}}}{{l{Ln}}}}{{{f{BOd}}}{{Bd{{l{Ln}}Bb}}}}{{{f{BOd}}}{{Bd{{l{Jd}}Bb}}}}{{CDhc}BHn{{ANl{BHn}}}}{{CDlc}BHn{{ANl{BHn}}}}`{{BHne}BHn{{ANl{BHn}}ABj}{{Hh{{An{c}}}}}}{{BHne{C`{{Gj{eEh}}}}CFf}BHn{{ANl{BHn}}ABj}{{Hh{{An{c}}}}}}```{{{f{Af}}}BE`}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}}{{Jh{JfJd}}}}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}}{{Jh{KhJj}}}}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}Jl}{{Jh{JnJj}}}}``{{{f{BE`}}{f{BE`}}}{{C`{B@d}}}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}{{C`{B@d}}}{COdNj}BIf}`{{{f{CGl}}}{{f{{An{CHh}}}}}}{{{f{BOh}}}{{f{{An{CHh}}}}}}{{{f{BOl}}}{{f{{An{CHh}}}}}}``{{}BHn}{c{{DBl{{Lh{c}}}}}{}}{{ce}{{DBl{{Lh{ce}}}}}{}BIf}````{{BHnc}BHn{{ANl{BHn}}}}```{{DAd{f{Af}}}BHn}0{{{f{B@j}}{f{B@j}}d}{{Bd{{Gj{{On{{Fn{Ij}}{Fn{Nl}}}}{On{{Fn{A@b}}{Fn{Nl}}}}}}Bb}}}}`{{{f{DB`}}}Ld}{BHnBHn}{BD`{{Bd{{Gj{B@jB@j}}Bb}}}}```{{{f{{Lh{c}}}}{f{ClDBn}}}b{AJnNj}}{{{f{{Lh{ce}}}}{f{{Lh{ce}}}}}dNjBIf}{{{f{Af}}BHnNd}BHn}{{BD`BHnNd}BD`}{{{f{AHl}}LfNd}{{Bd{{C`{c}}Bb}}}{}}{{BHnBHnNd}BHn}{{{f{DBb}}LfNd}{{Bd{LdBb}}}}{{{f{BJl}}LfNd}{{Bd{LdBb}}}}{{{f{CId}}}{{l{Mb}}}}{{{f{CIf}}}{{l{Mb}}}}{{{f{BOd}}}{{Bd{{l{Mb}}Bb}}}}{{{f{Clc}}e}{{Bd{{f{Clg}}BAj}}}{}CKf{}}````{{{f{DC`}}CD`{C`{Jb}}}B`}{{BHnCD`{C`{Jb}}}BHn}{{{f{Cl{Lh{AEb}}}}{f{Cl{An{Al}}}}}{{Bd{FfBAj}}}}{{{f{Cl{Lh{AEb}}}}DCb}{{Bd{bBAj}}}}{{{BMh{c}}CBl}{{BMh{c}}}BHl}{{{f{Cl{Lh{AEb}}}}{f{Cl{Fn{Al}}}}}{{Bd{FfBAj}}}}{{{f{Cl{Lh{AEb}}}}{f{ClEf}}}{{Bd{FfBAj}}}}{{{f{Clc}}}{{Bd{eBAj}}}{}DCd}{{{f{Cl{Lh{AEb}}}}{f{Cl{An{DCf}}}}}{{Bd{FfBAj}}}}{{{f{CGl}}}d}{{{f{BJl}}}B`}{{{f{BOh}}}d}{{{f{BOl}}}d}````{{ce}BHn{{Df{B`B`}{{Dd{{Bd{{C`{B`}}Bb}}}}}}I`IbABj}{{Hh{{An{BHn}}}}}}{{{f{AI`}}}B`}0{{{BI`{}{{Dd{c}}}}{f{B`}}}c{}}{{BHnBHn}}{{{f{BIb}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{ClBB`}}{f{Af}}}{{C`{Ed}}}}{{{f{ClBJl}}{f{Af}}}b}{{BD`ei}BD`{{Hh{Af}}}{{Hb{}{{Cb{c}}}}}{{Hh{Af}}}{{Hb{}{{Cb{g}}}}}}{{{f{ClBB`}}{f{Af}}{AOl{AOj}}}{{C`{{AOl{AOj}}}}}}{{CKh{Fn{Ef}}}BHn}{{cBHn}BHn{{ANl{BHn}}}}{{{f{B`}}{f{{l{Ej}}}}}{{Bd{{l{j}}Bb}}}}{{BHnc}BHn{{ANl{BHn}}}}{{{f{B`}}{f{B`}}{f{B`}}{f{B`}}{C`{Ed}}}{{Bd{B`Bb}}}}{{{f{BLj}}{f{Af}}{f{Af}}}{{Bd{{l{Ad}}Bb}}}}{{BHncc{C`{c}}{C`{Ed}}}BHn{{ANl{BHn}}}}1{{{f{BJn}}{C`{Ed}}}{{Bd{MnBb}}}}{{{f{BLj}}{f{Af}}{f{Af}}Ff}{{Bd{{l{Ad}}Bb}}}}3{{{f{{Jh{JnJj}}}}{C`{{f{Af}}}}{f{{l{Ad}}}}CGj}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{ClBB`}}Ff}b}{{BHn{f{{An{Gf}}}}CFh}BHn}{{{f{CMb}}}CHh}`{{{f{AIb}}}AIb}{{{f{BJl}}}B`}{BJhBHn}{BD`BD`}{BJjBHn}{BHnBHn}`{{BIhc}BIh{{Hh{{An{BHn}}}}}}{{{f{COn}}{Fn{B`}}{f{BDf}}}{{Bd{{Gj{B`{Fn{B`}}Bh}}Bb}}}}{{BD`BHncBDf}BId{{Hh{{An{BHn}}}}}}{{BHnBDf}BHn}{{{f{AId}}{f{Df}}Nf}{{Bd{B`Bb}}}}{{BHn{Lh{Df}}{BJ`{{Lh{BIn}}}}Nf}BHn}{{{f{BJl}}{f{Df}}Nf}{{Bd{B`Bb}}}}{{BHnFfc}BHn{{Dn{{f{Cl{l{Eb}}}}}{{Dd{{C`{Lf}}}}}}I`IbDh}}{{{f{DCh}}Nf}{{Bd{B`Bb}}}}{{BHnNf}BHn}{{{f{DCh}}{f{B`}}C@`}{{Bd{B`Bb}}}}{{BHnBHnC@`}BHn}32102032103{{BHnNdLfNf}BHn}2{{BHnBHnNdLfC@`}BHn}543254325432{{{f{DCj}}{f{{l{Ad}}}}{C`{{f{AKl}}}}}{{Bd{DCjBb}}}}{{{f{BOb}}Ij}{{Bd{B`Bb}}}}{{BHnIj}BHn}{{{f{C@j}}Gf{C`{{f{AKl}}}}}{{Bd{GfBb}}}}0{{{f{BOb}}Ml}{{Bd{B`Bb}}}}{{BHnMl}BHn}2````{{{f{CGl}}}{{C`{{f{DAn}}}}}}{{{f{BOh}}}{{C`{{f{DAn}}}}}}{{{f{BOl}}}{{C`{{f{DAn}}}}}}``````{{{f{DAb}}{l{j}}}{{l{j}}}}{{}{{BJ`{{Lh{BIn}}}}}}{{BHnBHndd{C`{Jb}}}BHn}0`{{{f{BIj}}DCl}{{Bd{B@jBb}}}}{{cBOj}{{Bd{BD`Bb}}}{{Hh{CMb}}}}{{{Lh{{An{CHh}}}}BOj}{{Bd{BD`Bb}}}}{{cBOn}{{Bd{BD`Bb}}}{{Hh{CMb}}}}{{{Lh{{An{CHh}}}}BOn}{{Bd{BD`Bb}}}}{{DCn{f{{An{Ij}}}}e}{{Bd{B`Bb}}}Dh{{Hb{}{{Cb{{C`{c}}}}}}}}{{{f{AIf}}c{C`{e}}}{{Bd{AIfBb}}}{{Hb{}{{Cb{Ij}}}}}{}}{{{f{AIf}}ci}{{Bd{AIfBb}}}{{Hb{}{{Cb{Ij}}}}}{}{}{{Df{{C`{e}}}{{Dd{{C`{g}}}}}}}}{{{f{ClBD`}}}{{Bd{{Lh{BB`}}Bb}}}}{{{f{Cl{CKl{c}}}}}{{Bd{{Lh{BBj}}Bb}}}BHl}{{{f{Cl{BK`{c}}}}}{{Bd{BB`Bb}}}BKb}{{{f{BMj}}}{{f{{Lh{BBj}}}}}}{{{f{Cl{BMh{c}}}}}{{Bd{{Lh{BBj}}Bb}}}BHl}{{{f{BIj}}{C`{Ff}}}{{Bd{{Lh{BB`}}Bb}}}}{{{f{CGd}}}{{f{DD`}}}}``````{{{f{ClBD`}}{f{Cl{BGl{BGj}}}}{f{Cl{BGl{BGn}}}}}{{Bd{{Lh{BB`}}Bb}}}}`{{{f{D@f}}}{{l{Mb}}}}{{{f{CIf}}}{{l{Mb}}}}{{{f{BOd}}}{{Bd{{l{Mb}}Bb}}}}`{{{f{CIh}}}{{l{Jj}}}}`{{{f{Cl{Lh{AEb}}}}DDb}{{Bd{JbBAj}}}}{{BD`c}BD`{{Hh{{An{BHn}}}}}}0````{{{f{AIf}}{f{{l{A`}}}}{C`{c}}}{{Bd{AIfBb}}}{}}{{{f{BD`}}{BGl{BGj}}{BGl{BGn}}}b}{{{f{ClBB`}}{f{Af}}Ed}{{C`{Ed}}}}{{{f{ClBB`}}FfEd}{{C`{Ed}}}}{{{BMh{c}}d}{{BMh{c}}}BHl}{{{BMl{c}}d}{{BMl{c}}}BMb}{{{CKl{c}}d}{{CKl{c}}}BHl}{{{BK`{c}}d}{{BK`{c}}}BKb}{{{CLb{c}}d}{{CLb{c}}}BHl}4{{CKjd}CKj}{{BHnKl}BHn}{{{f{ClBDl}}{C`{Hl}}}b}{{{f{AIh}}Gf}{{l{c}}}Db}{{{f{BJl}}Gf}B`}{{BJhBHn}BHn}{{BD`c}BD`{{ANl{BHn}}}}{{BJjBHn}BHn}{{BHnBHn}BHn}{{{f{AIj}}Gfc}{{l{e}}}{}Db}{{BD`ce}BD`{{ANl{BHn}}}{{ANl{BHn}}}}{{BHnce}BHn{{ANl{BHn}}}{{ANl{BHn}}}}{{{f{ClBB`}}{f{Af}}}{{C`{Ed}}}}{{{f{ClBB`}}Ff}{{C`{{Gj{{AOl{AOj}}Ed}}}}}}{{{f{BHb}}}d}{BHnBHn}{{{f{ClAAh}}}b}{{{f{ClBJl}}}b}{{BHn{C`{Jb}}}BHn}``{{BD`CHhCAf}{{Bd{bBb}}}}{{BD`CHhCAn}{{Bd{bBb}}}}{{BD`CHhCBb}{{Bd{bBb}}}}{{BD`CHhCCb}{{Bd{bBb}}}}`````{{{f{BJl}}GfFf}B`}{{BD`GfIj}BD`}{{BJjBHnBHn}BHn}>{{{f{ClBDl}}FfFf}b}0```{{{f{AIl}}FfFf}AIl}{{{f{c}}FfFf}e{}{}}1022{{BDlFfFf}BDl}0`{{{f{AG`}}d}{{l{c}}}Db}{{BJhEh}BHn}{{BD`cEn}BD`{{BDb{{AOl{AOj}}}}}}{{BJjEh}BHn}{{BHnEh}BHn}{{BHneEn}BHn{{ANl{BHn}}ABj}{{Hh{{An{c}}}}}}{{BD`cEn}BD`{{Hh{{An{BHn}}}}}}{{{f{AG`}}Eh}{{l{c}}}Db}{{{f{BJl}}Eh}{{Bd{B`Bb}}}}{{{f{{Lh{c}}}}}{{C`{{f{AJn}}}}}{AJnNj}}{{{f{BLj}}{f{{l{Ad}}}}}{{l{j}}}}{{{f{BJl}}Gf}{{Gj{B`B`}}}}{{{f{BDl}}Ff}{{Gj{{Cf{Cd}}{Cf{Cd}}}}}}0{{{f{BLj}}{f{{l{Ad}}}}Ff}{{Bd{AL`Bb}}}}0{{{f{{l{Ad}}}}{f{{l{Ad}}}}e}{{l{j}}}{{Ch{}{{Cb{{f{Af}}}}}}}{{Df{{f{Af}}{f{Af}}}{{Dd{c}}}}}}4{{{f{{l{Ad}}}}{f{{l{Ad}}}}Ffed}{{Bd{AL`Bb}}}{{Ch{}{{Cb{{f{Af}}}}}}}{{Df{{f{Af}}{f{Af}}}{{Dd{c}}}}}}2{BHnBHn}`{{{f{CHd}}{f{{An{Al}}}}}{{l{A`}}}}{{{f{CHd}}{f{{l{Ab}}}}}{{l{A`}}}}`{{BJhAl}BHn}{{BD`Al}BD`}{{BJjAl}BHn}{{{f{AIn}}Al}{{C`{Lf}}}}{{BHnAl}BHn}{{{f{BJl}}Al}{{C`{Lf}}}}{{{f{DDd}}Al}Ld}{{{f{BJl}}Al}{{Bd{LdBb}}}}{{IjIj}Nl}{BHnDDf}{{{f{BLj}}{f{B`}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{l{Ad}}}}{f{Af}}d}{{l{Ad}}}}{{{f{BLj}}}{{l{Ej}}}}0{{{f{BLj}}}{{l{Ad}}}}{{{f{BLj}}{f{B`}}{f{B`}}}{{Bd{{l{Ad}}Bb}}}}4````{{{f{BOd}}{f{Af}}}{{Bd{B`Bb}}}}`{{BHnEd}BHn}`{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{Ad}}}}707070{{{f{BLj}}{f{{l{Ad}}}}}{{l{Ad}}}}10{{{f{{Lh{ce}}}}}FfNjBIf}{BHnCKh}{{{BI`{}{{Dd{c}}}}{f{B`}}}c{}}{{BHnBHn}}{{{f{BIb}}{f{B`}}}{{Bd{B`Bb}}}}{{BIhc}BIh{{Hh{Af}}}}{{DAd{f{Af}}}BHn}{{{f{BHb}}}{{f{Af}}}}`1{{{f{Af}}}BHn}{BJhBHn}{BD`BD`}{BJjBHn}{{{f{AHj}}}{{C`{c}}}{}}{BHnBHn}{{{f{DB`}}}Ld}{{{f{BJl}}}{{Bd{LdBb}}}}{{}{{BJ`{{Lh{BIn}}}}}}{{{f{Clc}}i}{{Bd{gBAj}}}{}{}{}{{A@d{{f{Cle}}}{{Dd{g}}}}}}{{BD`Ij}BD`}{{BId{C`{Ff}}}BD`}{{BJjBHn}BHn}{{BHn{C`{Ff}}}BHn}{{{f{AJ`}}{f{c}}}{{Bd{AJ`Bb}}}Nj}{{{f{BJl}}{f{{l{Ej}}}}}{{Bd{B`Bb}}}}{{{f{DDh}}{f{{An{Nl}}}}Kl}DDh}{{{f{DDh}}{f{{An{Nl}}}}}DDh}{{{f{BJl}}{f{{An{Ij}}}}}{{Bd{B`Bb}}}}{{{f{BJl}}{f{{An{Ij}}}}}B`}{{{f{AJb}}{f{c}}}AJbNj}{{{f{BJl}}{f{{l{Ej}}}}}B`}{{{f{ClBDl}}}{{C`{Hl}}}}{{BHnBHnBHn}BHn}{{CDfc}CDh{{ANl{BHn}}}}{{CDjc}CDl{{ANl{BHn}}}}`{{BHnBHnBE`C@d}BHn}```{{{f{BOd}}Jl}{{Bd{{l{Jj}}Bb}}}}{BD`{{Bd{DDjBb}}}}{CDd{{Bd{DDjBb}}}}1{{{f{CFl}}}{{C`{Ih}}}}{{BJjFf}BHn}{{{f{BB`}}d}BBj}{{{f{BDl}}}{{Cf{Cd}}}}{{{f{AJd}}}{{Fn{{f{{An{Al}}}}}}}}{{{f{BD`}}d}{{Bd{EfBb}}}}{{{f{DDl}}{C`{{f{Af}}}}d}{{Bd{B@jBb}}}}{{{f{BHf}}{C`{{f{Af}}}}d}{{Bd{B@jBb}}}}{{{f{BHn}}{f{BB`}}COf}{{Bd{MnBb}}}}{{{f{BLj}}{f{{l{Ej}}}}d}{{Bd{{l{Jj}}Bb}}}}{BJhBHn}{{{f{BLj}}}{{l{Ad}}}}{DAdBHn}{{{f{A@b}}}{{C`{Ij}}}}{{{f{c}}}e{}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BHnBHn}{{{f{BJn}}}{{Bd{MnBb}}}}{{{f{BOd}}{f{Af}}}{{Bd{B`Bb}}}}{{{f{c}}}Ef{}}00000000000{{{f{ClBB`}}{f{BB`}}}{{Bd{dBb}}}}`887``{{BD`IjcEn}BD`{{Hh{{An{BHn}}}}}}{{{f{BDl}}{f{BDl}}}Hl}{{{f{BDl}}f}Hl}10{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}g{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}g{}{}{}}{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}g{}{}{}}{{{f{DDn}}{C`{{f{AKl}}}}{f{{l{Ad}}}}}{{Bd{DDnBb}}}}{{{f{BE`}}Gf{C`{{f{AKl}}}}ceg}{{Bd{GfBb}}}{{Df{Gf}{{Dd{Gf}}}}}{{Df{Gf}{{Dd{AKj}}}}}{{Df{AKj}{{Dd{Gf}}}}}}{{{f{BE`}}Gf{C`{{f{AKl}}}}}{{Bd{GfBb}}}}{{{f{C@j}}Gf{C`{{f{AKl}}}}}{{Bd{GfBb}}}}10`10{g{{Bd{ALfe}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{{AEjg}{{Bd{ALhe}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{ANh{{Bd{eg}}}{}{{ALf{c}}AJj}{}}0{{ANhAEj}{{Bd{eg}}}{}{{ALh{c}}AJj}{}}0{{ACb{f{Af}}}{{Bd{{l{c}}e}}}Db{}}{{ACd{f{{l{c}}}}}{{Bd{{l{c}}e}}}Db{}}10{{ACd{f{Af}}Ed}{{Bd{{l{c}}e}}}Db{}}0{c{{Bd{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Ih{{Bd{CFlBb}}}}1111{{{Lh{{An{c}}e}}}{{Bd{{Lh{{Of{c}}e}}}}}{}BIf}22222222222222{D@l{{Bd{CGdBAh}}}}{{{f{BB`}}{f{Af}}}{{Bd{{f{Ed}}Bb}}}}{{{f{BB`}}Ff}{{Bd{{Gj{{f{{AOl{AOj}}}}{f{Ed}}}}Bb}}}}{{{f{BB`}}{f{Af}}}{{Bd{MnBb}}}}{{{f{BB`}}{f{Af}}}{{Bd{{Gj{Ff{f{{AOl{AOj}}}}{f{Ed}}}}Bb}}}}{{{f{ClBB`}}{f{Af}}}{{Bd{{f{ClEd}}Bb}}}}{{{f{COh}}{f{Af}}}{{Bd{FfBb}}}}9999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999999{{C@l{C`{CHh}}}{{Bd{{BHh{AEb}}Bb}}}}{{{f{BJn}}c}{{Bd{MnBb}}}{{A@d{{f{Ed}}}{{Dd{{Bd{EdBb}}}}}}}}{{{f{BJn}}c}{{Bd{MnBb}}}{{A@d{{f{{An{{f{Ed}}}}}}}{{Dd{{Bd{EdBb}}}}}}}}{{BHnc}{{Bd{BHnBb}}}{{Dn{BHn}{{Dd{{Bd{BHnBb}}}}}}}}{{{f{BJn}}c}{{Bd{MnBb}}}{{A@d{{f{Mn}}}{{Dd{{Bd{MnBb}}}}}}}}{{DBdFf}{{Bd{FfBb}}}}{Al{{Bd{CCjBb}}}}{Ij{{Bd{CCnBb}}}}{Ml{{Bd{CDbBb}}}}{c{{Bd{{Lh{c}}DE`}}}{}}{{AEj{Fn{{Cf{Cd}}}}{C`{Hl}}}{{Bd{BDlBb}}}}{{ce}{{Bd{{Lh{ce}}DE`}}}{}BIf}{{}{{Bd{{Lh{{BLh{c}}}}DE`}}}{}}{c{{Bd{{Lh{{BLh{e}}c}}DE`}}}BIf{}}10`{c{{Bd{{DBl{{Lh{c}}}}DE`}}}{}}{{ce}{{Bd{{DBl{{Lh{ce}}}}DE`}}}{}BIf}{{{f{BKd}}{f{Cl{Fn{Al}}}}}{{Bd{bBb}}}}{{{Lh{ce}}}{{Bd{c{Lh{ce}}}}}{}BIf}``{{{f{c}}}A@`{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Af}}}}`{{{f{AGb}}}{{Bd{AGbBb}}}}{BJhBHn}{{BD`{C`{{Fn{Ef}}}}BBf}BD`}{BJjBHn}{BHnBHn}{{{f{BJl}}}{{Bd{B`Bb}}}}4321{{BD`e}BD`{{Hh{Af}}}{{Hb{}{{Cb{c}}}}}}{{{Lh{{DEb{c}}}}}{{Bd{cb}}}I`}{{{Lh{ce}}}cABjBIf}{{{f{ClC@l}}{f{DEd}}}b}5{{{f{DEf}}c{f{Af}}BE`}{{Bd{B@jBb}}}{{BDb{Ef}}}}0{{{BMh{c}}d}{{BMh{c}}}BHl}```{{BIhCBh}BIh}`{{{f{BDl}}}{{C`{{f{Hl}}}}}}0{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}Ff}cABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{CJn}}ddEfd}{{Bd{B@jBb}}}}{{BHnddEfd}BHn}`2`{{{f{BDl}}}{{f{{An{{Cf{Cd}}}}}}}}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}gABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{BDl}}}D@n}{{BJhAl}BHn}{{BD`Al}BD`}{{BJjAl}BHn}{{{f{AIn}}Al}{{C`{Lf}}}}{{BHnAl}BHn}{{{f{BJl}}Al}{{C`{Lf}}}}{{{f{DDd}}Al}Ld}{{{f{BJl}}Al}{{Bd{LdBb}}}}`{{{f{DEh}}O`{f{Cl{Fn{Jb}}}}}{{Bd{bBb}}}}{{{f{DEh}}O`{f{Cl{An{Jb}}}}}{{Bd{bBb}}}}`{{{f{{Lh{{DEb{c}}}}}}g}{{Bd{eb}}}I`{}{{A@d{{f{c}}}{{Dd{e}}}}}}{ce{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{Lh{ce}}}}}FfNjBIf}{{{f{CId}}}{{l{Mb}}}}{{{f{CIf}}}{{l{Mb}}}}{{{f{BOd}}}{{Bd{{l{Mb}}Bb}}}}210{{{f{C@h}}}{{C`{Ij}}}}{{{f{BE`}}}Gf}`{{{f{BE`}}}d}`{cCDf{{ANl{BHn}}}}{{CDhc}CDj{{ANl{BHn}}}}{{CDlc}CDj{{ANl{BHn}}}}```{{BIhBD`}BIh}{{CEjBHn}CEj}{{BOl{C`{{D@h{Ff}}}}}BOl}{{{BLn{c}}{D@h{Ff}}}{{BLn{c}}}BMb}{{{CLb{c}}{D@h{Ff}}}{{CLb{c}}}BHl}{{BOhd}BOh}{Ffc{}}0{FfBB`}{{{CHf{c}}{C`{{D@h{Ff}}}}}{{CHf{c}}}BHl}{{C@lFf}C@l}{{BOh{C`{CGn}}}BOh}{{BD`d}BD`}{{BHbCBd}BHb}{{BD`BHn}BD`}{{{f{ClBB`}}{AOl{AOj}}Ed}{{C`{Ed}}}}{{BD`c}BD`{{Hh{{An{BHn}}}}}}{{{CKl{c}}{C`{{Fn{Ef}}}}}{{CKl{c}}}BHl}{{{BK`{c}}{C`{{Fn{Ef}}}}}{{BK`{c}}}BKb}{{{BMh{c}}{C`{{Fn{Ef}}}}}{{BMh{c}}}BHl}{{C@l{C`{{Lh{{An{Ef}}}}}}}C@l}`4{{BOh{C`{{f{Af}}}}}BOh}{{C@n{C`{c}}}C@n{{ANl{CAb}}}}{{{CKn{c}}{C`{CB`}}}{{CKn{c}}}{}}{{CHj{C`{CB`}}}CHj}{{{BMd{c}}{C`{CB`}}}{{BMd{c}}}BMb}{{CHn{C`{CB`}}}CHn}{{{BMl{c}}CCf}{{BMl{c}}}BMb}{{BD`c}BD`{{Hh{{An{BD`}}}}}}{{{BMl{c}}{C`{Ff}}}{{BMl{c}}}BMb}{{{BLn{c}}{C`{Ef}}}{{BLn{c}}}BMb}0{{CEjBHn}CEj}{{CElBHn}CEl}{{BOhd}BOh}{{C@nd}C@n}{{{f{BJn}}Ed}{{Bd{MnBb}}}}{{BOh{C`{{Lh{BB`}}}}}BOh}{{C@l{C`{{Lh{{Fn{Ed}}}}}}}C@l}{{BOhCA`}BOh}{{C@nCA`}C@n}{{BOhAl}BOh}{{C@nAl}C@n}{{CHjCHh}CHj}{{CHnCHh}CHn}{{CKh{Fn{BHn}}}BHn}{{{BLn{c}}{C`{Ff}}}{{BLn{c}}}BMb}{{CElBHnBHnBHn}CEl}=={{C@ld}C@l}{{{BMh{c}}{C`{{Fn{B`}}}}}{{BMh{c}}}BHl}{{CEjBHnBHnBHn}CEj}3{{CEjBHn}CEj}{{CElBHn}CEl}{{BOhd}BOh}{{BOld}BOl}{{{CLb{c}}d}{{CLb{c}}}BHl}{{{CHf{c}}d}{{CHf{c}}}BHl}8{{BOh{C`{Ff}}}BOh}{{BOl{C`{{D@h{Ff}}}}}BOl}{{C@l{C`{Ff}}}C@l}{{{CL`{c}}DEj}{{CL`{c}}}BMb}{{{CLb{c}}DEj}{{CLb{c}}}BHl}{{{BLn{c}}Ef}{{BLn{c}}}BMb}9>{{AO`{DEl{EfEf}}}AO`}{{BBj{DEl{EfEf}}}BBj}=<<=<;{{C@nd}C@n}>{{CGlc}CGl{{ANl{{C`{Ff}}}}}}9{{BOhc}BOh{{ANl{{C`{Ff}}}}}}{{BOl{C`{Ff}}}BOl}{{BOlc}BOl{{ANl{{C`{Ff}}}}}}{{{CKl{c}}{C`{Ff}}}{{CKl{c}}}BHl}{{{BK`{c}}{C`{Ff}}}{{BK`{c}}}BKb}{{{CHf{c}}{C`{Ff}}}{{CHf{c}}}BHl}{{{BMh{c}}{C`{Ff}}}{{BMh{c}}}BHl}>1>{{CElBHn}CEl}{{BD`d}BD`}={{BOh{C`{CAd}}}BOh}{{C@n{C`{CAd}}}C@n}{{BD`CFj}BD`}{{C@lC@n}C@l}{{{CHf{c}}{C`{e}}}{{CHf{c}}}BHl{{ANl{CHh}}}}{{C@l{C`{c}}}C@l{{ANl{CHh}}}}{{CGl{Lh{{An{CHh}}}}}CGl}{{BOh{Lh{{An{CHh}}}}}BOh}{{BOl{Lh{{An{CHh}}}}}BOl}{{{CKn{c}}d}{{CKn{c}}}{}}{{{BMd{c}}d}{{BMd{c}}}BMb}{{{CHf{c}}{C`{{Lh{BHj}}}}}{{CHf{c}}}BHl}{{{BMh{c}}{C`{{Lh{BHj}}}}}{{BMh{c}}}BHl}={{{CKl{c}}{C`{{Fn{Ff}}}}}{{CKl{c}}}BHl}{{{BK`{c}}{C`{{Fn{Ff}}}}}{{BK`{c}}}BKb}{{{CLb{c}}{C`{{Fn{Ef}}}}}{{CLb{c}}}BHl}{{{CHf{c}}{C`{{Lh{{An{Ef}}}}}}}{{CHf{c}}}BHl}{{{BMh{c}}{C`{{Fn{Ff}}}}}{{BMh{c}}}BHl}{{C@l{C`{{Lh{{Fn{Ff}}}}}}}C@l}{{BD`d}BD`}{{BOh{C`{Al}}}BOh}{{{BLn{c}}Al}{{BLn{c}}}BMb}{{C@n{C`{Al}}}C@n}{{{BLn{c}}CAj}{{BLn{c}}}BMb}{{BOhd}BOh}{{C@ld}C@l}{{CGld}CGl}2{{BOld}BOl}{{{CHf{c}}d}{{CHf{c}}}BHl}39{{{BMl{c}}{C`{Ff}}}{{BMl{c}}}BMb}{{CGlc}CGl{{ANl{{C`{DAn}}}}}}{{BD`{f{Af}}{C`{Ij}}}BD`}{{BOhc}BOh{{ANl{{C`{DAn}}}}}}{{BOh{C`{DAn}}}BOh}{{BOlc}BOl{{ANl{{C`{DAn}}}}}}{{BOl{C`{DAn}}}BOl}{{{CKl{c}}{C`{DAn}}}{{CKl{c}}}BHl}{{{BK`{c}}{C`{DAn}}}{{BK`{c}}}BKb}{{{CHf{c}}{C`{{f{ClDAn}}}}}{{CHf{c}}}BHl}{{{BMh{c}}{C`{DAn}}}{{BMh{c}}}BHl}{{C@l{C`{DAn}}}C@l}{{{f{BJn}}}{{Bd{MnBb}}}}{{C@lFf}C@l}{{BOh{C`{{Lh{BB`}}}}}BOh}{{BOl{C`{{Lh{BB`}}}}}BOl}{{{CLb{c}}{Lh{BB`}}}{{CLb{c}}}BHl}{{{CHf{c}}{Lh{BB`}}}{{CHf{c}}}BHl}{{{BMh{c}}{C`{{Lh{BBj}}}}}{{BMh{c}}}BHl}{{C@l{C`{{Lh{BB`}}}}}C@l}{{BOhc}{{Bd{BOhBb}}}{{Df{BB`}{{Dd{{Bd{BB`Bb}}}}}}}}{{{CLb{c}}{f{BB`}}}{{CLb{c}}}BHl}{{{CHf{c}}{f{BB`}}}{{CHf{c}}}BHl}3{{CEjBHn}CEj}{{CElBHn}CEl}{{BOhAl}BOh}{{{BLn{c}}Al}{{BLn{c}}}BMb}{{C@nAl}C@n}{{BD`d}BD`}{{BOhFf}BOh}{{C@lFf}C@l}102{{{BMl{c}}CG`}{{BMl{c}}}BMb}3{{BHb{C`{Ef}}}BHb}{{{BLn{c}}{C`{Ef}}}{{BLn{c}}}BMb}{{CEjJl}CEj}{{CEj{C`{Ef}}}CEj}{{BOhd}BOh}{{C@nd}C@n}109{{{f{BDl}}{C`{Hl}}}{{Cf{Cd}}}}{{BDl{C`{Hl}}}BDl}{{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}{C`{Hl}}}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{CElBHn}CEl}{{CEjBHn}CEj}{BD`BD`}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}{{{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}c}e{}{}{}}10{{c{A@l{}{{A@f{c}}{A@h{e}}{A@j{g}}}}}e{}{}{}}210213210210{{{f{Cl{Lh{AEb}}}}{f{{An{Al}}}}}{{Bd{FfBAj}}}}{{{f{Clc}}e}{{Bd{FfBAj}}}{}DCd}{{{f{Cl{Lh{AEb}}}}{f{{An{DEn}}}}}{{Bd{FfBAj}}}}{{BHnc}BHn{{ANl{BHn}}}}{{{f{CId}}}{{l{Jd}}}}{{{f{CIf}}}{{l{Jd}}}}{{{f{BOd}}}{{Bd{{l{Jd}}Bb}}}}``{{{f{AJf}}{f{{l{A`}}}}{f{{l{c}}}}}{{Bd{{l{c}}Bb}}}Db}`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{BEb}}c}B`{{Df{{Gj{Ij{f{{BEd{Ij}}}}}}}{{Dd{C`}}}}I`Ib}}{{{f{BEb}}c}B`{{Df{{Gj{Ij{f{{BEd{Ij}}}}}}}{{Dd{}}}}I`Ib}}{{{f{{An{{Of{Ij}}}}}}c}B`{{Df{{Of{Ij}}}{{Dd{C`}}}}I`Ib}}{{{f{{An{{Of{Ij}}}}}}c}B`{{Df{{Of{Ij}}}{{Dd{}}}}I`Ib}}{{{f{{An{c}}}}e{C`{{Lh{AEl}}}}}{{AKb{c}}}{BFjBFl}{{Ch{}{{Cb{{Gj{IjIj}}}}}}If}}{{{f{{An{c}}}}{f{Hl}}e{C`{{Lh{AEl}}}}}{{AKb{c}}}{BFjBFl}{{Ch{}{{Cb{{Gj{IjIj}}}}}}If}}{{{f{{l{c}}}}IjIj}{{l{c}}}Db}{{{f{{Fn{{Of{Ij}}}}}}{f{{An{{Cf{Cd}}}}}}}d}{{{f{BFn}}{f{Bh}}}B`}{{BG`BG`}BG`}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DbDb{{Df{ff}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}{{Df{f}{{Dd{}}}}}Db}{{{l{c}}{l{e}}gik}{{l{m}}}DbDb{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}{{Df{}{{Dd{}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DbDb{{AJh{C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}g}bDbDb{{Dn{C`C`}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DbDb{}{{Dn{}{{Dd{g}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Af}}}{{l{k}}}DbDb{CdAJj}{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Af}}}{{l{k}}}DbDbCd{{Dn{ff}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DbDbCd{{Dn{}{{Dd{g}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Bd{B`Bb}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DbDb{{Dn{ff}{{Dd{{Cf{Cd}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDb{}{}{{Dn{C`C`}{{Dd{{Bd{{C`{g}}i}}}}}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DbDbDb{{AJl{C`C`C`}}}Db}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Bd{{l{m}}i}}}DbDbCdAJn{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{H`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Af}}}{{Bd{{l{m}}i}}}DbDbCdAJn{{Dn{ff}{{Dd{{Bd{gi}}}}}}}{{Db{}{{H`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Bd{{l{c}}g}}}DbDbAJn{{Dn{ff}{{Dd{{Bd{{Cf{Cd}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Bd{{l{o}}k}}}DbDbDb{}{}{{Dn{C`C`C`}{{Dd{{Bd{{C`{i}}k}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{C`}{{Dd{{Bd{{C`{e}}g}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{}{}{{Dn{}{{Dd{{Bd{eg}}}}}}}Db}{{{f{{l{c}}}}i}{{Bd{{l{k}}g}}}Db{CdAJj}AJn{{Dn{f}{{Dd{{Bd{eg}}}}}}}{{Db{}{{H`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Db{{AK`{C`}}}Db}{{{f{{l{c}}}}e}{{l{g}}}DbAK`Db}{{{f{{l{c}}}}g}{{l{i}}}DbCd{{Dn{f}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}{{{l{c}}g}{{l{i}}}DbCd{{Dn{}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Db{CdAJj}{{Dn{f}{{Dd{e}}}}}{{Db{}{{H`{e}}}}}}0``{{{f{DF`}}}{{l{Ej}}}}0{{{f{DF`}}{f{{l{Jj}}}}d}{{Bd{B`Bb}}}}{{{f{DF`}}{f{{l{Ad}}}}d}{{Bd{B`Bb}}}}{{{f{DF`}}}B`}{{{f{DF`}}}{{Bd{B`Bb}}}}1{{{f{DF`}}}{{Bd{{l{Ej}}Bb}}}}{{{f{DF`}}}{{l{Bj}}}}{{{f{DF`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{DF`}}Eh}{{Bd{{l{Bj}}Bb}}}}{{{f{DF`}}Al}{{Bd{B`Bb}}}}5{{{f{DF`}}}{{Bd{{l{j}}Bb}}}}01{{{f{DFb}}}{{f{{l{Bj}}}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{BNbBHn}BHn}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}3{cc{}}{{}Ff}{ce{}{}}6{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}2````````{{{f{BKh}}{C`{{f{Af}}}}d}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKh}}{C`{{f{Af}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKh}}{C`{{f{Af}}}}Jldd{C`{{f{Ef}}}}{f{{l{Ad}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{BKh}}{C`{{f{Af}}}}Jld{C`{{f{Ef}}}}{f{{l{Ad}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{BKh}}{C`{{f{Af}}}}d}{{Bd{{Jh{KhJj}}Bb}}}}`{{{f{CId}}}{{l{Mb}}}}{{{f{CIf}}}{{l{Mb}}}}{{{f{CIh}}}{{l{Jj}}}}`{{{f{D@f}}}{{l{Mb}}}}21{{{f{CId}}}{{l{A`}}}}{{{f{CIf}}}{{l{A`}}}}{{{f{CId}}}{{l{Jd}}}}{{{f{CIf}}}{{l{Jd}}}}55`46576{{{f{D@f}}}{{l{Jd}}}}16{{{f{CId}}}{{l{Ln}}}}{{{f{CIf}}}{{l{Ln}}}}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}}{{Jh{JfJd}}}}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}}{{Jh{KhJj}}}}{{{f{Af}}{f{{An{{f{Af}}}}}}{f{Af}}Jl}{{Jh{JnJj}}}}=<{{{f{DCh}}Nf}{{Bd{B`Bb}}}}{{{f{DCh}}{f{B`}}C@`}{{Bd{B`Bb}}}}101010101010<>=`?>?>`98````````{{{f{c}}h}b{}}{{{f{BKh}}{C`{{f{Af}}}}d}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKh}}{C`{{f{Af}}}}}{{Bd{{Jh{JfJd}}Bb}}}}{{{f{BKh}}{C`{{f{Af}}}}Jldd{C`{{f{Ef}}}}{f{{l{Ad}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{BKh}}{C`{{f{Af}}}}Jld{C`{{f{Ef}}}}{f{{l{Ad}}}}}{{Bd{{Jh{JnJj}}Bb}}}}{{{f{DFd}}}{{f{{l{Ad}}}}}}{{{f{BKh}}{C`{{f{Af}}}}d}{{Bd{{Jh{KhJj}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DFf}}}DFf}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DFf}}{f{DFf}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{DFf}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{DFf}}{f{Clc}}}bAC`}`{{}Ff}{ce{}{}}{{{f{DFf}}{f{Af}}}d}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{{DFh{c}}}}}{{DFh{c}}}{ABjn}}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}?{{{f{Af}}}{{C`{DFf}}}}>=`{{{f{Cl{DFh{c}}}}{f{Af}}}C`n}{{{f{ClDFj}}{f{{An{Al}}}}{C`{Jl}}}{{C`{c}}}{}}{{{f{Cl{DFh{Jj}}}}{f{{An{Al}}}}{C`{Jl}}}{{C`{Gf}}}}{{{f{Cl{DFh{Jd}}}}{f{{An{Al}}}}{C`{Jl}}}{{C`{Ml}}}}`?>{{c{C`{Jl}}}{{Bd{{DFn{}{{DFl{e}}}}Bb}}}{}{}}{{DFf{C`{Jl}}}{{Bd{{DFh{Jj}}Bb}}}}{{DFf{C`{Jl}}}{{Bd{{DFh{Jd}}Bb}}}}{c{{Bd{e}}}{}{}}{{{f{c}}}A@`{}}{ce{}{}}```````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Clc}}}{{f{Cle}}}{}{}}0{{{f{CGn}}}CGn}{{{f{c}}{f{Cle}}}b{}{}}{{}CGn}{Ff{{f{c}}}{}}0{Ff{{f{Clc}}}{}}0{Ffb}0{{{f{CGn}}{f{CGn}}}d}{{{f{DG`}}{f{DG`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CGn}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}0{{{f{Af}}}{{Bd{DG`}}}}{{{f{Af}}g}{{Bd{CGnBb}}}{{Hh{Af}}}{{ANl{Ef}}}{{Hb{}{{Cb{{Gj{ce}}}}}}}}{{{f{CGn}}{f{Clc}}}bAC`}{{}Ff}0{ce{}{}}0``{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}000{{{f{c}}}A@`{}}033```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eALf{}{{Hb{}{{Cb{c}}}}}}0{{AEje}ALh{}{{Hb{}{{Cb{c}}}}}}0{{{f{ALj}}}{{f{Ed}}}}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}{{C`{{f{{An{c}}}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{ALb}}{f{ALb}}c}{{Bd{ALbBb}}}AMj}{{{f{AMl}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{AMl}}{f{Ed}}Fb}{{Bd{B`Bb}}}}`{ANhe{}{{ALf{c}}AJj}}0{{ANhAEj}e{}{{ALh{c}}AJj}}0{{{AMf{Af}}}Ed}{{{f{AMl}}}{{f{Ed}}}}`{{AMj{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}{{{Fn{c}}AEj}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{Fn{c}}AEj}{{AJj{}{{ALl{e}}{ALn{c}}{AM`{g}}}}}{AMb{AMd{e}}}ABj{{Gb{}{{Cb{e}}}}IfI`Ib}}{{FfcAEj}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{FfAEj}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}Ff}{{C`{c}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{AMl}}Ff}{{Bd{IhBb}}}}{{{f{AMl}}Ff}Ih}{{}Ed}{{{f{AOn}}Ff}Ih}4{{B@`Ed}{{Bd{LdBb}}}}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}{{AFb{cgAF`}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}{{C`{c}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{{{f{ALb}}{f{ALb}}}{{Bd{{Gj{ALbALb}}Bb}}}}{{{l{j}}{l{j}}}{{Bd{{Gj{{l{j}}{l{j}}}}Bb}}}}{{{f{Ed}}{f{Ed}}}{{Bd{EdBb}}}}`{{}c{}}0{g{{Bd{ALfe}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{{AEjg}{{Bd{ALhe}}}{}{}{{Hb{}{{Cb{{Bd{ce}}}}}}}}0{ANh{{Bd{eg}}}{}{{ALf{c}}AJj}{}}0{{ANhAEj}{{Bd{eg}}}{}{{ALh{c}}AJj}{}}0{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}Ff}cABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}0{{{f{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}}}gABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}{Ffc{}}0{{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}{C`{Hl}}}{{AJj{}{{ALl{c}}{ALn{e}}{AM`{g}}}}}ABj{AMb{AMd{c}}}{{Gb{}{{Cb{c}}}}IfI`Ib}}```````````{{{f{ALb}}{f{ALb}}c}{{Bd{ALbBb}}}AMj}{{AMj{f{{l{Ej}}}}{f{{l{Ej}}}}}{{Bd{{l{Ej}}Bb}}}}=<`````````{{}b}0{{}d}{{{f{{Jh{JnJj}}}}{f{{l{Ad}}}}CGj{Fj{Gf}{{Dd{AKj}}}}{Fj{AKj}{{Dd{Gf}}}}{f{AKl}}{f{AKl}}}{{Bd{{l{Jj}}Bb}}}}{{{f{{Jh{JnJj}}}}{C`{{f{Af}}}}{Fj{Gf}{{Dd{AKj}}}}{Fj{AKj}{{Dd{Gf}}}}{f{AKl}}{f{AKl}}}{{Bd{{l{Jj}}Bb}}}}{{{f{{Jh{JnJj}}}}{C`{{f{Af}}}}{f{{l{Ad}}}}CGj}{{Bd{{Jh{JnJj}}Bb}}}}```{{c{C`{Hl}}}CNb{}}{{{CNd{Gf}}{CNd{Al}}{C`{Hl}}}CNf}{{{CNd{Gf}}{CNd{Al}}{C`{Hl}}}CNh}`{CJhBHn}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{CJhJl}BHn}3{{CJhBHnJl}BHn}{{CJhEf}BHn}555{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}8{cc{}}9{{}Ff}{ce{}{}};;;;;;;;;;{{CJh{C`{Ef}}BHnCGj}BHn}{{CJhBHn}BHn}={{CJh{f{Af}}}BHn}>;0>>>>>>>1{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}5{CJhBHn}0>0`{{{f{BGb}}{f{B@j}}{f{Bh}}}{{Bd{B`Bb}}}}{{{f{BGb}}}{{Bd{{f{Af}}Bb}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{}DGb}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{DGb{C`{{f{AEj}}}}}{{Bd{AD`Bb}}}}{cc{}}{{}Ff}{ce{}{}}{{{f{DGb}}}d}{{FfFf}DGb}{{{f{ClDGb}}{Cf{Cd}}}b}{{{f{ClDGb}}}b}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}6`{{{f{{l{c}}}}}Ffn}0``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DGd}}}DGd}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DGd}}{f{DGd}}}d}{{{f{DGd}}{f{ClGl}}}{{Bd{bGn}}}}0{cc{}}{{{f{DGd}}{f{Clc}}}bAC`}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DGf}}}DGf}{{{f{c}}{f{Cle}}}b{}{}}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DGf}}{f{DGf}}}d}{{{f{DGf}}{f{ClGl}}}{{Bd{bGn}}}}0{cc{}}{{{f{DGf}}{f{Clc}}}bAC`}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{{{f{c}}}Ef{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}4{{KlKl}Kl}{{{f{{l{Ej}}}}Ij}{{Bd{bBb}}}}{{{f{{AKb{Ij}}}}Ij}{{Bd{bBb}}}}```{{{f{B`}}CCd}B`}{{{f{B`}}{f{B`}}d}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{Bh}}}B`}0{{{f{B`}}{f{Af}}}B`}0`{{{f{c}}h}b{}}{{{f{DGh}}}{{f{AEl}}}}{{{f{ClDGh}}}{{Cf{Cd}}}}{{{f{ClDGh}}}{{f{ClAEl}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DGh}}}DGh}{{{f{c}}{f{Cle}}}b{}{}}{{{f{DGh}}}{{f{AEj}}}}{{}DGh}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{ClDGh}}Ff}b}{{{f{DGh}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{}Ff}{ce{}{}}{{{f{DGh}}}Ff}{FfDGh}{{{f{ClDGh}}}b}70{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}{{{f{DGh}}}{{C`{{f{DGj}}}}}}7`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{DEd}}}DEd}{{{f{c}}{f{Cle}}}b{}{}}{{}DEd}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{DEd}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{DEd}}}Ff}{{{f{DEd}}}{{Lh{BB`}}}}{{{f{COl}}Al{C`{Ff}}d{C`{{f{BB`}}}}FfFf{C`{{f{CAb}}}}{C`{Al}}Al{C`{{f{CAd}}}}dd{f{Cl{C`{Ff}}}}d}{{Bd{{Gj{BB`FfFf}}Bb}}}}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}{{{f{COl}}{f{C@l}}}{{Bd{DEdBb}}}}1{{{f{c}}}A@`{}}4{{DEd{Lh{BB`}}}DEd}````{{{f{{l{c}}}}eAKdd}{{Fn{Ij}}}Db{{Ch{}{{Cb{C`}}}}}}{{{f{{An{f}}}}cIje}{{Fn{Ij}}}{{Ch{}{{Cb{C`}}}}}{{Df{fFff}{{Dd{d}}}}}}``{{{f{DGl}}}{{f{B`}}}}{{{f{BOd}}}{{Bd{{l{Jd}}Bb}}}}{{{f{BOd}}}{{Bd{{l{Mb}}Bb}}}}0{{{f{BOd}}}{{Bd{{l{A`}}Bb}}}}22112{{{f{BOd}}}{{Bd{{l{Ln}}Bb}}}}322{{{f{BOd}}{f{Af}}}{{Bd{B`Bb}}}}{{{f{BOd}}Jl}{{Bd{{l{Jj}}Bb}}}}1445`{{{f{AIl}}FfFf}AIl}0`{{Ff{f{Cl{Fn{d}}}}}b}```11{{Ff{f{{An{B`}}}}{f{ClEn}}}{{Bd{{AKf{{l{Ej}}}}Bb}}}}{{{f{{An{B`}}}}{f{{An{d}}}}{f{{An{d}}}}}{{Bd{AKhBb}}}}{{{f{Af}}{f{{An{B`}}}}{f{{An{d}}}}{f{{An{d}}}}}{{Bd{{l{El}}Bb}}}}{{{f{Af}}{f{{An{B`}}}}}{{Bd{{l{El}}Bb}}}}{{{f{B`}}}{{Bd{{Cf{Cd}}Bb}}}}{{{f{{An{B`}}}}}{{Bd{AKhBb}}}}{{{f{{An{B`}}}}}{{Bd{{l{El}}Bb}}}}0```````````88```{{{f{BLf}}}{{f{{l{Ad}}}}}}{{{f{BLj}}}{{Bd{{l{Ad}}Bb}}}}{{{f{BLj}}}{{l{Ad}}}}{{{f{BLj}}{f{{l{Ad}}}}}{{l{Ad}}}}{{{f{BLj}}{f{Af}}d}{{Bd{{l{A`}}Bb}}}}{{{f{BLj}}{f{{l{Ad}}}}dd}{{Bd{{l{A`}}Bb}}}}{{{f{BLj}}{f{Af}}}{{Bd{{l{A`}}Bb}}}}{{{f{BLj}}{f{Af}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{BLj}}{f{{l{Ad}}}}d}{{Bd{{l{Ej}}Bb}}}}{{{f{BLj}}{f{{l{Ad}}}}Ff}{{Bd{{l{Ad}}Bb}}}}{{{f{BLj}}{f{Af}}}{{Bd{{l{j}}Bb}}}}{{{f{BLj}}{f{{l{Ad}}}}}{{Bd{{l{j}}Bb}}}}{{{f{BLj}}{f{Af}}{f{Ed}}}{{Bd{B`Bb}}}}5{{{f{BLj}}{f{{l{Ad}}}}dd}{{Bd{{l{Ej}}Bb}}}}{{{f{BLj}}{f{Af}}}{{Bd{{l{Ej}}Bb}}}}=<{{{f{{An{{f{{l{Ad}}}}}}}}{f{Af}}d}{{Bd{{l{Ad}}Bb}}}}{{{f{BLj}}{f{Af}}{f{Af}}}{{Bd{{l{Ad}}Bb}}}}0{{{f{BLj}}{f{Af}}{f{Af}}Ff}{{Bd{{l{Ad}}Bb}}}}1{{{f{BLj}}{f{{l{Ad}}}}}{{l{j}}}}{{{f{BLj}}{f{{l{Ad}}}}Ff}{{Bd{AL`Bb}}}}0{{{f{{l{Ad}}}}{f{{l{Ad}}}}e}{{l{j}}}{{Ch{}{{Cb{{f{Af}}}}}}}{{Df{{f{Af}}{f{Af}}}{{Dd{c}}}}}}2{{{f{{l{Ad}}}}{f{{l{Ad}}}}Ffed}{{Bd{AL`Bb}}}{{Ch{}{{Cb{{f{Af}}}}}}}{{Df{{f{Af}}{f{Af}}}{{Dd{c}}}}}}2{{{f{BLj}}{f{B`}}}{{Bd{{l{Ad}}Bb}}}}{{{f{{l{Ad}}}}{f{Af}}d}{{l{Ad}}}}{{{f{BLj}}}{{l{Ej}}}}0{{{f{BLj}}}{{l{Ad}}}}{{{f{BLj}}{f{B`}}{f{B`}}}{{Bd{{l{Ad}}Bb}}}}4{{{f{{l{Ad}}}}{f{{l{Ad}}}}}{{l{Ad}}}}505050{{{f{BLj}}{f{{l{Ad}}}}}{{l{Ad}}}}10{{{f{BLj}}{f{{l{Ej}}}}d}{{Bd{{l{Jj}}Bb}}}}444````````{{eFfFf}{{DGn{Gf}}}{{Hh{Af}}}{{Ch{}{{Cb{c}}}}}}{{eFfFf}{{DH`{Gf}}}{{Hh{{An{Al}}}}}{{Ch{}{{Cb{c}}}}}}```````````{{{f{c}}h}b{}}0{{{f{Af}}{Fn{{Cf{Cd}}}}{f{AEj}}}{{Bd{B`Bb}}}}{{{f{Af}}{Fn{{Cf{Cd}}}}{f{AEj}}{C`{{f{{DEl{EfEf}}}}}}}{{Bd{B`Bb}}}}{{{f{B`}}c}{}{AhLb}}{{{f{B`}}{f{B`}}}}{{B`c}{}{AhLb}}{{B`B`}}`{{{f{ClB`}}{f{B`}}}{{Bd{{f{ClB`}}Bb}}}}{{{f{B`}}}{{C`{Ff}}}}0{{{f{BJl}}Eh}{{l{Ej}}}}{{{f{BJl}}}{{Bd{{l{Ej}}Bb}}}}`{{{f{B`}}}{{Bd{{f{{l{Bj}}}}Bb}}}}{{{f{B`}}Ff}{{f{{Cf{Cd}}}}}}{{{f{BJl}}}{{f{AEl}}}}{{{f{ClBJl}}}{{f{ClAEl}}}}{{{f{B`}}}{{l{j}}}}{{{f{ClBJl}}}{{f{Cl{l{c}}}}}Db}{{{f{BJl}}}{{f{{l{c}}}}}Db}{{{f{B`}}}{{f{BJl}}}}{{{f{B`}}}{{f{B`}}}}0{{{f{ClBJl}}}{{Bd{FfBb}}}}{{{f{ClB`}}}{{Bd{FfBb}}}}{{{f{B`}}}{{Bd{{f{{l{Ab}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{El}}}}Bb}}}}{{{f{BJl}}{f{B`}}}{{Bd{B`Bb}}}}00{{{f{B`}}}{{Bd{{f{{l{A`}}}}Bb}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Clc}}}{{f{Cle}}}{}{}}00{{{f{BJl}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{B`}}{f{Ed}}}{{Bd{B`Bb}}}}0{{{f{B`}}{f{Ed}}Fb}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{ALb}}Bb}}}}7{{{f{B`}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{B`}}c}{{Bd{B`Bb}}}Aj}{{{f{BJl}}}{{Fl{{Fh{{Cf{Cd}}}}{Fj{{f{{Cf{Cd}}}}}{{Dd{Ff}}}}}}}}{{{f{B`}}}{{`{{Ch{}{{Cb{Ff}}}}}}}}{{{f{BJl}}}{{f{{Fn{{Cf{Cd}}}}}}}}{{{f{ClBJl}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}}{{{f{ClB`}}}{{f{Cl{Fn{{Cf{Cd}}}}}}}}{{{f{B`}}}B`}{{{f{Kl}}}Kl}1{{{f{BJl}}}{{Lh{BJl}}}}{{{f{c}}{f{Cle}}}b{}{}}0{{{f{ClB`}}}b}{{{f{B`}}}{{Bd{{f{{Jh{JfJd}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jh{JnJj}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{Jh{KbK`}}}}Bb}}}}{{}B`}{Ff{{f{c}}}{}}00{{{f{B`}}}f}{Ff{{f{Clc}}}{}}00{{{f{B`}}c}{}{AhLb}}{{B`B`}}{{{f{B`}}{f{B`}}}}{{B`c}{}{AhLb}}{Ffb}00{{{f{BJl}}}B`}{{{f{BJl}}}{{f{Ed}}}}{{{f{B`}}}{{Bd{{f{{Jh{KdJj}}}}Bb}}}}{{{f{Kl}}{f{Kl}}}d}{{{f{B`}}{f{B`}}}d}{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}{{{f{B`}}{f{Af}}}{{Bd{{l{A`}}Bb}}}}{{{f{B`}}c}{{Bd{{l{A`}}Bb}}}ANn}32{{{f{B`}}{f{Af}}}}{{{f{B`}}c}{}ANn}66{{{f{c}}{f{e}}}d{}{}}00{{{f{B`}}}Ff}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{ClB`}}{f{B`}}}{{Bd{{f{ClB`}}Bb}}}}{{{f{B`}}IhFf}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{{l{E`}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Eb}}}}Bb}}}}{{{f{BJl}}}{{Dj{Mn}}}}{{{f{B`}}AGf}{{Bd{B`Bb}}}}{{{f{BJl}}{f{{l{A`}}}}}{{Bd{B`Bb}}}}{{{f{Kl}}{f{ClGl}}}{{Bd{bGn}}}}{{{f{B`}}{f{ClGl}}}{{Bd{bGn}}}}0{{{f{B`}}}Ef}{cc{}}0{{{Jh{KhJj}}}B`}{{{Jh{JnJj}}}B`}{{{l{c}}}B`Db}3{{{Jh{JfJd}}}B`}{{{Jh{KdJj}}}B`}{{{f{Af}}{f{{An{Ih}}}}d}{{Bd{B`Bb}}}}{{{f{Af}}{f{{An{Ih}}}}{f{Ed}}d}{{Bd{B`Bb}}}}{{{f{Af}}{Cf{Cd}}}{{Bd{B`Bb}}}}{{{f{Af}}{Fn{{Cf{Cd}}}}}{{Bd{B`Bb}}}}{{{f{Af}}{Fn{{Cf{Cd}}}}{f{Ed}}}B`}{g{{Bd{ic}}}{}{}{{Hd{c}{{Cb{e}}}}}{}}{cB`{{Hb{}{{Cb{Ml}}}}}}{cB`{{Hb{}{{Cb{{f{Ll}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Al}}}}}}}}{cB`{{Hb{}{{Cb{J`}}}}}}{cB`{{Hb{}{{Cb{{f{Ml}}}}}}}}{cB`{{Hb{}{{Cb{{f{Md}}}}}}}}{cB`{{Hb{}{{Cb{Al}}}}}}{cB`{{Hb{}{{Cb{{f{Al}}}}}}}}{cB`{{Hb{}{{Cb{Md}}}}}}{cB`{{Hb{}{{Cb{{C`{Lf}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Md}}}}}}}}{cB`{{Hb{}{{Cb{Lf}}}}}}{cB`{{Hb{}{{Cb{Ij}}}}}}{cB`{{Hb{}{{Cb{{C`{Gf}}}}}}}}{cB`{{Hb{}{{Cb{Gf}}}}}}{cB`{{Hb{}{{Cb{{C`{J`}}}}}}}}{cB`{{Hb{}{{Cb{M`}}}}}}{cB`{{Hb{}{{Cb{{f{d}}}}}}}}{cB`{{Hb{}{{Cb{{C`{d}}}}}}}}{cB`{{Hb{}{{Cb{{C`{M`}}}}}}}}{cB`{{Hb{}{{Cb{{f{Gf}}}}}}}}{cB`{{Hb{}{{Cb{{f{M`}}}}}}}}{cB`{{Hb{}{{Cb{{f{Af}}}}}}}}{cB`{{Hb{}{{Cb{Ef}}}}}}{cB`{{Hb{}{{Cb{{C`{Ml}}}}}}}}{cB`{{Hb{}{{Cb{Jb}}}}}}{cB`{{Hb{}{{Cb{d}}}}}}{cB`{{Hb{}{{Cb{{f{J`}}}}}}}}{cB`{{Hb{}{{Cb{{f{Jb}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Jb}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Ij}}}}}}}}{cB`{{Hb{}{{Cb{Ll}}}}}}{cB`{{Hb{}{{Cb{{f{Ij}}}}}}}}{cB`{{Hb{}{{Cb{{C`{Ll}}}}}}}}{cB`{{Hb{}{{Cb{{f{Lf}}}}}}}}{{{f{Af}}{Fn{J`}}}B`}{{{f{Af}}{Fn{Ij}}}B`}{{{f{Af}}{Fn{Ml}}}B`}{{{f{Af}}{Fn{Al}}}B`}{{{f{Af}}{Fn{Lf}}}B`}{{{f{Af}}{Fn{Md}}}B`}{{{f{Af}}{Fn{M`}}}B`}{{{f{Af}}{Fn{Gf}}}B`}{{{f{Af}}{Fn{Ll}}}B`}{{{f{Af}}{Fn{Jb}}}B`}{{{f{Af}}Ff{f{Ed}}}B`}{{{f{B`}}FfFf}B`}{{{f{BJl}}Ff}{{Bd{IhBb}}}}{{{f{B`}}}Ff}{{{f{B`}}}Il}{{{f{B`}}}B`}{{{f{BJl}}}{{C`{{f{ADl}}}}}}{{{f{BJl}}Ff}{{C`{{f{In}}}}}}{{{f{BJl}}FfFf}{{C`{{f{In}}}}}}{{{f{BJl}}Ff}Ih}{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}{{{f{B`}}c}{{Bd{{l{A`}}Bb}}}ANn}{{{f{B`}}{f{Af}}}{{Bd{{l{A`}}Bb}}}}312{{{f{B`}}{f{Af}}}}{{{f{BJl}}}d}{{{f{Kl}}{f{Clc}}}bAC`}{{{f{B`}}{C`{Ff}}}B`}{{{f{B`}}}{{Bd{{f{{l{Ln}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jd}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Jj}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Mb}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ej}}}}Bb}}}}`{{{f{B`}}}{{Bd{{l{j}}Bb}}}}{{}Ff}00{ce{}{}}00{B`B@j}1{BBbB`}{B`B`}={{{f{B`}}}{{Bd{{l{A`}}Bb}}}}000{{{f{BJl}}}{{l{A`}}}}0{{}d}0{{{f{B`}}}Kl}{{{f{B`}}}DHb}{{{f{B`}}}{{`{{Ch{}{{Cb{B`}}}}}}}}{{{f{BJl}}}Ff}{{{f{B`}}}Ff}{{{f{BJl}}Ff}B`}{{{f{B`}}}{{Bd{{f{{l{j}}}}Bb}}}}{B`BHn}{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}c}{{Bd{{l{A`}}Bb}}}ANn}{{{f{B`}}{f{Af}}}}{{{f{B`}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}3012{{{f{B`}}}{{Bd{{C`{c}}Bb}}}Lb}{{{f{BJl}}}{{Bd{LdBb}}}}{{{f{BJl}}}{{C`{Lf}}}}{{{f{B`}}}Ld}1232{{{f{B`}}{f{B`}}}}{{B`c}{}{AhLb}}{{{f{B`}}c}{}{AhLb}}{{B`B`}}{{{f{BJl}}}Ff}{{{f{B`}}}Ff}{{{f{BJl}}}{{Bd{FfBb}}}}{{{f{BJl}}}{{f{Af}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{J`}}}}}}}}{{{f{Af}}{Mf{Jb}}}B`}{{{f{Af}}c}B`{{Hh{{An{{C`{Jb}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{Ll}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{AKj}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{{f{{An{Al}}}}}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{Ml}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{Ml}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{Ih}}}}}}{{{f{Af}}{Mf{Ml}}}B`}{{{f{Af}}c}B`{{Hh{{An{{C`{Al}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{Jb}}}}}}{{{f{Af}}{Mf{Gf}}}B`}{{{f{Af}}c}B`{{Hh{{An{Lf}}}}}}{{{f{Af}}c}B`{{Hh{{An{AKn}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{B`}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{M`}}}}}}{{{f{Af}}c}B`{{Hh{{An{{f{Af}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{B`}}}}}}{{{f{Af}}c}B`{{Hh{{An{AOh}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{Ef}}}}}}}}{{{f{Af}}c}B`BBb}{{{f{Af}}c}B`{{Hh{{An{{C`{M`}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{AKj}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{Ij}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{{Dj{{An{Al}}}}}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{AOf}}}}}}{{{f{Af}}c}B`{{Hh{{An{Md}}}}}}{{{f{Af}}c}B`{{Hh{{An{{Fn{Al}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{Dj{Af}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{{Fn{Al}}}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{{f{Af}}}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{Ll}}}}}}{{{f{Af}}c}B`{{Hh{{An{Al}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{Gf}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{Gf}}}}}}{{{f{Af}}c}B`{{Hh{{An{Ij}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{AOf}}}}}}}}{{{f{Af}}{Mf{Ij}}}B`}{{{f{Af}}c}B`{{Hh{{An{{C`{AOh}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{d}}}}}}{{{f{Af}}{f{B`}}}B`}{{{f{Af}}c}B`{{Hh{{An{{Dj{{An{Al}}}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{J`}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{AKn}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{Lf}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{{Dj{Af}}}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{d}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{f{{An{Al}}}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{{C`{Md}}}}}}}}{{{f{Af}}c}B`{{Hh{{An{Ef}}}}}}{{{f{Af}}{f{Ed}}}B`}{{{f{BJl}}FfFf}B`}{{{f{Af}}Ff}B`}{{{f{ClDHb}}}C`}{{{f{{AGh{}{{Cb{c}}}}}}e}c{}{}}{{{f{B`}}{f{B`}}}{{Bd{{l{A`}}Bb}}}}{{{f{B`}}c}{{Bd{{l{A`}}Bb}}}ANn}{{{f{B`}}{f{Af}}}{{Bd{{l{A`}}Bb}}}}3{{{f{B`}}c}{}ANn}{{{f{B`}}{f{Af}}}}4{{{f{B`}}}{{Bd{{f{ABl}}Bb}}}}{{{f{BJl}}}Ff}`{{{f{B`}}}{{Cf{Kf}}}}{{{f{B`}}}{{Bd{LdBb}}}}{{{f{BJl}}LfNd}{{Bd{LdBb}}}}{{{f{BJl}}}B`}{{{f{B`}}c}{}{AhLb}}{{B`c}{}{AhLb}}{{{f{B`}}{f{B`}}}}{{{f{ClBJl}}{f{Af}}}b}{{{f{ClB`}}{f{Af}}}{{f{ClB`}}}}{{{f{B`}}{f{{An{Gf}}}}}{{Bd{B`Bb}}}}06{KlKl}{{{f{BJl}}{f{Df}}Nf}{{Bd{B`Bb}}}}{{{f{B`}}Lfdd{C`{Jb}}}{{Bd{B`Bb}}}}{{{f{B`}}Ffdd{C`{Jb}}}{{Bd{B`Bb}}}}{{{f{B`}}Ff}B`}{{{f{ClB`}}Kl}b}{{{f{BJl}}Gf}B`}{{{f{ClBJl}}}b}{{{f{ClB`}}}b}{{{f{B`}}{C`{Jb}}}B`}{{{f{DHb}}}{{Gj{Ff{C`{Ff}}}}}}{{{f{BJl}}GfFf}B`}{{{f{B`}}GfFf}B`}{{{f{B`}}Eh}{{Bd{B`Bb}}}}{{{f{BJl}}Eh}{{Bd{B`Bb}}}}{{{f{BJl}}Gf}{{Gj{B`B`}}}}{{{f{B`}}Gf}{{Gj{B`B`}}}}{{{f{BJl}}Al}{{C`{Lf}}}}{{{f{BJl}}Al}{{Bd{LdBb}}}}{{{f{B`}}}{{Bd{{f{{l{Ad}}}}Bb}}}}{{{f{B`}}Ff}{{Bd{{Dj{Af}}Bb}}}}{{{f{B`}}{f{Ed}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{{f{AL`}}Bb}}}}{{{f{B`}}{f{B`}}}}{{B`c}{}{AhLb}}{{B`B`}}{{{f{B`}}c}{}{AhLb}}{{{f{B`}}}{{Bd{cBb}}}Lb}{{{f{BJl}}}{{Bd{LdBb}}}}{{{f{B`}}}{{Bd{LdBb}}}}{{{f{B`}}{C`{Ff}}}B`}{{{f{BJl}}{f{{l{Ej}}}}}{{Bd{B`Bb}}}}{{{f{B`}}{f{{An{Nl}}}}Kl}B`}{{{f{B`}}{f{{An{Nl}}}}}B`}{{{f{BJl}}{f{{An{Ij}}}}}{{Bd{B`Bb}}}}{{{f{BJl}}{f{{An{Ij}}}}}B`}{{{f{BJl}}{f{{l{Ej}}}}}B`}{{{f{B`}}{f{{An{Ij}}}}}B`}{{{f{B`}}}{{Bd{{f{{Jh{KhJj}}}}Bb}}}}{{{f{B`}}Ffd}{{Cf{Cd}}}}{{{f{B`}}{C`{{f{Af}}}}d}{{Bd{B@jBb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{c}}}e{}{}}0{{{f{B`}}}{{Dj{B`}}}}{{{f{c}}}Ef{}}{{B`B`}{{Bd{B`Bb}}}}{c{{Bd{e}}}{}{}}0{{{Gj{{f{AO`}}{Cf{Cd}}}}}{{Bd{B`Bb}}}}{{{Gj{{f{Af}}{Cf{Cd}}}}}{{Bd{B`Bb}}}}{{{Gj{{f{AO`}}{Fn{{Cf{Cd}}}}}}}{{Bd{B`Bb}}}}{{{Gj{{f{Af}}{Fn{{Cf{Cd}}}}}}}{{Bd{B`Bb}}}}44445{{{f{ClB`}}{Gd{c}}}dDb}6{{{f{c}}}A@`{}}00{{{f{B`}}}{{Bd{{f{{l{Lj}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Ej}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Mh}}}}Bb}}}}{{{f{B`}}}{{Bd{{f{{l{Mj}}}}Bb}}}}{{{f{BJl}}}{{Bd{B`Bb}}}}{{{f{B`}}}{{Bd{B`Bb}}}}{{{f{BJl}}}{{Bd{{f{{l{c}}}}Bb}}}Db}{{{f{BJl}}Al}{{C`{Lf}}}}{{{f{BJl}}Al}{{Bd{LdBb}}}}{ce{}{}}00{{B`{f{Af}}}B`}{{{f{B`}}c}B`{AhLb}}{{{f{B`}}{f{{l{A`}}}}{f{B`}}}{{Bd{B`Bb}}}}``{{{f{c}}h}b{}}{{{f{Dl}}}{{f{B`}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{Dl}}}Dl}{{{f{c}}{f{Cle}}}b{}{}}{{{f{Dl}}}B`}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{cc{}}{{}Ff}?{{{DHd{B`}}}Dl}{{{f{ClDl}}{f{Cl{Cf{Cd}}}}}b}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}{ce{}{}}{{{f{ClDl}}{f{Cl{Cf{Cd}}}}e}c{}{{Df{{f{Dl}}}{{Dd{c}}}}}}````{{{f{B`}}{f{B`}}c}{{Bd{B`Bb}}}{{Dn{{f{B`}}{f{B`}}}{{Dd{{Bd{B`Bb}}}}}}}}{{{BI`{}{{Dd{c}}}}{f{B`}}}c{}}{{{f{BIb}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Bf}}}}{f{B`}}}{{Bd{B`Bb}}}}`210210210210``{{{f{BOf}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{{l{Fd}}}}{f{B`}}}{{Bd{B`Bb}}}}{{{f{BOf}}c}{{Bd{B`Bb}}}Aj}{{{f{{l{Fd}}}}c}{{Bd{B`Bb}}}Aj}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Clc}}}{{f{Cle}}}{}{}}{{{f{CJd}}}CJd}{{{f{c}}{f{Cle}}}b{}{}}{{}CJd}{Ff{{f{c}}}{}}{Ff{{f{Clc}}}{}}{Ffb}{{{f{CJd}}{f{CJd}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CJd}}{f{ClGl}}}{{Bd{bGn}}}}{cc{}}{{{f{CJd}}{f{Clc}}}bAC`}{{}Ff}{ce{}{}}{{{f{c}}}e{}{}}{c{{Bd{e}}}{}{}}0{{{f{c}}}A@`{}}3","D":"AEIlAHb","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",10870],[5,"ListType",1919,10871],[5,"ChunkedArray",17,10872],[10,"PolarsNumericType",1919,10871],[5,"BooleanType",1919,10871],[5,"BinaryType",1919,10871],[5,"StringType",1919,10871],[1,"str"],[10,"Num",10873],[10,"ToPrimitive",10874],[1,"u8"],[1,"slice"],[5,"Series",10381,10875],[6,"PolarsError",3344,10876],[6,"Result",10877],[10,"NumOpsDispatchInner",10817,10878],[6,"GroupsProxy",3728,10879],[5,"FixedSizeListType",1919,10871],[5,"ObjectType",1919,10871],[10,"PolarsObject",1483,10880],[6,"Option",10881],[17,"Item"],[10,"Array",10882],[5,"Box",10883],[10,"Iterator",10884],[5,"AmortizedListIter",10885],[0,"mut"],[17,"IsNested"],[5,"FalseT",1919,10871],[10,"PolarsDataType",1919,10871],[17,"Output"],[10,"Fn",10886],[10,"Copy",10887],[6,"Cow",10888],[5,"AmortSeries",10794,10889],[10,"FnMut",10886],[5,"Float32Type",1919,10871],[5,"Float64Type",1919,10871],[6,"DataType",1919,10890],[5,"String",10891],[5,"SortOptions",1609,10892],[5,"UInt32Type",1919,10871],[5,"BinaryOffsetType",1919,10871],[5,"SortMultipleOptions",1609,10892],[10,"PolarsIntegerType",1919,10871],[6,"CastOptions",1126,10893],[10,"NumOpsDispatchCheckedInner",10838,10894],[1,"usize"],[5,"Iter",10895],[1,"fn"],[5,"Map",10896],[5,"Vec",10897],[5,"MetadataProperties",1246,10898],[10,"DoubleEndedIterator",10899],[5,"Metadata",1246,10898],[1,"i64"],[5,"OffsetsBuffer",10900],[1,"tuple"],[5,"Formatter",10901],[5,"Error",10901],[17,"Array"],[10,"IntoIterator",10902],[10,"FallibleIterator",10903],[10,"PolarsAsRef",10904],[10,"AsRef",10905],[10,"Borrow",10906],[5,"Bitmap",10907],[10,"IntoParallelIterator",10908],[10,"Send",10887],[10,"Sync",10887],[10,"NoOption",10909],[10,"TrustedLen",10910],[6,"AnyValue",1919,10911],[1,"u32"],[5,"MetadataFlags",1246,10898],[10,"PolarsObjectSafe",1483,10880],[1,"f32"],[1,"u64"],[5,"Int32Type",1919,10871],[5,"DateType",1919,10871],[5,"Logical",1919,10912],[5,"Int64Type",1919,10871],[6,"TimeUnit",1919,10913],[5,"DatetimeType",1919,10871],[5,"Int128Type",1919,10871],[5,"DecimalType",1919,10871],[5,"DurationType",1919,10871],[10,"ExactSizeIterator",10914],[5,"TimeType",1919,10871],[10,"PolarsFloatType",1919,10871],[6,"IsSorted",10381,10915],[10,"PolarsIterator",1174,10916],[6,"ChunkedArrayLayout",17,10872],[10,"NumCast",10874],[5,"Scalar",1919,10911],[1,"f64"],[5,"Arc",4091,10917],[5,"UInt16Type",1919,10871],[1,"u16"],[5,"Int16Type",1919,10871],[1,"i16"],[5,"Int8Type",1919,10871],[1,"i8"],[5,"Range",10918],[5,"UInt64Type",1919,10871],[5,"UInt8Type",1919,10871],[1,"i32"],[5,"Field",1919,10919],[10,"ParallelIterator",10908],[10,"IndexedParallelIterator",10908],[6,"QuantileInterpolOptions",4091,10920],[5,"RollingOptionsFixedWindow",4091,10921],[10,"PolarsOpsNumericType",10922],[10,"Sized",10887],[5,"ChunkId",4091,10923],[17,"HasViews"],[5,"RandomState",10924],[5,"BytesHash",10925],[5,"ViewRepr",10926],[1,"array"],[5,"Dim",10927],[5,"ArrayBase",10926],[5,"OwnedRepr",10928],[6,"Either",10929],[5,"TypeId",10930],[5,"NullableIdxSize",4091,10923],[10,"FnOnce",10886],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",824,10931],[5,"AnonymousListBuilder",852,10932],[5,"AnonymousOwnedListBuilder",852,10932],[5,"ListBooleanChunkedBuilder",852,10933],[5,"ListPrimitiveChunkedBuilder",852,10934],[10,"ListBuilderTrait",852,10935],[10,"ChunkedBuilder",852,10936],[5,"ListStringChunkedBuilder",852,10937],[5,"ListBinaryChunkedBuilder",852,10937],[5,"ListNullChunkedBuilder",852,10938],[5,"BinViewChunkedBuilder",852,10939],[10,"ViewType",10940],[5,"BooleanChunkedBuilder",852,10941],[5,"NullChunkedBuilder",852,10942],[5,"PrimitiveChunkedBuilder",852,10943],[10,"Clone",10944],[5,"NullChunked",10945],[10,"NewChunkedArray",852,10936],[10,"Hasher",10946],[10,"ChunkedCollectInferIterExt",1154,10947],[10,"ChunkedCollectIterExt",1154,10947],[10,"Canonical",1168,10948],[10,"ChunkedCollectParIterExt",1170,10949],[10,"FromParIterWithDtype",1170,10949],[5,"BooleanArray",10950],[5,"BoolIterNoNull",1174,10916],[5,"FixedSizeListArray",10951],[5,"FixedSizeListIterNoNull",1174,10916],[5,"StructIter",1174,10916],[5,"SomeIterator",1174,10916],[5,"MetadataEnv",1246,10952],[10,"MetadataCollectable",1246,10898],[10,"MetadataTrait",1246,10898],[5,"Iter",10953],[5,"IterNames",10953],[5,"File",10954],[5,"Mutex",10955],[6,"MetadataMerge",1246,10898],[5,"ObjectArray",1483,10880],[6,"ArrowDataType",1919,10956],[10,"Any",10930],[10,"Debug",10901],[5,"BitmapIter",10957],[6,"ZipValidity",10958],[5,"ObjectChunkedBuilder",1558,10959],[10,"AnonymousObjectBuilder",1581,10960],[5,"ObjectRegistry",1581,10960],[17,"FuncRet"],[10,"ChunkApply",1609,10961],[10,"ChunkApplyKernel",1609,10961],[10,"ChunkSort",1609,10961],[10,"ChunkUnique",1609,10961],[10,"ChunkCast",1609,10961],[6,"FillNullStrategy",1609,10961],[10,"ChunkCompare",10381,10961],[10,"ChunkExplode",1609,10961],[10,"ChunkFillNullValue",1609,10961],[10,"ChunkFilter",1609,10961],[10,"ChunkFull",1609,10961],[10,"ChunkFullNull",1609,10961],[10,"ChunkAnyValue",1609,10961],[10,"IsFirstDistinct",1609,10961],[10,"IsLastDistinct",1609,10961],[10,"ChunkAgg",1609,10961],[10,"ChunkQuantile",1609,10961],[10,"ChunkExpandAtIndex",1609,10961],[10,"Reinterpret",1609,10961],[10,"ChunkReverse",1609,10961],[10,"ChunkRollApply",1609,10961],[10,"ChunkSet",1609,10961],[10,"ChunkShift",1609,10961],[10,"ChunkShiftFill",1609,10961],[10,"SlicedArray",1609,10962],[10,"ChunkVar",1609,10961],[10,"ChunkTake",1609,10961],[10,"ChunkTakeUnchecked",1609,10961],[10,"ChunkBytes",1609,10961],[10,"ChunkZip",1609,10961],[10,"BinaryFnMut",1811,10963],[10,"StaticArray",1919,10964],[10,"TernaryFnMut",1811,10963],[10,"Error",10965],[10,"UnaryFnMut",1811,10963],[5,"PrimitiveArray",10966],[6,"SearchSortedSide",1851,10967],[5,"NoNull",4091,10968],[5,"RowsEncoded",10969],[5,"NaiveDateTime",10970],[6,"Tz",10971],[5,"NaiveTime",10972],[5,"StructChunked",1919,10973],[5,"CategoricalChunked",1919,10974],[5,"CategoricalChunkedBuilder",1919,10975],[10,"ArrayFromIter",1919,10976],[10,"ArrayFromIterDtype",1919,10976],[10,"AsRefDataType",1919,10890],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",10977],[10,"From",10905],[5,"BinaryViewArrayGeneric",10940],[6,"RevMapping",1919,10978],[10,"CategoricalMergeOperation",1919,10979],[10,"LogicalType",1919,10912],[6,"CategoricalOrdering",1919,10978],[5,"OwnedObject",1919,10911],[6,"UnknownKind",1919,10890],[5,"CategoricalType",1919,10871],[6,"ArrowTimeUnit",1919],[10,"ArrayCollectIterExt",1919,10976],[5,"GlobalRevMapMerger",1919,10979],[10,"Into",10905],[10,"NumericNative",1919,10871],[5,"ArrowField",4091],[6,"IntegerType",10980],[6,"PrimitiveType",10981],[5,"TimeDelta",10982],[5,"NaiveDate",10983],[5,"LazyCompact",10984],[5,"SmartString",10985],[10,"GetAnyValue",1919,10911],[10,"IntoScalar",1919,10986],[5,"CatIter",1919,10974],[6,"Ordering",10987],[1,"u128"],[6,"PhysicalType",10980],[5,"DataFrame",3439,10988],[5,"StringCacheHolder",3323,10989],[5,"ErrString",3344,10876],[6,"PolarsWarning",3344,10990],[5,"Error",10991],[6,"Error",10992],[5,"Utf8Error",10993],[6,"ParquetError",10994],[5,"Error",10995],[5,"TryReserveError",10996],[10,"Display",10901],[5,"Schema",4091,10997],[10,"IntoSeries",10381,10998],[6,"NullStrategy",3439,10988],[6,"UniqueKeepStrategy",3439,10988],[5,"HashSet",10999],[5,"ArrowSchema",4091,11000],[5,"Row",3982,11001],[5,"GroupBy",3728,11002],[5,"DynamicGroupOptions",4091,11003],[5,"RangeInclusive",10918],[5,"RangeFull",10918],[5,"RangeToInclusive",10918],[5,"RangeFrom",10918],[5,"RangeTo",10918],[5,"RecordBatchIter",3439,10988],[5,"PhysRecordBatchIter",3439,10988],[5,"LazyFrame",4091,11004],[10,"IntoVec",4091,10968],[5,"MeltArgs",3699,11005],[5,"RollingGroupOptions",4091,11003],[10,"RangeBounds",10918],[6,"IndexOrder",4091,11006],[5,"StructArray",4091,11007],[5,"RecordBatchT",11008],[5,"Duration",4091,11009],[5,"GroupsIdx",3728,10879],[5,"UnitVec",11010],[6,"GroupByMethod",3728,11002],[5,"SlicedGroups",3728,10879],[5,"GroupsProxyParIter",3728,10879],[10,"UnindexedConsumer",11011],[6,"GroupsIndicator",3728,10879],[6,"IRAggExpr",11012],[10,"IntoGroupsProxy",3728,11013],[5,"Copied",11014],[5,"Zip",11015],[5,"GroupsProxyIter",3728,10879],[10,"IsFloat",11016],[10,"NativeType",11017],[10,"AggList",3966,11018],[10,"TakeExtremum",3966,11019],[10,"PhysicalAggExpr",3979,11020],[6,"AnyValueBuffer",3982,11021],[6,"AnyValueBufferTrusted",3982,11021],[5,"Node",11022],[6,"IR",11023],[5,"Arena",11022],[6,"AExpr",11012],[10,"JoinDispatch",4091,11024],[5,"JoinArgs",4091,11025],[10,"DfTake",4091,11026],[10,"DataFrameOps",4091,11027],[5,"CsvReader",4091,11028],[10,"PhysicalIoExpr",11029],[10,"MmapBytesReader",11030],[6,"Expr",4091,11031],[10,"LhsNumOps",10817,10878],[10,"NumOpsDispatch",10817,10878],[5,"LazyGroupBy",4091,11004],[10,"Allocator",11032],[5,"JoinBuilder",4091,11004],[10,"AnonymousScan",4091,11033],[5,"ScanArgsAnonymous",4091,11034],[10,"FunctionOutputField",4091,11035],[5,"SpecialEq",4091,11035],[6,"VisitRecursion",11036],[6,"FunctionExpr",4091,11037],[10,"ArgAgg",4091,11038],[5,"ArrayNameSpace",4091,11039],[5,"ListNameSpace",4091,11040],[10,"SeriesTrait",10381,10915],[5,"FieldsMapper",4091,11041],[5,"IpcStreamReader",4091,11042],[10,"Read",11043],[10,"SeriesUdf",4091,11035],[10,"AsBinary",4091,11044],[10,"StringMethods",9350,11045],[5,"BorrowedFd",11046],[10,"AsFd",11046],[10,"AsList",4091,11047],[10,"AsRawFd",11048],[6,"AggExpr",4091,11031],[10,"SeriesSealed",4091,11049],[10,"AsString",4091,11050],[20,"MaybeUninit",11051],[10,"StringNameSpaceImpl",4091,11052],[5,"OwnedBatchedCsvReader",4091,11053],[5,"CsvWriter",4091,11054],[5,"BatchedWriter",11054],[10,"Write",11043],[5,"IpcWriter",4091,11055],[5,"BatchedWriter",11055],[5,"ParquetReader",4091,11056],[5,"BatchedParquetReader",4091,11057],[5,"ParquetWriter",4091,11058],[5,"BatchedWriter",11059],[5,"BatchedCsvReader",4091,11053],[5,"BinaryNameSpace",9333,11060],[6,"Operator",4091,11031],[10,"RenameAliasFn",4091,11035],[5,"UserDefinedFunction",4091,11061],[10,"SeriesBinaryUdf",4091,11035],[5,"InProcessQuery",4091,11062],[5,"HashMap",11063],[5,"CategoricalNameSpace",4091,11064],[10,"RoundSeries",4091,11065],[10,"TemporalMethods",10264,11066],[10,"NumOpsDispatchChecked",10838,10894],[5,"LazyCsvReader",4091,11067],[5,"ScanArgsIpc",4091,11068],[5,"LazyJsonLineReader",4091,11069],[5,"ScanArgsParquet",4091,11070],[5,"RollingOptionsDynamicWindow",4091,11071],[5,"Bounds",4091,11072],[6,"ClosedWindow",4091,11073],[6,"Label",4091,11073],[6,"StartBy",4091,11073],[5,"Window",4091,11074],[5,"CsvReadOptions",4091,11075],[5,"CsvParseOptions",4091,11075],[6,"CsvEncoding",4091,11075],[6,"CommentPrefix",4091,11075],[6,"NullValues",4091,11075],[5,"CsvWriterOptions",4091,11076],[5,"SerializeOptions",4091,11076],[6,"QuoteStyle",4091,11076],[5,"IpcScanOptions",4091,11077],[5,"IpcWriterOptions",4091,11055],[6,"IpcCompression",4091,11055],[5,"JsonWriterOptions",4091,11078],[6,"JoinCoalesce",4091,11025],[6,"JoinType",4091,11025],[6,"JoinValidation",4091,11025],[5,"ParquetOptions",4091,11079],[6,"ParallelStrategy",4091,11079],[5,"AsOfOptions",4091,11080],[6,"AsofStrategy",4091,11080],[5,"ParquetWriteOptions",4091,11081],[6,"InterpolationMethod",4091,11082],[6,"ParquetCompression",4091,11081],[6,"ClosedInterval",4091,11083],[5,"GzipLevel",4091,11081],[6,"RankMethod",4091,11084],[5,"BrotliLevel",4091,11081],[5,"RankOptions",4091,11084],[5,"ZstdLevel",4091,11081],[6,"DslPlan",4091,11085],[5,"When",4091,11086],[5,"Then",4091,11086],[5,"ChainedWhen",4091,11086],[5,"ChainedThen",4091,11086],[6,"Excluded",4091,11031],[6,"BooleanFunction",4091,11087],[6,"CategoricalFunction",4091,11088],[6,"TemporalFunction",4091,11089],[6,"PowFunction",4091,11090],[6,"StringFunction",4091,11091],[5,"DatetimeArgs",4091,11092],[5,"DurationArgs",4091,11092],[5,"RollingCovOptions",4091,11093],[5,"StrptimeOptions",4091,11093],[5,"JoinOptions",4091,11093],[6,"WindowType",4091,11093],[6,"WindowMapping",4091,11093],[6,"NestedType",4091,11093],[5,"OptState",4091,11094],[6,"LiteralValue",4091,11095],[5,"AnonymousScanOptions",4091,11096],[5,"StatisticsOptions",4091,11097],[5,"UnionArgs",4091,11096],[5,"FileMetaData",4091,11098],[5,"RollingVarParams",4091,11099],[5,"RollingQuantileParams",4091,11099],[6,"NonExistent",4091,11100],[10,"LazyFileListReader",4091,11101],[5,"CloudOptions",9485,11102],[10,"Ord",10987],[6,"ColumnOrder",11103],[10,"BinaryNameSpaceImpl",4091,11104],[5,"JsonLineReader",4091,11105],[5,"PathBuf",11106],[5,"IpcStreamWriterOption",4091,11042],[10,"SerWriter",4091,11107],[5,"IpcWriterOption",4091,11055],[10,"CrossJoin",4091,11108],[10,"ExprEvalExtension",4091,11109],[10,"DateMethods",9350,11110],[10,"DatetimeMethods",9350,11111],[10,"DurationMethods",9350,11112],[10,"BinaryUdfOutputField",4091,11035],[5,"CStr",11113],[10,"Default",11114],[5,"RowGroupMetaData",11115],[5,"ParquetStatistics",4091],[6,"NullBehavior",10844,11116],[5,"Weak",10917],[5,"DateLikeNameSpace",9846,11117],[1,"char"],[10,"FromIterator",10902],[10,"SeriesMethods",4091,11118],[10,"PartialEq",10987],[10,"Scalar",11119],[10,"ListNameSpaceExtension",4091,11120],[10,"Command",11121],[5,"StructNameSpace",4091,11122],[10,"SerReader",4091,11107],[5,"IpcReader",4091,11077],[5,"IpcStreamWriter",4091,11042],[5,"JsonWriter",4091,11078],[5,"JsonReader",4091,11078],[10,"UdfSchema",4091,11123],[6,"ListFunction",11124],[6,"BinaryFunction",11125],[6,"RangeFunction",11126],[6,"StructFunction",11127],[6,"ArrayFunction",11128],[5,"MutableStatistics",11129],[5,"Path",11106],[1,"never"],[5,"CString",11130],[5,"OsStr",11131],[5,"OsString",11131],[10,"ToOwned",10888],[5,"GrowableStruct",11132],[5,"MutableStructArray",11133],[10,"FromData",9840,11134],[5,"Buffer",11135],[10,"FromDataUtf8",9840,11134],[10,"FromDataBinary",9840,11134],[5,"ListArray",11136],[6,"Ambiguous",4091,11100],[10,"NamedFromOwned",4091,11137],[10,"DataFrameJoinOps",4091,11138],[5,"FunctionOptions",11096],[10,"PartialOrd",10987],[6,"Context",11085],[10,"IndexOfSchema",4091,10997],[5,"BoundsIter",4091,11074],[6,"ReaderBytes",11030],[10,"PolarsTemporalGroupby",4091,11003],[10,"PolarsArray",4091,11139],[10,"Hash",10946],[10,"SeriesJoin",4091,11140],[10,"TimeMethods",9350,11141],[5,"NonZero",11142],[10,"IntoListNameSpace",4091,11120],[5,"FileMetaData",11143],[5,"StructValueIter",11144],[10,"AsofJoinBy",4091,11145],[10,"ListNameSpaceImpl",4091,11146],[5,"ExprNameNameSpace",4091,11147],[5,"KeyValue",11143],[10,"IntoLazy",4091,11004],[10,"Literal",4091,11095],[5,"Null",4091,11095],[5,"RowIndex",11148],[10,"ChunkAggSeries",4091,11149],[10,"QuantileAggSeries",4091,11150],[10,"IndexToUsize",4091,11151],[10,"NamedFrom",4091,11137],[6,"RowGroupFetcher",11057],[5,"SplitNChars",4091,11152],[5,"Pin",11153],[5,"Request",10965],[10,"SeriesRank",4091,11084],[5,"BorrowedCursor",11154],[10,"VarInt",11155],[5,"IoSliceMut",11043],[10,"SeriesOpsTime",9350,11156],[10,"PolarsRound",4091,11157],[5,"AnonymousScanArgs",4091,11033],[10,"ChunkedSet",4091,10922],[5,"SchemaDescriptor",11158],[6,"SeekFrom",11043],[10,"VarAggSeries",4091,11159],[5,"StringNameSpace",11160],[10,"TakeChunked",4091,11026],[5,"IRPlan",11023],[10,"ToDummies",4091,11161],[10,"PolarsTruncate",4091,11162],[5,"AllocError",11032],[5,"RwLock",11163],[5,"SchemaInferenceResult",10234,11164],[10,"PolarsUpsample",4091,11165],[10,"VecHash",4091,11166],[6,"JsonFormat",4091,11078],[5,"BTreeMap",11167],[5,"IoSlice",11043],[10,"ArrayNameSpace",9314,11168],[10,"AsArray",9314,11169],[10,"AsString",9417,11045],[6,"Pattern",9417,11170],[5,"DatetimeInfer",9455,11171],[10,"StrpTimeParser",9455,11171],[17,"Error"],[10,"TryFromWithUnit",9455,11171],[6,"CloudType",9485,11102],[5,"AnonymousBuilder",9901,11172],[6,"RollingFunction",10133,11173],[6,"RollingFunctionBy",10162,11174],[5,"MutableNullArray",10204,11175],[5,"MutableBitmap",11176],[10,"AsSeries",10264,11066],[5,"Utf8Array",11177],[5,"BinaryArray",11178],[5,"SeriesIter",10381,11179],[5,"Rc",11180],[8,"FillNullLimit",1609],[10,"InitHashMaps",1919],[10,"InitHashMaps2",1919],[5,"TrueT",1919],[8,"PolarsResult",3344],[15,"IO",9246],[15,"Context",9246],[15,"Count",9240],[15,"Slice",9241],[8,"ChunkJoinOptIds",4091],[8,"DynArgs",4091],[8,"AllowedOptimizations",4091],[10,"ListFromIter",4091],[15,"Quantile",9119],[15,"Min",9119],[15,"Max",9119],[15,"IsBetween",10086],[15,"Any",10086],[15,"All",10086],[15,"GroupBy",9129],[15,"Union",9129],[15,"Sort",9129],[15,"Cache",9129],[15,"ExtContext",9129],[15,"DataFrameScan",9129],[15,"IR",9129],[15,"Select",9129],[15,"HStack",9129],[15,"Scan",9129],[15,"MapFunction",9129],[15,"Filter",9129],[15,"Distinct",9129],[15,"Slice",9129],[15,"Sink",9129],[15,"Join",9129],[15,"HConcat",9129],[15,"SortBy",9183],[15,"Filter",9183],[15,"Cast",9183],[15,"Sort",9183],[15,"Gather",9183],[15,"RenameAlias",9183],[15,"Ternary",9183],[15,"Function",9183],[15,"Window",9183],[15,"AnonymousFunction",9183],[15,"Slice",9183],[15,"BinaryExpr",9183],[15,"Round",10089],[15,"RoundSF",10089],[15,"Clip",10089],[15,"BackwardFill",10089],[15,"ForwardFill",10089],[15,"Random",10089],[15,"GatherEvery",10089],[15,"ValueCounts",10089],[15,"Rank",10089],[15,"Replace",10089],[15,"CumCount",10089],[15,"CumSum",10089],[15,"CumProd",10089],[15,"CumMin",10089],[15,"CumMax",10089],[15,"Range",9243],[15,"ConcatHorizontal",10111],[15,"ConcatVertical",10111],[15,"ExtractGroups",10111],[15,"SplitExact",10111],[15,"Contains",10111],[15,"Find",10111],[15,"Replace",10111],[15,"DatetimeFunction",10125],[10,"Utf8FromIter",10377],[10,"BinaryFromIter",10377]],"r":[[1,11181],[2,11181],[3,11181],[4,11181],[6,10989],[7,11181],[8,11181],[9,11181],[13,11181],[14,11181],[16,10989],[17,10872],[18,10872],[19,10872],[112,10872],[135,10872],[136,10872],[161,10872],[163,10872],[217,10872],[270,10872],[412,10872],[461,10872],[561,10872],[564,10872],[699,10872],[824,10931],[852,10932],[853,10932],[854,10939],[855,10939],[856,10941],[857,10936],[858,10937],[859,10933],[860,10935],[861,10938],[862,10934],[863,10937],[864,10936],[865,10942],[866,10943],[867,10939],[1000,10936],[1016,10935],[1044,10936],[1109,10932],[1110,10932],[1111,10937],[1112,10933],[1113,10935],[1114,10938],[1115,10934],[1116,10937],[1124,10935],[1126,10893],[1154,10947],[1155,10947],[1168,10948],[1170,10949],[1171,10949],[1174,10916],[1175,10916],[1176,10916],[1177,10916],[1178,10916],[1224,10916],[1244,11182],[1245,11182],[1254,10898],[1255,10898],[1256,10952],[1257,10898],[1258,10898],[1259,10898],[1260,10898],[1483,10880],[1484,10880],[1485,10880],[1486,10880],[1498,10880],[1527,10880],[1558,10959],[1581,10960],[1582,10960],[1583,10960],[1584,10960],[1596,10960],[1597,10960],[1598,10960],[1601,10960],[1603,10960],[1610,10961],[1611,10961],[1612,10961],[1613,10961],[1614,10961],[1615,10961],[1616,10961],[1617,10961],[1618,10961],[1619,10961],[1620,10961],[1621,10961],[1622,10961],[1623,10961],[1624,10961],[1625,10961],[1626,10961],[1627,10961],[1628,10961],[1629,10961],[1630,10961],[1631,10961],[1632,10961],[1633,10961],[1634,10961],[1635,10961],[1636,10961],[1639,10961],[1640,10961],[1649,10961],[1650,10962],[1652,10892],[1653,10892],[1666,10961],[1708,10961],[1711,10961],[1720,10961],[1723,10961],[1766,10961],[1772,10961],[1809,10961],[1811,10963],[1815,10963],[1816,10963],[1817,10963],[1818,10963],[1819,10963],[1820,10963],[1821,10963],[1822,10963],[1823,10963],[1824,10963],[1825,10963],[1826,10963],[1827,10963],[1828,10963],[1829,10963],[1830,10963],[1831,10963],[1832,10963],[1833,10963],[1834,10963],[1835,10963],[1836,10963],[1837,10963],[1838,10963],[1839,10963],[1840,10963],[1841,10963],[1842,10963],[1843,10963],[1844,10963],[1845,10963],[1846,11183],[1847,11183],[1848,11184],[1849,11184],[1850,11184],[1854,10967],[1856,10967],[1874,10967],[1880,10962],[1881,11185],[1882,11185],[1883,11185],[1884,11185],[1887,11186],[1888,11187],[1889,11187],[1890,11187],[1891,11187],[1892,11187],[1893,11187],[1894,11187],[1895,10962],[1896,10892],[1897,10892],[1908,11188],[1909,11189],[1910,11189],[1911,11189],[1912,11188],[1913,11188],[1914,11190],[1915,11188],[1916,11189],[1917,11189],[1918,11189],[1920,10911],[1924,10871],[1925,10976],[1926,10976],[1927,10976],[1928,10956],[1930,10890],[1934,10871],[1936,10871],[1937,10871],[1939,10871],[1944,10871],[1945,10871],[1946,10974],[1949,10974],[1950,10975],[1951,10979],[1952,10978],[1953,10871],[1954,10890],[1955,10890],[1956,10890],[1961,11191],[1962,10871],[1965,11192],[1966,10871],[1971,11193],[1972,10871],[1977,11194],[1978,10871],[1982,10871],[1983,10919],[1984,10919],[1987,10871],[1993,10871],[1994,10871],[1998,10871],[1999,10871],[2000,10911],[2002,10979],[2006,11195],[2007,11151],[2008,11195],[2009,11195],[2010,11196],[2011,11195],[2013,10871],[2014,10871],[2018,10871],[2019,10871],[2023,10871],[2024,10871],[2028,10871],[2029,10871],[2033,10871],[2034,10871],[2036,10986],[2045,10871],[2046,10871],[2048,10912],[2049,10912],[2061,10871],[2064,10871],[2066,10871],[2067,10911],[2071,11196],[2072,11196],[2073,11195],[2074,11196],[2075,11196],[2076,10871],[2077,10871],[2078,10871],[2079,10871],[2081,10978],[2082,10911],[2085,10964],[2089,10871],[2091,10871],[2095,10973],[2101,11197],[2102,10871],[2103,10913],[2104,10890],[2107,10871],[2111,10871],[2112,10871],[2116,10871],[2117,10871],[2121,10871],[2122,10871],[2126,10871],[2127,10871],[2131,10890],[2301,10979],[2315,10912],[2404,10890],[2930,10979],[2931,10979],[2935,10890],[3300,10974],[3301,10974],[3302,10975],[3303,10979],[3304,10978],[3306,10979],[3310,10978],[3311,10979],[3313,10979],[3314,10979],[3315,10974],[3316,10974],[3317,10978],[3322,10978],[3323,10989],[3329,10989],[3332,10989],[3340,10989],[3350,10876],[3357,10876],[3358,10876],[3359,10990],[3375,10876],[3388,10876],[3404,10990],[3411,10876],[3412,10876],[3413,10876],[3414,10876],[3415,10876],[3416,10990],[3417,10876],[3436,11198],[3437,11198],[3438,11198],[3440,10988],[3445,10988],[3446,10988],[3448,10988],[3449,10988],[3517,10988],[3551,10988],[3617,10988],[3699,11005],[3728,10879],[3731,11002],[3732,11002],[3734,10879],[3735,10879],[3736,10879],[3737,10879],[3738,10879],[3739,10879],[3742,10879],[3744,11013],[3756,10879],[3765,11002],[3832,11002],[3842,11002],[3966,11018],[3967,11019],[3968,11019],[3969,11019],[3970,11019],[3971,11019],[3972,11019],[3973,11019],[3974,11019],[3975,11019],[3979,11020],[3984,11021],[3985,11021],[4005,11001],[4036,11001],[4057,11001],[4071,11001],[4072,11001],[4073,11001],[4089,11199],[4090,11199],[4093,11031],[4100,11094],[4102,11100],[4105,11033],[4106,11033],[4107,11096],[4113,10911],[4114,10917],[4115,11038],[4118,10931],[4123,10871],[4124,10976],[4126,10976],[4127,10976],[4128,11039],[4129,10882],[4130,10956],[4132,11000],[4134,11044],[4135,11047],[4137,11080],[4138,10890],[4139,11050],[4141,11080],[4142,11145],[4143,11080],[4146,11200],[4152,11053],[4153,11057],[4158,10871],[4159,10939],[4162,11104],[4164,10871],[4165,10871],[4167,10871],[4168,11035],[4175,10871],[4176,10941],[4177,11087],[4178,10871],[4179,10879],[4182,11072],[4183,11074],[4185,11081],[4190,10974],[4194,10974],[4195,10975],[4196,11088],[4197,10979],[4198,11064],[4199,10978],[4200,10871],[4204,11086],[4205,11086],[4206,10961],[4207,11149],[4208,10961],[4209,10961],[4210,10961],[4211,10961],[4212,10961],[4213,10961],[4214,10961],[4215,10961],[4216,10961],[4217,10961],[4218,10961],[4219,10961],[4220,10923],[4221,11025],[4222,10961],[4223,10961],[4224,10961],[4225,10961],[4226,10961],[4227,10961],[4228,10961],[4229,10961],[4230,10961],[4231,10961],[4232,10961],[4233,10961],[4234,10872],[4235,10936],[4236,10947],[4237,10947],[4238,10922],[4240,11083],[4241,11073],[4249,11075],[4261,11108],[4262,11075],[4263,11075],[4264,11075],[4265,11028],[4266,11054],[4267,11076],[4274,10890],[4275,10890],[4276,10988],[4277,11138],[4278,11027],[4282,10890],[4289,11191],[4290,11110],[4292,10871],[4296,11092],[4297,11192],[4299,11111],[4300,10871],[4307,11193],[4308,10871],[4310,11026],[4317,11085],[4321,11009],[4327,11092],[4328,11194],[4329,11112],[4330,10871],[4331,11099],[4332,11003],[4341,11031],[4344,11031],[4345,11109],[4346,11147],[4353,11200],[4354,11200],[4355,10871],[4356,10919],[4358,10919],[4359,11041],[4360,11147],[4361,11098],[4362,11201],[4364,10961],[4365,10961],[4375,10871],[4383,10871],[4384,10871],[4389,10871],[4390,10871],[4398,11134],[4399,11134],[4400,11134],[4404,11037],[4405,11035],[4409,10911],[4411,11035],[4413,10979],[4414,11002],[4416,11002],[4418,10879],[4419,10879],[4420,10879],[4421,10879],[4422,10879],[4423,10879],[4428,11081],[4438,11195],[4439,11200],[4444,11151],[4445,11195],[4446,10879],[4447,10923],[4448,11195],[4451,11062],[4453,10997],[4454,11006],[4455,11151],[4456,11196],[4457,11195],[4459,11025],[4462,10871],[4463,10871],[4468,10871],[4469,10871],[4474,10871],[4475,10871],[4480,10871],[4481,10871],[4486,10871],[4487,10871],[4490,11082],[4492,11013],[4493,11004],[4494,11120],[4495,10986],[4496,10998],[4497,10968],[4499,11055],[4500,11077],[4501,11077],[4502,11042],[4503,11042],[4504,11042],[4505,11055],[4506,11055],[4507,11055],[4510,10961],[4514,10961],[4526,11025],[4527,11004],[4528,11025],[4529,11024],[4530,11093],[4532,11025],[4533,11025],[4535,11078],[4536,11105],[4538,11078],[4539,11078],[4540,11078],[4544,11073],[4546,11202],[4548,11202],[4549,11202],[4555,11067],[4556,11101],[4557,11004],[4558,11004],[4559,11069],[4566,11025],[4571,10878],[4578,10937],[4579,10933],[4580,10935],[4581,10871],[4583,11139],[4584,11040],[4585,11120],[4586,11146],[4587,10934],[4588,10937],[4589,10871],[4590,11095],[4592,11095],[4594,10912],[4597,10912],[4622,11005],[4645,11095],[4650,11137],[4651,11137],[4663,11093],[4665,10936],[4667,10968],[4668,11100],[4680,11095],[4688,11075],[4689,10923],[4690,10923],[4691,10878],[4692,10894],[4693,10871],[4696,10871],[4698,10871],[4703,11031],[4704,11094],[4712,11053],[4713,10911],[4715,11200],[4716,11079],[4717,11081],[4718,11079],[4719,11056],[4721,11081],[4722,11058],[4723,11101],[4726,11196],[4727,11196],[4728,11195],[4729,11196],[4730,11196],[4732,11139],[4733,10871],[4734,10876],[4735,10871],[4736,10871],[4737,10916],[4738,10871],[4739,10880],[4740,10876],[4741,11157],[4742,11003],[4743,11162],[4745,11165],[4747,11090],[4748,10943],[4751,11150],[4752,10920],[4754,11076],[4762,11084],[4763,11084],[4764,10961],[4766,11035],[4772,10978],[4781,11093],[4784,11003],[4785,11071],[4786,10921],[4787,11099],[4788,11203],[4789,11099],[4793,11065],[4794,11204],[4799,10911],[4802,11034],[4803,11068],[4804,11070],[4805,10997],[4808,10997],[4809,10967],[4814,11107],[4815,11107],[4816,11076],[4817,10875],[4819,11035],[4820,11140],[4821,11118],[4822,11156],[4823,11084],[4824,11049],[4825,10915],[4826,11035],[4839,10962],[4840,10879],[4848,10892],[4849,10892],[4850,11035],[4854,11152],[4856,11073],[4858,10964],[4859,11097],[4867,10989],[4869,10871],[4870,10939],[4872,11091],[4873,11045],[4874,11052],[4876,10871],[4883,11093],[4887,11007],[4888,10973],[4891,11122],[4899,11026],[4901,11089],[4902,11066],[4904,11086],[4912,11197],[4913,11141],[4915,10871],[4916,10913],[4917,10890],[4921,11161],[4935,10871],[4942,10871],[4943,10871],[4948,10871],[4949,10871],[4954,10871],[4955,10871],[4960,10871],[4961,10871],[4962,11123],[4966,11096],[4968,10988],[4971,10890],[4974,11061],[4983,11159],[4984,11166],[4988,11086],[4990,11074],[4993,11093],[4994,11093],[5003,11081],[5094,11205],[5099,11205],[5109,11206],[5119,11002],[5121,11207],[5123,11208],[5134,11208],[5145,11209],[5151,11210],[5154,11211],[5167,11212],[5172,11212],[5175,10961],[5181,11213],[5205,11214],[5209,11215],[5213,11216],[5221,11210],[5223,11086],[5479,10979],[5484,11215],[5495,11210],[5504,11200],[5505,11200],[5506,11200],[5512,11217],[5515,11218],[5517,11218],[5519,11218],[5705,11219],[5713,11208],[5717,11220],[5718,11207],[5720,11221],[5732,11207],[5743,11221],[5745,11222],[5748,11221],[5749,11221],[5750,11222],[5751,11222],[5760,11139],[5761,11223],[5767,11224],[5768,10890],[5776,11225],[5778,11208],[5779,11225],[5781,11225],[5783,11225],[5785,11208],[5786,11225],[5793,11181],[5795,11211],[5796,11213],[5797,11092],[5799,11211],[5800,11211],[5801,11189],[5802,11189],[5803,11189],[5870,11139],[5871,11024],[6128,11129],[6130,11181],[6132,11226],[6274,11227],[6275,11210],[6280,11207],[6281,11207],[6283,11092],[6292,11009],[6293,11009],[6555,11002],[6581,10961],[6619,11210],[6623,11139],[6626,10961],[6631,11228],[6727,11002],[6731,11208],[6735,11222],[6951,10961],[6960,11210],[6962,10961],[7003,11200],[7005,11200],[7016,11073],[7017,11073],[7096,11229],[7108,11230],[7109,11230],[7111,11231],[7119,11207],[7125,11151],[7126,11164],[7259,11211],[7260,11211],[7262,11232],[7263,11082],[7265,11232],[7266,11233],[7410,11083],[7412,11200],[7413,11234],[7421,11235],[7426,11236],[7429,11237],[7437,11215],[7440,11215],[7446,11223],[7480,11210],[7495,11210],[7507,11095],[7554,10979],[7555,10979],[7560,11209],[7571,11210],[7574,11210],[7582,11238],[7583,11200],[7584,11215],[7594,11215],[7600,11215],[7614,10890],[7625,11215],[7646,11213],[7684,11213],[7695,11239],[7696,11240],[7744,11241],[7767,11215],[7771,11210],[7772,11139],[7823,10876],[7824,10876],[7825,10876],[7826,10876],[7833,11138],[7843,11215],[7874,11208],[7885,11242],[7886,11243],[7888,11244],[7895,11230],[7898,11200],[7990,11245],[7993,10961],[8006,11217],[8046,11139],[8064,10961],[8081,11152],[8083,11152],[8101,11229],[8114,11213],[8115,11246],[8117,11246],[8119,11246],[8121,11246],[8123,11246],[8135,11215],[8158,11086],[8162,11211],[8723,11210],[8744,11139],[8904,11086],[9117,10961],[9266,11018],[9267,11019],[9268,11019],[9269,11019],[9270,11019],[9271,11019],[9272,11019],[9273,11019],[9274,11019],[9275,11019],[9279,10963],[9283,10963],[9284,10963],[9285,10963],[9286,10963],[9287,10963],[9288,10963],[9289,10963],[9290,10963],[9291,10963],[9292,10963],[9293,10963],[9294,10963],[9295,10963],[9296,10963],[9297,10963],[9298,10963],[9299,10963],[9300,10963],[9301,10963],[9302,10963],[9303,10963],[9304,10963],[9305,10963],[9306,10963],[9307,10963],[9308,10963],[9309,10963],[9310,10963],[9311,10963],[9312,10963],[9313,10963],[9314,11168],[9315,11169],[9333,11060],[9349,11064],[9350,11110],[9351,11111],[9352,11112],[9353,11071],[9354,11156],[9355,11045],[9356,11141],[9409,11247],[9417,11045],[9423,11170],[9424,11045],[9446,11045],[9455,11171],[9457,11171],[9458,11171],[9468,11171],[9487,11102],[9488,11102],[9522,11248],[9534,11102],[9535,11102],[9541,10911],[9545,10871],[9546,10976],[9547,10976],[9548,10976],[9549,10956],[9551,10890],[9555,10871],[9557,10871],[9558,10871],[9560,10871],[9565,10871],[9566,10871],[9567,10974],[9570,10974],[9571,10975],[9572,10979],[9573,10978],[9574,10871],[9575,10890],[9576,10890],[9577,10890],[9582,11191],[9583,10871],[9586,11192],[9587,10871],[9592,11193],[9593,10871],[9598,11194],[9599,10871],[9603,10871],[9604,10919],[9605,10919],[9608,10871],[9614,10871],[9615,10871],[9619,10871],[9620,10871],[9621,10911],[9623,10979],[9627,11195],[9628,11151],[9629,11195],[9630,11195],[9631,11196],[9632,11195],[9634,10871],[9635,10871],[9639,10871],[9640,10871],[9644,10871],[9645,10871],[9649,10871],[9650,10871],[9654,10871],[9655,10871],[9657,10986],[9666,10871],[9667,10871],[9669,10912],[9670,10912],[9682,10871],[9685,10871],[9687,10871],[9688,10911],[9692,11196],[9693,11196],[9694,11195],[9695,11196],[9696,11196],[9697,10871],[9698,10871],[9699,10871],[9700,10871],[9702,10978],[9703,10911],[9706,10964],[9710,10871],[9712,10871],[9716,10973],[9722,11197],[9723,10871],[9724,10913],[9725,10890],[9728,10871],[9732,10871],[9733,10871],[9737,10871],[9738,10871],[9742,10871],[9743,10871],[9747,10871],[9748,10871],[9752,10890],[9765,10979],[9768,10912],[9773,10890],[9790,10979],[9791,10979],[9792,10890],[9810,10974],[9811,10974],[9812,10975],[9813,10979],[9814,10978],[9816,10979],[9820,10978],[9821,10979],[9823,10979],[9824,10979],[9825,10974],[9826,10974],[9827,10978],[9832,10978],[9833,10989],[9834,10989],[9835,10989],[9836,10989],[9837,11230],[9838,11230],[9839,11230],[9840,11134],[9841,11134],[9842,11134],[9846,11117],[9898,11020],[9901,11172],[9921,11183],[9922,11183],[9937,11087],[9940,11088],[9977,11037],[10018,11090],[10047,11091],[10058,11089],[10082,11037],[10083,11037],[10084,11037],[10085,11037],[10127,11088],[10131,11090],[10137,11173],[10166,11174],[10191,11184],[10192,11184],[10193,11184],[10194,11082],[10197,11082],[10198,11233],[10199,11249],[10200,11250],[10201,11250],[10202,11250],[10203,11250],[10204,11175],[10234,11164],[10248,11164],[10261,10967],[10262,10967],[10263,10967],[10264,11066],[10265,11066],[10286,10962],[10289,10962],[10290,11185],[10291,11185],[10292,11185],[10293,11185],[10296,11186],[10297,11187],[10298,11187],[10299,11187],[10300,11187],[10301,11187],[10302,11187],[10303,11187],[10304,10962],[10305,10892],[10306,10892],[10317,11050],[10318,11152],[10319,11052],[10338,11229],[10346,11152],[10348,11152],[10351,11229],[10357,11246],[10359,11246],[10361,11246],[10363,11246],[10365,11246],[10371,11061],[10377,11251],[10378,11251],[10382,10961],[10384,10998],[10385,10915],[10388,10875],[10389,11179],[10390,11179],[10391,10915],[10400,10875],[10406,10875],[10585,10875],[10703,10875],[10794,10889],[10795,10889],[10817,10878],[10818,10878],[10819,10878],[10821,10878],[10825,10878],[10838,10894],[10839,10894],[10846,11116]],"b":[[26,"impl-Add-for-ChunkedArray%3CT%3E"],[27,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[28,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[29,"impl-Add-for-%26ChunkedArray%3CT%3E"],[30,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[31,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[32,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[33,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[34,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[35,"impl-Add-for-ChunkedArray%3CStringType%3E"],[36,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[37,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[39,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[40,"impl-AggList-for-ChunkedArray%3CListType%3E"],[41,"impl-AggList-for-ChunkedArray%3CT%3E"],[42,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[43,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[44,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[45,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[48,"impl-ChunkedArray%3CListType%3E"],[49,"impl-ChunkedArray%3CFixedSizeListType%3E"],[50,"impl-ChunkedArray%3CListType%3E"],[51,"impl-ChunkedArray%3CFixedSizeListType%3E"],[55,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[56,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[57,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[58,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[59,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[60,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[62,"impl-ChunkedArray%3CListType%3E"],[63,"impl-ChunkedArray%3CFixedSizeListType%3E"],[65,"impl-ChunkedArray%3CFloat32Type%3E"],[66,"impl-ChunkedArray%3CFloat64Type%3E"],[69,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[70,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[71,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[72,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[73,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[74,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[75,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[76,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[77,"impl-ChunkedArray%3CBinaryType%3E"],[78,"impl-ChunkedArray%3CT%3E"],[79,"impl-ChunkedArray%3CStringType%3E"],[82,"impl-ChunkedArray%3CListType%3E"],[83,"impl-ChunkedArray%3CFixedSizeListType%3E"],[84,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[85,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[86,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[87,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[88,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[89,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[90,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[91,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[92,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[93,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[94,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[95,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[97,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[98,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[99,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[100,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[101,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[102,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[103,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[104,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[105,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[106,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[107,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[108,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[109,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[110,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[114,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[115,"impl-ChunkedArray%3CStringType%3E"],[119,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[120,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[122,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[123,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[124,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[125,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[126,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[127,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[128,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[129,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[130,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[138,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[139,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[140,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[141,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[142,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[143,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[154,"impl-Container-for-ChunkedArray%3CT%3E"],[155,"impl-ChunkedArray%3CT%3E"],[173,"impl-Div-for-%26ChunkedArray%3CT%3E"],[174,"impl-Div-for-ChunkedArray%3CT%3E"],[175,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[176,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[184,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[185,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[186,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[187,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[188,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[189,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[190,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[191,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[192,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[193,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[194,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[195,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[196,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[197,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[198,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[199,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[200,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[201,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[202,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[203,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[205,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[206,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[207,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[208,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[209,"impl-ChunkFilter%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[210,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[211,"impl-ChunkFilter%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[212,"impl-ChunkFilter%3CListType%3E-for-ChunkedArray%3CListType%3E"],[213,"impl-ChunkFilter%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[214,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[215,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[218,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[219,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[220,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[221,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[222,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[223,"impl-Debug-for-ChunkedArray%3CT%3E"],[224,"impl-Debug-for-ChunkedArray%3CListType%3E"],[226,"impl-ChunkedArray%3CFixedSizeListType%3E"],[227,"impl-ChunkedArray%3CListType%3E"],[236,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[237,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[238,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[239,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[240,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[241,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[242,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[243,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[244,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[245,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[246,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[247,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[248,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[249,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[250,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[251,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[252,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[253,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[254,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[255,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[256,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[257,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[258,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[259,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[260,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[261,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[262,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[263,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[264,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[265,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[266,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[267,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[268,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[269,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[271,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[272,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[273,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[274,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[275,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[276,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[277,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[278,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[280,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[281,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[282,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[283,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[284,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[285,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[286,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[287,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[288,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[289,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[290,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[291,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[294,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[295,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[296,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[297,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[298,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[299,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[300,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[301,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[302,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[303,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[304,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[305,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[306,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[307,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[308,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[309,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[311,"impl-ChunkedArray%3CListType%3E"],[312,"impl-ChunkedArray%3CFixedSizeListType%3E"],[314,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[315,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[316,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[317,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[318,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[319,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[320,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[321,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[322,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[323,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[324,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[330,"impl-ChunkedArray%3CListType%3E"],[331,"impl-ChunkedArray%3CFixedSizeListType%3E"],[335,"impl-ChunkedArray%3CListType%3E"],[336,"impl-ChunkedArray%3CFixedSizeListType%3E"],[342,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[343,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[344,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[345,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[346,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[347,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[348,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[349,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[350,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[351,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[352,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[353,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[355,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[356,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[357,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[358,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[359,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[360,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[361,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[362,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[363,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[364,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[365,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[366,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[367,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[368,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[369,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[370,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[371,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[372,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[378,"impl-ChunkedArray%3CFixedSizeListType%3E"],[379,"impl-ChunkedArray%3CListType%3E"],[387,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[388,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[389,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[390,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[391,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[392,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[393,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[394,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[396,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[397,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[416,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[422,"impl-Container-for-ChunkedArray%3CT%3E"],[423,"impl-ChunkedArray%3CT%3E"],[428,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[429,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[430,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[431,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[432,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[433,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[434,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[435,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[436,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[437,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[438,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[439,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[440,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[441,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[442,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[443,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[444,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[445,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[446,"impl-ChunkedArray%3CBooleanType%3E"],[447,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[448,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[449,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[450,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[451,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[452,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[453,"impl-ChunkedArray%3CBooleanType%3E"],[454,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[455,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[456,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[457,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[458,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[459,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[466,"impl-ChunkedArray%3CBooleanType%3E"],[467,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[469,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[470,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[471,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[472,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[473,"impl-ChunkedArray%3CBooleanType%3E"],[474,"impl-ChunkedArray%3CT%3E"],[475,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[476,"impl-Mul-for-ChunkedArray%3CT%3E"],[477,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[478,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[481,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[482,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[483,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[485,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[486,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[487,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[488,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[489,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[490,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[491,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[492,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[493,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[494,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[495,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[496,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[497,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[498,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[499,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[500,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[501,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[502,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[503,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[504,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[505,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[506,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[507,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[508,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[509,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[510,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[511,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[512,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[513,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[514,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[515,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[516,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[517,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[518,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[519,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[520,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[521,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[522,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[523,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[524,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[526,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[527,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[528,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[529,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[530,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[531,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[532,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[533,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[540,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[541,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[542,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[543,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[544,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[545,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[546,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[547,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[548,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[549,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[550,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[551,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[552,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[553,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[554,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[555,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[556,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[557,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[558,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[559,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[562,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[563,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[565,"impl-ChunkedArray%3CStringType%3E"],[566,"impl-ChunkedArray%3CListType%3E"],[567,"impl-ChunkedArray%3CStringType%3E"],[568,"impl-ChunkedArray%3CListType%3E"],[571,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[572,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[573,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[574,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[575,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[576,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[583,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[584,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[585,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[586,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[587,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[588,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[589,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[590,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[591,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[592,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[593,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[594,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[595,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[596,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[597,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[598,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[599,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[600,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[601,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[602,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[603,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[604,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[605,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[606,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[607,"impl-Rem-for-ChunkedArray%3CT%3E"],[608,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[611,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[612,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[613,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[614,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[615,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[616,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[617,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[618,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[623,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[624,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[625,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[626,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[627,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[628,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[629,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[630,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[631,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[632,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[633,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[634,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[635,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[636,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[637,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[643,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[644,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[645,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[646,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[647,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[648,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[649,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[650,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[651,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[652,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[653,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[654,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[655,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[656,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[657,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[658,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[660,"impl-Container-for-ChunkedArray%3CT%3E"],[661,"impl-ChunkedArray%3CT%3E"],[662,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[663,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[664,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[665,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[666,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[667,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[668,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[669,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[670,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[671,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[672,"impl-Container-for-ChunkedArray%3CT%3E"],[673,"impl-ChunkedArray%3CT%3E"],[675,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[676,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[677,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[678,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[679,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[680,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[681,"impl-Sub-for-ChunkedArray%3CT%3E"],[683,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[684,"impl-ChunkedArray%3CBooleanType%3E"],[685,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[686,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[687,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[689,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[690,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[693,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[694,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[695,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[696,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[697,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[698,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[703,"impl-ChunkedArray%3CFixedSizeListType%3E"],[704,"impl-ChunkedArray%3CListType%3E"],[705,"impl-ChunkedArray%3CT%3E"],[706,"impl-ChunkedArray%3CListType%3E"],[711,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[712,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[713,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[714,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[715,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[716,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[718,"impl-ChunkedArray%3CListType%3E"],[719,"impl-ChunkedArray%3CFixedSizeListType%3E"],[732,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[733,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[734,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[735,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[736,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[741,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[742,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[743,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[744,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[745,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[746,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[747,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[748,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[749,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[750,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[751,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[752,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[753,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[754,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[755,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[756,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[757,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[758,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[759,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[760,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[761,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[762,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[763,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[764,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[765,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[766,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[767,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[768,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[769,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[770,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[771,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[772,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[773,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[774,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[775,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[785,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[786,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[787,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[788,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[789,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[790,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[791,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[792,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[793,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[794,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[795,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[796,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[797,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[798,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[799,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[800,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[801,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[802,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[803,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[804,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[805,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[806,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[807,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[808,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[809,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[810,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[811,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[812,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[813,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[814,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[815,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[816,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[817,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[818,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[819,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[820,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[995,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[996,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1279,"impl-MetadataProperties"],[1280,"impl-Flags-for-MetadataProperties"],[1281,"impl-MetadataFlags"],[1282,"impl-Flags-for-MetadataFlags"],[1327,"impl-Metadata%3CT%3E"],[1328,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1351,"impl-UpperHex-for-MetadataProperties"],[1352,"impl-Binary-for-MetadataProperties"],[1353,"impl-Octal-for-MetadataProperties"],[1354,"impl-Debug-for-MetadataProperties"],[1355,"impl-LowerHex-for-MetadataProperties"],[1356,"impl-Binary-for-MetadataFlags"],[1357,"impl-UpperHex-for-MetadataFlags"],[1358,"impl-LowerHex-for-MetadataFlags"],[1359,"impl-Debug-for-MetadataFlags"],[1360,"impl-Octal-for-MetadataFlags"],[1368,"impl-Flags-for-MetadataProperties"],[1369,"impl-MetadataProperties"],[1370,"impl-MetadataFlags"],[1371,"impl-Flags-for-MetadataFlags"],[1384,"impl-Metadata%3CT%3E"],[1385,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1422,"impl-Metadata%3CT%3E"],[1423,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1427,"impl-Metadata%3CT%3E"],[1428,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1489,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1490,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1523,"impl-ObjectArray%3CT%3E"],[1524,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1538,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1539,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1549,"impl-ObjectArray%3CT%3E"],[1550,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1552,"impl-ObjectArray%3CT%3E"],[1553,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1555,"impl-ObjectArray%3CT%3E"],[1556,"impl-Array-for-ObjectArray%3CT%3E"],[1559,"impl-ObjectChunkedBuilder%3CT%3E"],[1560,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1562,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1563,"impl-ObjectChunkedBuilder%3CT%3E"],[2305,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2306,"impl-Logical%3CDurationType,+Int64Type%3E"],[2308,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2309,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2310,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2311,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2312,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2561,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2562,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2563,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2564,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2565,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2574,"impl-PartialEq-for-DataType"],[2575,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2581,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2582,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2583,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2585,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2586,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2587,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2621,"impl-Display-for-AnyValue%3C\'_%3E"],[2622,"impl-Debug-for-AnyValue%3C\'a%3E"],[2624,"impl-Display-for-DataType"],[2625,"impl-Debug-for-DataType"],[2627,"impl-Debug-for-TimeUnit"],[2628,"impl-Display-for-TimeUnit"],[2633,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2635,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2649,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2650,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2651,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2652,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2654,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2656,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2658,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2659,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2660,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2662,"impl-From%3C%26ArrowField%3E-for-Field"],[2685,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2687,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2710,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2711,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2712,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2713,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2714,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2718,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2719,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2720,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2721,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2722,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2758,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2759,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2760,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2762,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2763,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2764,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2868,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[2869,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[2870,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[2871,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[2872,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[2922,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2923,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2924,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2926,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2927,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2928,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2965,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2966,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2967,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2968,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2969,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2970,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[2971,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[2972,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[2979,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2980,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2981,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2983,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2984,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2985,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2989,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[2990,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3011,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3012,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3019,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3020,"impl-Logical%3CDurationType,+Int64Type%3E"],[3026,"impl-Logical%3CTimeType,+Int64Type%3E"],[3027,"impl-Logical%3CDateType,+Int32Type%3E"],[3028,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3043,"impl-Logical%3CDurationType,+Int64Type%3E"],[3044,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3092,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3093,"impl-Logical%3CDateType,+Int32Type%3E"],[3094,"impl-Logical%3CTimeType,+Int64Type%3E"],[3100,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3101,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3390,"impl-Display-for-ErrString"],[3391,"impl-Debug-for-ErrString"],[3392,"impl-Display-for-PolarsError"],[3393,"impl-Debug-for-PolarsError"],[3397,"impl-From%3CError%3E-for-PolarsError"],[3398,"impl-From%3CError%3E-for-PolarsError"],[3399,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3400,"impl-From%3CParquetError%3E-for-PolarsError"],[3402,"impl-From%3CError%3E-for-PolarsError"],[3403,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3526,"impl-Display-for-DataFrame"],[3527,"impl-Debug-for-DataFrame"],[3532,"impl-From%3C%26Schema%3E-for-DataFrame"],[3533,"impl-From%3CStructChunked%3E-for-DataFrame"],[3535,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3562,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3563,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3564,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3565,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3566,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3567,"impl-Index%3Cusize%3E-for-DataFrame"],[3568,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3569,"impl-Index%3C%26str%3E-for-DataFrame"],[3588,"impl-DataFrame"],[3589,"impl-Container-for-DataFrame"],[3598,"impl-Container-for-DataFrame"],[3599,"impl-DataFrame"],[3637,"impl-Container-for-DataFrame"],[3638,"impl-DataFrame"],[3642,"impl-Container-for-DataFrame"],[3643,"impl-DataFrame"],[3666,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3667,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BArrowField%5D)%3E-for-DataFrame"],[3840,"impl-Debug-for-GroupByMethod"],[3841,"impl-Display-for-GroupByMethod"],[3847,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3848,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3850,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3884,"impl-IntoIterator-for-GroupsIdx"],[3885,"impl-IntoIterator-for-%26GroupsIdx"],[3887,"impl-IntoParallelIterator-for-GroupsIdx"],[3888,"impl-IntoParallelIterator-for-%26GroupsIdx"],[5207,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5208,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5847,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[5848,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[5849,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[5859,"impl-Default-for-Arc%3C%5BT%5D%3E"],[5860,"impl-Default-for-Arc%3CCStr%3E"],[5861,"impl-Default-for-Arc%3CT%3E"],[5862,"impl-Default-for-Arc%3Cstr%3E"],[6334,"impl-PartialEq-for-Expr"],[6335,"impl-Expr"],[6338,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6339,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6356,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6357,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6358,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6362,"impl-PartialEq-for-StructArray"],[6363,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6640,"impl-Display-for-Duration"],[6641,"impl-Debug-for-Duration"],[6663,"impl-Display-for-JoinType"],[6664,"impl-Debug-for-JoinType"],[6665,"impl-Display-for-JoinValidation"],[6666,"impl-Debug-for-JoinValidation"],[6680,"impl-Display-for-Expr"],[6681,"impl-Debug-for-Expr"],[6683,"impl-Debug-for-Operator"],[6684,"impl-Display-for-Operator"],[6686,"impl-Display-for-BooleanFunction"],[6687,"impl-Debug-for-BooleanFunction"],[6688,"impl-Debug-for-CategoricalFunction"],[6689,"impl-Display-for-CategoricalFunction"],[6690,"impl-Display-for-TemporalFunction"],[6691,"impl-Debug-for-TemporalFunction"],[6692,"impl-Display-for-PowFunction"],[6693,"impl-Debug-for-PowFunction"],[6694,"impl-Display-for-StringFunction"],[6695,"impl-Debug-for-StringFunction"],[6696,"impl-Display-for-FunctionExpr"],[6697,"impl-Debug-for-FunctionExpr"],[6712,"impl-Display-for-Arc%3CT,+A%3E"],[6713,"impl-Pointer-for-Arc%3CT,+A%3E"],[6714,"impl-Debug-for-Arc%3CT,+A%3E"],[6745,"impl-From%3CDslPlan%3E-for-LazyFrame"],[6747,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[6825,"impl-From%3CAggExpr%3E-for-Expr"],[6826,"impl-From%3Cu64%3E-for-Expr"],[6827,"impl-From%3Cu16%3E-for-Expr"],[6828,"impl-From%3Cbool%3E-for-Expr"],[6829,"impl-From%3Cf32%3E-for-Expr"],[6830,"impl-From%3Cf64%3E-for-Expr"],[6831,"impl-From%3Ci64%3E-for-Expr"],[6832,"impl-From%3Cu32%3E-for-Expr"],[6834,"impl-From%3Cu8%3E-for-Expr"],[6835,"impl-From%3Ci16%3E-for-Expr"],[6836,"impl-From%3C%26str%3E-for-Expr"],[6837,"impl-From%3Ci32%3E-for-Expr"],[6838,"impl-From%3Ci8%3E-for-Expr"],[6842,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6843,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6844,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6845,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6846,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6847,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6848,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6849,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6850,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6851,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[6857,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[6858,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[6859,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[6861,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[6878,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[6879,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[6881,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[6882,"impl-From%3CT%3E-for-Arc%3CT%3E"],[6883,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[6884,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[6885,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[6887,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[6888,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[6889,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[6890,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[6891,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[6892,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[6893,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[6894,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[6901,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[6902,"impl-From%3CMutableStructArray%3E-for-StructArray"],[6903,"impl-From%3CArrowSchema%3E-for-Schema"],[6905,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[6906,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[6907,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[6908,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[6909,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[6923,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6924,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6932,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6933,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[6945,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[6946,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[8051,"impl-Array-for-StructArray"],[8052,"impl-StructArray"],[8060,"impl-Array-for-StructArray"],[8061,"impl-StructArray"],[8747,"impl-StructArray"],[8748,"impl-Array-for-StructArray"],[8992,"impl-LazyCsvReader"],[8993,"impl-LazyFileListReader-for-LazyCsvReader"],[8994,"impl-LazyJsonLineReader"],[8995,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9042,"impl-LazyFileListReader-for-LazyCsvReader"],[9043,"impl-LazyCsvReader"],[9044,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9045,"impl-LazyJsonLineReader"],[9085,"impl-Array-for-StructArray"],[9086,"impl-StructArray"],[9474,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[9475,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[9480,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[9481,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[10150,"impl-Debug-for-RollingFunction"],[10151,"impl-Display-for-RollingFunction"],[10179,"impl-Display-for-RollingFunctionBy"],[10180,"impl-Debug-for-RollingFunctionBy"],[10396,"impl-Add%3CT%3E-for-%26Series"],[10397,"impl-Add-for-%26Series"],[10398,"impl-Add%3CT%3E-for-Series"],[10399,"impl-Add-for-Series"],[10415,"impl-SeriesSealed-for-Series"],[10416,"impl-AsSeries-for-Series"],[10462,"impl-Div%3CT%3E-for-%26Series"],[10463,"impl-Div-for-Series"],[10464,"impl-Div-for-%26Series"],[10465,"impl-Div%3CT%3E-for-Series"],[10475,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10476,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10477,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10479,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10480,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10481,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10497,"impl-Display-for-Series"],[10498,"impl-Debug-for-Series"],[10502,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[10503,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[10504,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[10506,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[10507,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[10514,"impl-FromIterator%3Ci32%3E-for-Series"],[10515,"impl-FromIterator%3C%26u16%3E-for-Series"],[10516,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[10517,"impl-FromIterator%3Cf32%3E-for-Series"],[10518,"impl-FromIterator%3C%26i32%3E-for-Series"],[10519,"impl-FromIterator%3C%26i8%3E-for-Series"],[10520,"impl-FromIterator%3Cu8%3E-for-Series"],[10521,"impl-FromIterator%3C%26u8%3E-for-Series"],[10522,"impl-FromIterator%3Ci8%3E-for-Series"],[10523,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[10524,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[10525,"impl-FromIterator%3Cf64%3E-for-Series"],[10526,"impl-FromIterator%3Cu32%3E-for-Series"],[10527,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[10528,"impl-FromIterator%3Ci64%3E-for-Series"],[10529,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[10530,"impl-FromIterator%3Ci16%3E-for-Series"],[10531,"impl-FromIterator%3C%26bool%3E-for-Series"],[10532,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[10533,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[10534,"impl-FromIterator%3C%26i64%3E-for-Series"],[10535,"impl-FromIterator%3C%26i16%3E-for-Series"],[10536,"impl-FromIterator%3C%26str%3E-for-Series"],[10537,"impl-FromIterator%3CString%3E-for-Series"],[10538,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[10539,"impl-FromIterator%3Cu64%3E-for-Series"],[10540,"impl-FromIterator%3Cbool%3E-for-Series"],[10541,"impl-FromIterator%3C%26f32%3E-for-Series"],[10542,"impl-FromIterator%3C%26u64%3E-for-Series"],[10543,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[10544,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[10545,"impl-FromIterator%3Cu16%3E-for-Series"],[10546,"impl-FromIterator%3C%26u32%3E-for-Series"],[10547,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[10548,"impl-FromIterator%3C%26f64%3E-for-Series"],[10549,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[10550,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[10551,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[10552,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[10553,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[10554,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[10555,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[10556,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[10557,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[10558,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[10570,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10571,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10572,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10574,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10575,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10576,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10615,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10616,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10617,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10619,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10620,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10621,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10630,"impl-Mul-for-%26Series"],[10631,"impl-Mul%3CT%3E-for-Series"],[10632,"impl-Mul%3CT%3E-for-%26Series"],[10633,"impl-Mul-for-Series"],[10638,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[10639,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[10640,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[10641,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[10642,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[10643,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[10644,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[10645,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[10646,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[10647,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[10648,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[10649,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[10650,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[10651,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[10652,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[10653,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[10654,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[10655,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[10656,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[10657,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[10658,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[10659,"impl-NamedFrom%3CT,+T%3E-for-Series"],[10660,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[10661,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[10662,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[10663,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[10664,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[10665,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[10666,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[10667,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[10668,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[10669,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[10670,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[10671,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[10672,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[10673,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[10674,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[10675,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[10676,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[10677,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[10678,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[10679,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[10680,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[10681,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[10682,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[10683,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[10684,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[10685,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[10686,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[10687,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[10688,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[10694,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10695,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10696,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10698,"impl-ChunkCompare%3CRhs%3E-for-Series"],[10699,"impl-ChunkCompare%3C%26str%3E-for-Series"],[10700,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[10708,"impl-Rem%3CT%3E-for-%26Series"],[10709,"impl-Rem%3CT%3E-for-Series"],[10710,"impl-Rem-for-%26Series"],[10739,"impl-Sub-for-%26Series"],[10740,"impl-Sub%3CT%3E-for-Series"],[10741,"impl-Sub-for-Series"],[10742,"impl-Sub%3CT%3E-for-%26Series"],[10765,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"],[10766,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[10767,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[10768,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAALUO/A45DzwPPQ8+Dz8PQA9FD0gPTQ9OD3MP","e":"OzAAAAEAAOceKwQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUABoAOAAFAEIAAgBGAAoAVQAIAF8ABwBoAAAAawAFAHIAFgCLABAAnwACAKMAAQCpAA0AuQATAM4ACgDaAAoA5gAAAOgAAQDsAB0AEAEUACcBEgA7ARQAUgEBAFcBHgB4AQIAfwEQAJEBAwCYAQIAnQEBAKABBwCtASEA0wEGANwBCADmATIAHQITADICAgA2AgQAPAIFAEYCAABIAhoAZAIHAHACEQCEAg8AlQIAAJcCCgCjAg0AtAICAL0CAQDEAgAAyAIHANICAQDVAgwA4wIAAOUCKAAQAwAAEgMjADgDNABvAwgAfAMRAJEDWAD3AxIAFQQHAB4ESQBrBA0AegQBAH0EGQCYBAAAmwQUALQEAwC8BAMAwgQzAAEFAAADBQAACAUSAB8FDAAuBQAAMAUHADoFAwBABQEARAUNAFkFAABcBQAAXwUBAGUFDQB+BQEAggUAAIUFAgCMBQUAkwUDAJ0FCwCvBQMAtQUOAMYFBwDQBRUA5wUHAPAFAADyBQAA9QUCAPoFEAAMBgAADwYAABEGAgAVBgIAGQYCAB0GBwAmBgAAKAYFADAGAQAzBgAANQYBADgGAwA9BgMAQgYCAEYGAwBMBgAATwYAAFcGAABcBgAAXwYBAGQGAQBnBgAAagYAAHIGAAB4BgIAgwYGAI0GDQCdBgUApQYIALAGAwC1BgEAuQYAALsGAQDBBgUAygYBANMGAQDfBgAA4QYBAOQGAADnBgAA6QYAAO0GAADvBgAA9AYMAAMHAgASBwAAFAcHAB0HAgAjBwAAJQcDACoHAQAtBwUAOQcVAFAHAQBUBwQAWgcDAGEHBgB1BwMAegcIAIQHBACLBwIAjwcFAJcHAACZBwwAqgcBAK4HAQC0BwEAtwcBALoHAwC/BwAAwQcAAMQHAQDIBwAAygcBAM0HAADPBwIA0wcMAOEHAADjBwEA5gcAAOgHAQDrBwAA7QcBAPAHAADyBwEA9QcBAPoHAAD+BwEAAggAAAUIAAAHCAAACQgDAA4IAAARCAgAGwgBAB4IBQAmCAEAKggAACwIAgAxCAAANggDADsIAQA+CAAAQAgBAEMIAABFCAEASAgAAEoIAQBNCAAATwgBAFIIAABUCAAAVwgmAH8IGACZCGcABAlYAF4JBwBoCZgAAgoHAAsKKAA1CgEAOAoPAEoKAABMCgAAWgoDAF8KAABhCgAAYwoCAGcKAQB+CgAAgAoAAIIKAACKCgAAjQoAAI8KBgCXCgQAnQoAAJ8KBAClCgEAqAoZAMcKDwDZCisABgsAADILCgA/CwAAQQsBAEQLBABKCwEATwsAAFELBQBYCwAAWwsCAGALBABmCwAAaQsQAHwLAAB/Cw8AkAsAAJMLDQCiCw0AsQsAALMLAQC3Cw8AyAsAANALAADSCwAA1wsQAOoLAADsCwIA8QshABgMZQB/DC8AsAwCALQMNQDrDAEA7gwIAPgMAAD6DAEA/QwEAAMNAQAIDQAACg0CAA4NAAARDQQAFw0EAB0NEgAxDREARA0AAEYNAwBLDQUAVA0EAFoNFQBzDQAAdg0KAIINAgCKDREAng0QALYNAQC6DQIAvg0AAMANAADFDQMAzQ0BANANAQDgDQAA4g0AAOQNAQDrDQwA/g0CAAYOAAAJDgAADw4AABQOAQAhDgEAJQ4AACsOAAA0DgIAOA4AADsOAAA9DgEARA4AAEYOBABODgYAVw4JAGIOAABlDgEAaQ4EAHUODQCEDgIAiQ4KAJUOAQCYDgMAnQ4DAKIOCQCtDgcAtg4BALkOGADTDigA/Q4GAAgPAQALDwEAEA8EABcPAAAbDwcAKw8NADoPAQBBDwMARg8BAEoPAgBPDwAAUQ8fAHQPDACDDwUAig8HAJMPIwC5DwsAxg8OANYPAQDaDwMA4Q8GAOsPDgD8DwUABBAAAAcQCAAREAEAFRAEABsQBQAiEAAAJxAJADIQAQA2EAQAPBABAD8QCgBLEAAAThAAAFAQCQBbEAAAXRAJAGgQBABxEAAAdBAAAHwQAgCDEAAAhhABAIwQCgCYEBEArRAHALYQAQC5EAQAwhAEAMoQBADUEAMA2RAAANsQCwDpEAoA9hABAPoQAAD9EAAA/xAFAAYRAwALEQQAEREDABgRAgAeEQAAIBEBACQRAAAmEQQALREPAD4RAABBEQEARBEDAEoRAgBQERUAZxEJAHMRAAB1EQEAeREAAHsRAQB/EQAAgREBAIURAACHEQQAjhECAJIRAQCWEQAAmREAAJsRAwCgEQIApBEIAK8RBwC5EQAAvREBAMERAADDEQAAxREBAMgRAQDLEQEA0BEAANIRDQDjEQUA6hEHAPQRAgD4EQYAAxIBAAYSAAAIEgEACxIDABASAAASEgMAFxICABsSAAAdEgQAIxIAACUSBAArEgQAMRIBADQSAQA3EgEAOhIBAD0SAAA/EgAAQhIAAEUSAgBKEgMATxIHAFkSAgBgEgAAYhIFAGkSBABvEgAAchIAAHQSBAB6EgMAfxICAIMSAACFEg0AlBITAKkSEgC9EggAxxIEAM8SAQDTEgAA1RIFANwSBADiEgAA5BICAOkSAADrEgAA7xIBAPQSBwD9EgMABRMGAA0TCQAaEwEAHRMGACUTAgAqEwIAMRMFADgTEgBNEwAATxMBAFMTAABVEwEAWRMAAFsTAQBfEwAAYRMDAGcTAwBsEwIAcxMJAH4TAACBEwUAiRMCAI0TWwDqEwQA8xMAAPUTAAD4EwUAABQAAAcUAAALFAAADRQAABEUBQAbFAAAHxQAACYUAAAqFAAANhQCADoUBABAFAAAQhQBAEUUAQBLFAEAThQEAFQUAQBcFAoAaRT2AGEVAABjFQEAZhUAAGgVAgBuFQAAchUAAHYVAAB4FQAAehUAAIAVAACDFQAAhRUBAIgVAACSFUwA4BULAO0VWQBIFgEATBYBAFAWAABUFgIAWhYKAGgWBAByFgAAdBYAAH4WAQCCFgAAhBYAAIkWAACLFgEAkBYBAJ8WAAClFgAAqhYCALAWAACyFgUAuhYpAOgW/wDqFwAA7xcBAPIXAwD4FwAA+hcDAAIYCQANGGIAcRgMAIMYAQCIGAAAixgAAI8YAwCUGCsAwRgTANYYCwDlGKoAlBkAAJkZAACbGQQAoRkAAKUZAACrGQAArRkAALYZAAC5GQAAwRkAAMQZAgDLGQYA0xkBANYZAADYGQMA4BkAAOMZAQDoGWEASxoAAE4aAABaGgAAXBoAAH4aAACHGgAAkRoAAKoaBwCzGgQAuxoJAMoaAgDOGgAA1RoAANwaAADhGgAA9hoCAPoaBAABGwAABhsAAAkbBAAPGwAAFRsBABkbAgAfGwUAJhsCACobAQAuGwEAMRsAADMbAAA1GwAAOhsAAEMbAABGGwEASRsCAE4bAABQGwEAVRsBAFkbBABiGwEAZhsAAHEbAABzGz8AthsCAL0bAAC/GwAAwRsEAMgbAADKGwAAzRsAANQbAgDZG30AWRwAAF4cAgBiHAEA3xwAAOEcBgDrHAIA7xwFAPccAQD6HAIA/hwBAAEdAAADHQAABh0BABMdAAAVHQAAGB0BABsdAwAhHQIAMB0BADMdAQA8HQAAPh0BAEEdAABFHQIASx0BAE4dAABRHQAAVh0CAFsdAQBfHQIAYx0DAGkdDgB9HQAAgx0BAIodAACNHQUAlh0AAJ4dAgCqHQAAtB0AALsdAQC/HQAAwx0BAMYdAADJHQAAzh0AANAdAADSHQAA1x0AANsdAADdHQIA5B0GAPEdCAD/HQAAAR4AAAUeAAALHgAADR4EABYeAQAZHgEAHB4AAB8eCQArHgEALh4AADEeAQBBHgAARB4BAEceAQBRHgYAXR4CAGUeAQBsHgIAcB4AAHkeAAB7HgMAgB4FAIceAwCQHgMAlR4AAJkeAgCfHgAAoh4AAK4eAACxHgEAtB4BALceAwC9HgUAxB4EAM8eAADRHgAA1R4AANgeAADaHgEA3x4AAOMeAADlHgAA5x4BAAofAAAPHwAAGR8DAB4fBQAmHwAALx8AADMfAgA3HwMAPh8AAEAfAQBDHwEARh8BAEkfAABOHwMAVR8AAGAfAABiHwAAZB8AAGsfBAB0HwAAdh8AAHofAAB8HwEAgR8AAIMfAACJHwMAjh8HAJcfAACZHwAAnR8AAKMfAACmHwAArB8AALMfCgDAHwIAxR8CANAfAADfHwAA4R8AAOQfAgDoHwMA7h8BAPEfAAD0HwAA+B9bAFYgCwBjIAAAaSAKAHUgAAB3IAEAeiCIAAUhAAAJIXkAhiEAAIghAwCTIQAAliEAAJoheAAUIgAAICIAACciBAAtIgEAMSIAADMiAAA1IgAAOSIAAD8iAABBIgAAQyJ5AMQiAwDNIgAA0CIBANUiAQDaIgAA3CIAAOQiAADtIgAA8yIAAP4iAAAEIwAAESMBACIjAAAkIwAAJyMAACojAAAtIwAAMyMBADYjBQBAIwAATSMAAFMjAABVIwAAWSMAAGEjAABmIwAAdSMAAHcjAQB+IwAAgCMAAIQjFACdIwEAoCNIAOsjAADtIwAA7yMBAPIjAQD1IwYA/SM3ADckBQA+JAkASSQCAE8kAABRJAMAViQBAFkkBQBjJBIAdyQBAHokAgB/JAAAgiQDAIckBgCeJAAArCQCAMIkAADKJAgA1yQAANkkCwDmJAIA6iQRAP0kAQAAJQ8AESUXACslAAAtJQIAMiUMAEAlBwBJJQQAUCUCAFQlBQBcJQAAXiUMAG8lAQBzJQEAeSUBAHwlAQB/JQMAhCUAAIYlAACJJQEAjSUAAI8lAQCSJQAAlCUCAJglDACmJQAAqCUBAKslAACtJQEAsCUAALIlAQC1JQAAtyUBALolAQC/JQAAwyUBAMclAADKJQAAzCUAAM4lAwDTJQAA1iUIAOAlAQDjJQUA6yUBAO8lAADxJQIA9iUAAPslAwAAJgEAAyYAAAUmAQAIJgAACiYBAA0mAAAPJgEAEiYAABQmAQAXJgAAGSYAABwmEgAwJgYAOSYAADwmEQBPJggAWSYBAFwmCABmJgAAaCYBAG4mAABwJgQAeSYBAIImAgCIJgAAiiYAAJQmAACjJgMAqyYKALcmAAC5JggAxCbkAKonAQCtJxgAxycBAMonDgDbJxEA7icAAPAnFQAHKAEACigAAAwoCwAZKAIAICgAADMoAwA6KAYATigFAFYoAABfKAAAYSgBAGgoBgBwKAAAdigKAIooBACQKAAAkigCAJYoBACdKAQAoygBAKcoAACtKAQAtigCALooBwDFKAIAySgAAM0oAgDRKAEA1ygOAOkoAQDtKAEA8SgBAPUoAgABKQMABykCAAspAQAPKQEAEikuAEQpAABGKQAATCkBAE8pAABRKQAAUykAAFkpAQBcKQIAYikDAG0pAgBxKQAAcykAAHYpAAB4KQEAfSkBAIIpAACHKQMAjCkAAI8pBwCYKSkAxCkBAMgpAQDLKQEA0CkBANUpAgDaKQEA3SkAAOApAgDmKQEA6SkAAOspAADtKQAA8SkAAPQpAwD9KQAABSoAAAcqAQAKKgwAGCoDACIqAAAlKgIAKSoAACwqCgA4KgAAOioAADwqBABCKhYAWyoBAF8qDgBvKgEAcioEAA=="}],\
["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNCCNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTPTTFKFFGFKPTTTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNMNNNNNNNNNNNNNNNNNNNCNNNNNNNMNNNNNNNNNMMNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMNMCNNNMMNNNNNNMMNMCMMCNNCMMCMMMMNNNNNMMNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHKFFNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGFJJGPPPFPFPPPPIFPPPFPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIKKKKRGFPIKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHQQQQHHNNNNNNNNNOOOOJJJEEEEEEEEGPPNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNONNONNNNOOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFFEEPFFFKGKFEEEEPPPEPIPPPKKKPFPPIIGKEEPIIIPPEPEEEKEEPPEPKKPEPGPPPIFEKPPPKGEEIEKGPPGFFFPPPPEEPKPFPEPEKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNMNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOOONNONMMNNNNNNNNNNNNCNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNOONNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHKFINNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPEPPKGGPPFFIKNNNNNNNNCNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNMNNNNNNNMMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNKKKKKKFFFNHHHHHHHNHHEHNNNNNNMNNHHNNHHNNNNNNNNNNNNNHHNNNNCNNNNNNNMNNNNNHHHNNNNNNNNNMNNMMHMNNNNENMHHHMHNNNNNHNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_data_type_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","add","add","add","add","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_generic","apply_in_place","apply_kernel","apply_kernel_cast","apply_mut","apply_mut","apply_mut","apply_nonnull_values_generic","apply_to_buffer","apply_to_inner","apply_to_slice","apply_values","apply_values_generic","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","borrow","borrow_mut","borrow_mut","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","clear","clone","clone_into","collect","collect_cheap_metadata","comparison","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","deref","deref_mut","deref_mut","div","div","div","div","divide","drop","drop","drop","drop_nulls","dtype","effective_metadata","equal","equal","equal_missing","equal_missing","extend","fill_null_with_values","filter","first_non_null","float","fmt","fmt","for_each","for_each_amortized","from","from","from","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_fallible_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","gt","gt_eq","gt_eq","has_validity","head","init","init","init_rand","inner_dtype","into","into","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","last","last_non_null","layout","legacy_div","legacy_div","legacy_div_scalar","legacy_div_scalar","legacy_div_scalar_lhs","legacy_div_scalar_lhs","len","len","lhs_div","lhs_rem","lhs_sub","limit","lt","lt","lt_eq","lt_eq","max","max","max_reduce","mean","mean","median","median_reduce","merge_metadata","metadata","metadata","metadata_arc","metadata_mut","metadata_owned_arc","min","min","min_max","min_reduce","mmap_slice","mmap_slice","mul","mul","mul","mul","multiply","n_chunks","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_compute_len","new_with_dims","none_to_nan","not_equal","not_equal","not_equal_missing","not_equal_missing","null_count","object","ops","par_iter","par_iter","par_iter_indexed","par_iter_indexed","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","rem","rem","rem","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","slice","sort","sort_with","split_at","split_at","std","std_reduce","sub","sub","sub","sub","subtract","sum","sum","sum_reduce","tail","take","take","take_unchecked","take_unchecked","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","to_ndarray","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","true_div","true_div_scalar","true_div_scalar","true_div_scalar_lhs","true_div_scalar_lhs","try_apply_amortized","try_apply_amortized_generic","try_apply_generic","try_apply_nonnull_values_generic","try_from","try_from","try_from_chunk_iter","try_into","try_into","try_zip_and_apply_amortized","type_id","type_id","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","vzip","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","wrapping_abs","wrapping_add","wrapping_add","wrapping_add_scalar","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul","wrapping_mul_scalar","wrapping_mul_scalar","wrapping_neg","wrapping_neg","wrapping_sub","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","wrapping_trunc_div_scalar_lhs","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","__clone_box","__clone_box","__clone_box","append_null","append_null","append_null","append_null","append_null","append_option","append_option","append_value","append_value","append_value","append_value","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","finish","finish","finish","finish","finish","finish","finish","finish","from","from","from","from","from_iter_options","from_iter_values","from_slice","from_slice_options","init","init","init","init","into","into","into","into","list","new","new","new","new","shrink_to_fit","shrink_to_fit","shrink_to_fit","shrink_to_fit","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","append_empty","append_iter","append_iter","append_iter_values","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_null","append_opt_array","append_opt_series","append_opt_series","append_opt_slice","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_series","append_slice","append_trusted_len_iter","append_trusted_len_iter","append_values_iter","append_values_iter","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","builder","default","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","fast_explode","fast_explode","fast_explode","fast_explode","fast_explode","field","field","field","field","field","finish","finish","finish","finish","from","from","from","from","from","from","from","get_list_builder","init","init","init","init","init","init","init","inner_array","inner_array","inner_array","inner_array","inner_array","into","into","into","into","into","into","into","new","new","new","new","new","new","new","new_with_values_type","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","from","from","init","init","into","into","into_iter","into_iter","new","next","next","next_back","next_back","par","size_hint","size_hint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","FAST_EXPLODE_LIST","Keep","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","__clone_box","__clone_box","__clone_box","__clone_box","all","all","bitand","bitand","bitand_assign","bitand_assign","bitor","bitor","bitor_assign","bitor_assign","bits","bits","bits","bits","bitxor","bitxor","bitxor_assign","bitxor_assign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","collect_cheap_metadata","complement","complement","contains","contains","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","difference","difference","disabled","distinct_count","distinct_count","distinct_count","distinct_count_opt","drop","drop","drop","drop","drop","empty","empty","enabled","eq","eq","experimental_enabled","extend","extend","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_bits","from_bits","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_retain","from_bits_truncate","from_bits_truncate","from_fallible_iter","from_fallible_iter","from_iter","from_iter","from_name","from_name","get_distinct_count","get_fast_explode_list","get_fast_explode_list","get_flags","get_flags","get_flags","get_max_value","get_min_value","get_sorted_flag","init","init","init","init","init","insert","insert","intersection","intersection","intersects","intersects","into","into","into","into","into","into_iter","into_iter","is_all","is_all","is_empty","is_empty","is_empty","is_sorted","is_sorted_ascending","is_sorted_descending","iter","iter","iter_names","iter_names","log","logfile","max_value","max_value","max_value","max_value_opt","merge","min_value","min_value","min_value","min_value_opt","not","not","remove","remove","set","set","set_distinct_count","set_fast_explode_list","set_fast_explode_list","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","set_sorted_flag","sorted","sorted_opt","sub","sub","sub_assign","sub_assign","symmetric_difference","symmetric_difference","to_owned","to_owned","to_owned","to_owned","toggle","toggle","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","union","union","vzip","vzip","vzip","vzip","vzip","with_cheap_metadata","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","arr_from_iter","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","as_any","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","data_type","deref","deref_mut","drop","eq","equal","fmt","from","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","is_valid_unchecked","iter","iter","len","null_count","registry","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","to_boxed","to_owned","try_arr_from_iter","try_arr_from_iter","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","type_name","validity","value","value_unchecked","value_unchecked","values","values_iter","values_iter","vzip","with_validity","with_validity","with_validity_typed","ObjectChunkedBuilder","append_null","append_null","append_option","append_value","append_value","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","full","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","sort","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","Ret","Ret","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","descending","descending","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","from","from","from","from","hash","hash","init","init","into","into","maintain_order","maintain_order","multithreaded","multithreaded","new","new","nulls_last","nulls_last","slice_typed","slice_typed_unchecked","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","with_maintain_order","with_maintain_order","with_multithreaded","with_multithreaded","with_nulls_last","with_nulls_last","with_nulls_last_multi","with_order_descending","with_order_descending","with_order_descending_multi","with_order_reversed","with_order_reversed","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","Binary","Binary","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","Boolean","Boolean","BooleanChunked","BooleanType","CatIter","Categorical","Categorical","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalType","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","Decimal","Decimal","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","Duration","DurationType","Enum","Enum","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","Float32","Float32","Float32Chunked","Float32Type","Float64","Float64","Float64","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","HashMap","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","Int16","Int16","Int16Chunked","Int16Type","Int32","Int32","Int32","Int32Chunked","Int32Type","Int64","Int64","Int64","Int64Chunked","Int64Type","Int8","Int8","Int8","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","LargeBinary","LargeList","LargeUtf8","Lexical","List","List","List","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","Null","Null","NumericNative","Object","Object","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","Physical","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Scalar","Second","SmartString","StaticArray","Str","String","String","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","UInt16","UInt16","UInt16Chunked","UInt16Type","UInt32","UInt32","UInt32","UInt32Chunked","UInt32Type","UInt64","UInt64","UInt64","UInt64Chunked","UInt64Type","UInt8","UInt8","UInt8","UInt8Chunked","UInt8Type","Union","Unknown","Unknown","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_can_fast_explode","add","add","add","add","add","add","add","add","add","add","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","add_to","agg_list","agg_list","agg_list","agg_list","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","apply","apply","apply","apply","apply_amortized","apply_amortized_generic","apply_as_ints","apply_as_ints","apply_kernel","apply_kernel","apply_kernel","apply_kernel_cast","apply_kernel_cast","apply_kernel_cast","apply_mut","apply_mut","apply_to_buffer","apply_to_inner","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_to_slice","apply_values","apply_values","apply_values","apply_values","apply_values","arg_sort","arg_sort","arg_sort","arg_sort","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_sort_multiple","arg_unique","arg_unique","arg_unique","arg_unique","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any_value","as_binary","as_borrowed","as_ref","as_ref","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","bitand","bitor","bitor","bitxor","bitxor","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","boxed","call_categorical_merge_operation","cast","cast","cast","cast_leaf","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_unchecked","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","checked_div","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_data_type","data_type","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","divide","divide","divide","divide","divide","divide","divide","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dtype","dtype","dtype","dtype","dtype","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equal","equal","equal","equal","equal","equal","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equal_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","explode_and_offsets","field","fill_null_with_values","fill_null_with_values","filter","filter","filter","filter","filter","filter","finish","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","for_each_amortized","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_arrow","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter_options","from_iter_options","from_iter_options","from_iter_options","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_iter_values","from_iter_values","from_iter_values","from_iter_values","from_owned","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter","from_par_iter_with_dtype","from_slice","from_slice","from_slice","from_slice","from_slice_options","from_slice_options","from_slice_options","from_slice_options","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","full","full","full","full","full","full","full_null","full_null","full_null","full_null","full_null","full_null","full_null","full_null_with_dtype","get","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_any_value_unchecked","get_as_series","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_dtype","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","get_unchecked","get_values_size","get_values_size","get_values_size","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","group_tuples","gt","gt","gt","gt","gt","gt","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","gt_eq","hash","hash","hash","hash","hash","hash","hash","hash_impl","implode","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","inner_dtype","inner_dtype","inner_dtype","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_decimal","into_decimal_unchecked","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","into_scalar","into_series","into_series","into_series","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_decimal","is_enum","is_float","is_float","is_integer","is_integer","is_known","is_list","is_logical","is_nested","is_nested_null","is_nested_null","is_null","is_null","is_numeric","is_numeric","is_object","is_ord","is_primitive","is_signed_integer","is_signed_integer","is_string","is_struct","is_temporal","is_unsigned_integer","is_unsigned_integer","is_view","iter","iter_offsets","last","leaf_dtype","lt","lt","lt","lt","lt","lt","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max","max_reduce","max_reduce","max_reduce","mean","median","median","median_reduce","median_reduce","merge_dtypes","min","min_reduce","min_reduce","min_reduce","mmap_slice","mul","multiply","multiply","multiply","multiply","multiply","multiply","multiply","n_unique","n_unique","name","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_index","new_from_vec","new_from_vec_and_validity","new_logical","not","not","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","not_equal_missing","offsets","par_iter","par_iter","par_iter_indexed","par_iter_indexed","partial_cmp","partial_cmp","precision","precision","quantile","quantile","quantile_reduce","quantile_reduce","rand_bernoulli","remainder","remainder","remainder","remainder","remainder","remainder","remainder","reverse","reverse","reverse","reverse","reverse","reverse","revmap","scale","scale","scatter_single","scatter_single","scatter_single","scatter_with","scatter_with","scatter_with","set","set","set","set_fast_explode","set_inner_dtype","set_name","shift","shift","shift","shift","shift","shift","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","shift_and_fill","sort","sort","sort","sort","sort_with","sort_with","sort_with","sort_with","std_reduce","std_reduce","strict_cast","string_cache","sub","subtract","subtract","subtract","subtract","subtract","subtract","subtract","sum","sum_reduce","sum_reduce","take_unchecked","take_unchecked","take_unchecked","take_unchecked","to_arrow","to_arrow","to_arrow","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_strict_cast","try_to_arrow","try_zip_and_apply_amortized","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","underlying_physical_type","unique","unique","unique","unique","update","value","value","value_unchecked","value_within_range","values_iter","var_reduce","var_reduce","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vec_hash_combine","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_capacity","with_capacity","with_capacity","with_nullable_idx","with_validity_typed","zero","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","append","append_null","append_value","arg_sort","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cast_with_options","clone","clone_into","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drain_iter_and_finish","drop","drop","drop","drop","dtype","equal","equal","equal","equal_missing","equal_missing","equal_missing","finish","finish","finish","from","from","from","from","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","gt","gt","gt_eq","gt_eq","gt_eq","init","init","init","init","into","into","into","into","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","lt","lt","lt_eq","lt_eq","lt_eq","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","new","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","unique","uses_lexical_ordering","value_counts","vzip","vzip","vzip","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","__clone_box","borrow","borrow","borrow_mut","borrow_mut","build_local","clone","clone","clone_into","clone_into","default","default","deref","deref","deref_mut","deref_mut","drop","drop","eq","find","fmt","fmt","from","from","get","get_categories","get_optional","init","init","into","into","is_global","is_local","len","same_src","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","drop","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","borrow","borrow_mut","borrow_mut","constants","deref","deref","deref","deref_mut","deref_mut","drop","drop","feature_gated","fmt","fmt","fmt","from","from","from","get_warning_function","init","init","into","into","map_err","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","error","error","msg","msg","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","ahash","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","__clone_box","__clone_box","_add_columns","_apply_columns","_apply_columns_par","_filter_seq","_select_impl","_select_impl_unchecked","_slice_and_realloc","add","add","add","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clear","clone","clone","clone","clone_into","clone_into","clone_into","column","columns","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","div","div","div","drop","drop","drop","drop","drop","drop","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","eq","eq","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","explode","explode_impl","extend","fields","fill_null","filter","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","group_by","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","index","index","index","index","index","index","index","init","init","init","init","init","insert_column","into","into","into","into","into","into_iter","into_iter","is_duplicated","is_empty","is_unique","iter","iter_chunks","iter_chunks","iter_chunks_physical","len","max_horizontal","mean_horizontal","melt","melt2","min_horizontal","mul","mul","mul","n_chunks","n_chunks","new","new_no_checks","new_no_length_checks","next","next","null_count","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","rem","rem","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_physical","select_series","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size_hint","size_hint","slice","slice","slice_par","sort","sort_in_place","split_at","split_at","split_chunks","split_chunks_by_n","sub","sub","sub","sum_horizontal","tail","take","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","to_owned","to_owned","to_string","top_k","transpose","try_apply","try_apply_at_idx","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_rows_iter_and_schema","try_get_column_index","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","unique","unique_impl","unique_stable","vstack","vstack_mut","vzip","vzip","vzip","vzip","vzip","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","MeltArgs","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","id_vars","init","into","streamable","to_owned","try_from","try_into","type_id","value_name","value_vars","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","Idx","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","Slice","SlicedGroups","Std","Sum","Var","__clone_box","__clone_box","__clone_box","__clone_box","agg_list","aggregations","all","apply","as_list_chunked","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","count","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","df","drive_unindexed","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","expr","first","first","first","first_mut","fmt","fmt","fmt","fmt","fmt","fmt_group_by_column","from","from","from","from","from","from","from","from","from","from","from","from","from_fallible_iter","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","group_tuples","groups","idx_mut","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_idx","into_iter","into_iter","into_iter","into_par_iter","into_par_iter","into_par_iter","is_empty","is_empty","is_sorted_flag","iter","iter","keys","keys_sliced","last","len","len","max","mean","median","min","n_unique","new","new","next","nth","par_apply","par_iter","par_iter","quantile","select","slice","sort","sort","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unroll","unwrap_idx","unwrap_slice","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","All","AnyValueBuffer","AnyValueBufferTrusted","Boolean","Boolean","Float32","Float32","Float64","Float64","Int32","Int32","Int64","Int64","Null","Null","Row","String","String","UInt32","UInt32","UInt64","UInt64","__clone_box","__clone_box","__clone_box","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coerce_data_type","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","infer_schema","init","init","init","into","into","into","into_series","into_series","new","new","new","reset","reset","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","drop","drop","finish","fmt","from","from","hash","hash","idx","init","init","into","into","populate_multiple_key_hashmap","try_from","try_from","try_into","try_into","type_id","type_id","vec_hash","vec_hash","vec_hash_combine","vec_hash_combine","vzip","vzip","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","DynArgs","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","MeltArgs","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","None","Null","Null","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PolarsArray","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","QuantileAggSeries","QuantileInterpolOptions","Raise","Raise","RevMapping","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","Some","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","VarAggSeries","VecHash","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","allocator","as_fd","as_ptr","as_raw_fd","as_ref","assume_init","assume_init","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","context","context_trace","convert_inner_type","data_type","data_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","default","default","default","default","default","default","default","default","default_arrays","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","description","df","downcast","downcast_unchecked","downgrade","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extract","fields","filter","finish","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fn_params","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_data_default","from_data_unchecked_default","from_data_unchecked_default","from_fallible_iter","from_iter","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_str","from_vec","ge","get_mut","get_mut_unchecked","get_names","get_unchecked","gt","has_validity","hash","hash","hash","hash","hash","idx","increment_strong_count","increment_strong_count_in","index_of","indexes_to_usizes","init","init","init","init","init","init","init","init","init","init","init","init","init","inner","inner_mut","interpol","into","into","into","into","into","into","into","into","into","into","into","into","into","into_inner","into_raw","into_raw_with_allocator","into_series","is_empty","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","le","len","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","max_reduce","median_reduce","metadata","metadata","min_periods","min_reduce","min_reduce","name","ne","negative_to_usize","new","new","new","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","null","null","partial_cmp","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","prod_reduce","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","sum_reduce","to_opt","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_unwrap","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unwrap_or_clone","utf8","var_reduce","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weak_count","weights","window_size","with_metadata","with_metadata","write","write_vectored","error","error","msg","msg","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","from_data_unchecked_default","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","data_type","default","deref","deref_mut","drop","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","from_values_iter","set_global_random_seed","IndexOfSchema","Schema","SchemaRef","__clone_box","borrow","borrow_mut","clone","clone_into","contains","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","from","from","from","from","from_fallible_iter","from_iter","get","get_at_index","get_at_index_mut","get_field","get_full","get_names","get_names","hash","index_of","index_of","init","insert_at_index","into","into_iter","is_empty","iter","iter_dtypes","iter_dtypes_mut","iter_fields","iter_names","len","merge","merge_from_ref","new","new_inserting_at_index","remove","rename","reserve","set_dtype","set_dtype_at_index","shift_remove","shift_remove_index","to_arrow","to_owned","to_supertype","try_from","try_get","try_get_at_index","try_get_field","try_get_full","try_get_mut","try_index_of","try_into","type_id","vzip","with_capacity","with_column","Ascending","Ascending","ChunkCompare","Descending","Descending","IntoSeries","IsSorted","IsSorted","Not","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","__clone_box","__clone_box","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","add","add","add","amortized_iter","append","arg_sort","arg_sort","arg_unique","arg_unique","arithmetic","array_ref","as_any","as_any_mut","as_any_mut","as_list","as_mut","as_ref","as_ref","as_single_ptr","as_single_ptr","as_single_ptr","binary","binary_offset","bitand","bitand","bitor","bitor","bitxor","bitxor","bool","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast_unchecked","cast_with_options","categorical","checked_div","checked_div","checked_div","checked_div_num","chunk_lengths","chunk_lengths","chunks","chunks_mut","chunks_mut","clear","clone","clone","clone_inner","clone_into","clone_into","compute_len","decimal","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","div","div","div","div","dot","drop","drop","drop","drop_nulls","drop_nulls","dtype","dtype","eq","eq","equal","equal","equal","equal_missing","equal_missing","equal_missing","equals","equals_missing","equivalent","equivalent","equivalent","estimated_size","explode","extend","extend_constant","f32","f64","field","field","fill_null","filter","fmt","fmt","fmt","fmt_list","from","from","from","from","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_fallible_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_iter","from_vec","from_vec","from_vec","from_vec","from_vec","from_vec","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_metadata","get_object","get_object","get_object_chunked_unchecked","get_object_chunked_unchecked","get_unchecked","get_unchecked","gt","gt","gt","gt_eq","gt_eq","gt_eq","has_validity","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","init","init","into","into","into","into_frame","into_iter","into_series","into_series","is_empty","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","is_series","is_series","is_sorted_flag","iter","iter_chunks","len","len","limit","limit","list","lt","lt","lt","lt_eq","lt_eq","lt_eq","max","max_reduce","max_reduce","mean","mean","mean_reduce","median","median","median_reduce","median_reduce","min","min_reduce","min_reduce","mul","mul","mul","mul","n_chunks","n_chunks","n_chunks","n_unique","n_unique","name","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new","new_empty","new_from_index","new_null","next","not_equal","not_equal","not_equal","not_equal_missing","not_equal_missing","not_equal_missing","null","null_count","ops","phys_iter","product","quantile_reduce","quantile_reduce","rechunk","rem","rem","rem","rename","rename","reshape_list","reverse","reverse","rolling_map","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","shrink_to_fit","shrink_to_fit","shuffle","size_hint","slice","slice","sort","sort_with","sort_with","split_at","split_at","std","std","std_reduce","std_reduce","str","str_value","strict_cast","sub","sub","sub","sub","sum","sum_reduce","sum_reduce","sum_reduce","tail","take","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","to_arrow","to_float","to_owned","to_owned","to_physical_repr","to_string","try_add_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_mul_owned","try_set_metadata","try_sub_owned","type_id","type_id","type_id","u16","u32","u64","u8","unique","unique","unique_stable","unpack","var","var","var_reduce","var_reduce","vzip","vzip","vzip","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","add_to","add_to","checked","div","divide","divide","divide","mul","multiply","multiply","multiply","rem","remainder","remainder","remainder","sub","subtract","subtract","subtract","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","checked_div","checked_div","checked_div_num","checked_div_num","checked_div_num","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","Arg","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","TrustMyLength","Wrap","__clone_box","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all_equal","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","chunk_lengths","clone","clone_into","coalesce_nulls","coalesce_nulls_series","collect_reversed","collect_trusted","concat_df","concat_df_unchecked","contains","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","dtypes_to_schema","dtypes_to_supertype","eq","equivalent","equivalent","equivalent","flatten","fold_options","from","from","from","from_fallible_iter","from_iter","from_iter","from_iter_trusted_length","from_iter_trusted_length","from_iter_trusted_length","from_par_iter","from_trusted_len_iter_rev","from_trusted_len_iter_rev","get_supertype","get_time_units","handle_casting_failures","hash","init","init","init","into","into","into","into_inner","into_iter","into_vec","into_vec","into_vec","iter_chunks","len","materialize_dyn_int","n_chunks","new","new","next","next_back","rayon","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","to_owned","trust_my_length","try_from","try_from","try_from","try_get_supertype","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[39,"polars_core::chunked_array"],[437,"polars_core::chunked_array::arithmetic"],[465,"polars_core::chunked_array::builder"],[569,"polars_core::chunked_array::builder::list"],[723,"polars_core::chunked_array::cast"],[751,"polars_core::chunked_array::collect"],[765,"polars_core::chunked_array::float"],[767,"polars_core::chunked_array::from_iterator_par"],[771,"polars_core::chunked_array::iterator"],[808,"polars_core::chunked_array::iterator::par"],[810,"polars_core::chunked_array::metadata"],[1047,"polars_core::chunked_array::object"],[1122,"polars_core::chunked_array::object::builder"],[1145,"polars_core::chunked_array::object::registry"],[1173,"polars_core::chunked_array::ops"],[1297,"polars_core::chunked_array::ops::arity"],[1332,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1334,"polars_core::chunked_array::ops::gather"],[1337,"polars_core::chunked_array::ops::search_sorted"],[1366,"polars_core::chunked_array::ops::sort"],[1373,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1374,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1381,"polars_core::chunked_array::ops::sort::options"],[1456,"polars_core::chunked_array::temporal"],[1457,"polars_core::chunked_array::temporal::conversion"],[1460,"polars_core::config"],[1464,"polars_core::datatypes"],[2875,"polars_core::datatypes::categorical"],[3015,"polars_core::datatypes::categorical::revmap"],[3067,"polars_core::datatypes::categorical::string_cache"],[3086,"polars_core::datatypes::revmap"],[3092,"polars_core::datatypes::string_cache"],[3096,"polars_core::error"],[3161,"polars_core::error::PolarsError"],[3165,"polars_core::error::constants"],[3168,"polars_core::export"],[3176,"polars_core::fmt"],[3206,"polars_core::frame"],[3475,"polars_core::frame::explode"],[3504,"polars_core::frame::group_by"],[3739,"polars_core::frame::group_by::GroupByMethod"],[3740,"polars_core::frame::group_by::GroupsProxy"],[3742,"polars_core::frame::group_by::aggregations"],[3755,"polars_core::frame::group_by::expr"],[3758,"polars_core::frame::row"],[3852,"polars_core::functions"],[3854,"polars_core::hashing"],[3902,"polars_core::prelude"],[4466,"polars_core::prelude::PolarsError"],[4470,"polars_core::prelude::default_arrays"],[4476,"polars_core::prelude::list"],[4499,"polars_core::prelude::null"],[4529,"polars_core::prelude::revmap"],[4535,"polars_core::prelude::slice"],[4538,"polars_core::prelude::string_cache"],[4542,"polars_core::prelude::utf8"],[4546,"polars_core::random"],[4547,"polars_core::schema"],[4621,"polars_core::series"],[5014,"polars_core::series::amortized_iter"],[5037,"polars_core::series::arithmetic"],[5062,"polars_core::series::arithmetic::checked"],[5070,"polars_core::series::ops"],[5096,"polars_core::utils"],[5213,"polars_core::utils::flatten"],[5218,"dyn_clone::sealed"],[5219,"num_traits"],[5220,"num_traits::cast"],[5221,"polars_error"],[5222,"polars_core::series::arithmetic::borrowed"],[5223,"polars_core::frame::group_by::proxy"],[5224,"core::option"],[5225,"core::iter::traits::iterator"],[5226,"core::ops::function"],[5227,"core::marker"],[5228,"polars_core::datatypes::dtype"],[5229,"alloc::string"],[5230,"polars_core::datatypes::aliases"],[5231,"polars_core::series::arithmetic::borrowed::checked"],[5232,"polars_arrow::array"],[5233,"alloc::vec"],[5234,"core::iter::traits::double_ended"],[5235,"core::fmt"],[5236,"core::iter::traits::collect"],[5237,"core::result"],[5238,"polars_utils::iter::fallible"],[5239,"polars_arrow::bitmap::immutable"],[5240,"rayon::iter"],[5241,"polars_arrow::trusted_len"],[5242,"polars_core::datatypes::any_value"],[5243,"polars_utils::index"],[5244,"polars_core::chunked_array::logical::decimal"],[5245,"core::iter::traits::exact_size"],[5246,"polars_core::series::series_trait"],[5247,"core::slice::iter"],[5248,"core::iter::adapters::map"],[5249,"alloc::sync"],[5250,"core::convert"],[5251,"core::ops::range"],[5252,"polars_core::datatypes::field"],[5253,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5254,"polars_core::chunked_array::ops::rolling_window"],[5255,"ahash::random_state"],[5256,"polars_utils::hashing"],[5257,"ndarray::aliases"],[5258,"either"],[5259,"core::any"],[5260,"polars_core::chunked_array::arithmetic::numeric"],[5261,"polars_core::chunked_array::builder::string"],[5262,"polars_arrow::array::binview"],[5263,"polars_core::chunked_array::builder::boolean"],[5264,"polars_core::chunked_array::builder::null"],[5265,"polars_core::chunked_array::builder::primitive"],[5266,"core::clone"],[5267,"polars_core::chunked_array::builder::list::anonymous"],[5268,"polars_core::chunked_array::builder::list::boolean"],[5269,"polars_core::chunked_array::builder::list::primitive"],[5270,"polars_core::chunked_array::builder::list::binary"],[5271,"polars_core::chunked_array::builder::list::null"],[5272,"alloc::boxed"],[5273,"core::hash"],[5274,"polars_arrow::array::boolean"],[5275,"polars_core::chunked_array::metadata::env"],[5276,"bitflags::iter"],[5277,"std::fs"],[5278,"std::sync::mutex"],[5279,"polars_arrow::datatypes"],[5280,"polars_arrow::bitmap::utils::iterator"],[5281,"polars_arrow::bitmap::utils::zip_validity"],[5282,"polars_arrow::offset"],[5283,"polars_arrow::array::static_array"],[5284,"core::error"],[5285,"polars_arrow::array::primitive"],[5286,"polars_arrow::legacy::array::slice"],[5287,"polars_row::row"],[5288,"chrono::naive::datetime"],[5289,"alloc::borrow"],[5290,"polars_arrow::array::static_array_collect"],[5291,"bytemuck::zeroable"],[5292,"polars_core::chunked_array::logical::categorical"],[5293,"polars_core::chunked_array::logical::categorical::merge"],[5294,"polars_core::chunked_array::logical"],[5295,"polars_core::datatypes::time_unit"],[5296,"polars_arrow::datatypes::physical_type"],[5297,"polars_arrow::types"],[5298,"core::borrow"],[5299,"polars_arrow::pushable"],[5300,"polars_core::datatypes::into_scalar"],[5301,"core::cmp"],[5302,"polars_core::chunked_array::logical::categorical::builder"],[5303,"polars_core::chunked_array::logical::categorical::revmap"],[5304,"polars_core::chunked_array::logical::categorical::string_cache"],[5305,"polars_error::warning"],[5306,"polars_core::series::from"],[5307,"polars_utils::aliases"],[5308,"polars_arrow::datatypes::schema"],[5309,"polars_core::chunked_array::ndarray"],[5310,"polars_arrow::array::struct_"],[5311,"polars_arrow::record_batch"],[5312,"polars_utils::idx_vec"],[5313,"rayon::iter::plumbing"],[5314,"polars_core::frame::group_by::into_groups"],[5315,"core::iter::adapters::copied"],[5316,"core::iter::adapters::zip"],[5317,"polars_arrow::legacy::kernels::rolling"],[5318,"polars_utils::float"],[5319,"polars_arrow::types::native"],[5320,"polars_core::frame::group_by::aggregations::agg_list"],[5321,"polars_core::frame::row::av_buffer"],[5322,"polars_arrow::array::binary"],[5323,"polars_core::hashing::identity"],[5324,"hashbrown::map"],[5325,"polars_core::hashing::vector_hasher"],[5326,"core::alloc"],[5327,"std::os::fd::owned"],[5328,"std::os::fd::raw"],[5329,"core::mem::maybe_uninit"],[5330,"polars_arrow::legacy::kernels::time"],[5331,"core::ffi::c_str"],[5332,"core::default"],[5333,"polars_arrow::scalar"],[5334,"std::io::error"],[5335,"alloc::collections"],[5336,"simdutf8::basic"],[5337,"regex::error"],[5338,"std::path"],[5339,"std::ffi::os_str"],[5340,"alloc::ffi::c_str"],[5341,"polars_arrow::legacy::array::default_arrays"],[5342,"polars_arrow::buffer::immutable"],[5343,"polars_arrow::array::list"],[5344,"polars_core::named_from"],[5345,"polars_arrow::legacy::array"],[5346,"polars_core::chunked_array::ops::aggregate"],[5347,"polars_core::chunked_array::ops::aggregate::quantile"],[5348,"polars_arrow::legacy::index"],[5349,"core::pin"],[5350,"core::io::borrowed_buf"],[5351,"std::io"],[5352,"polars_core::chunked_array::ops::aggregate::var"],[5353,"alloc::collections::btree::map"],[5354,"polars_arrow::legacy::array::list"],[5355,"polars_arrow::legacy::array::null"],[5356,"polars_arrow::bitmap::mutable"],[5357,"polars_arrow::array::utf8"],[5358,"polars_core::series::iterator"],[5359,"alloc::rc"],[5360,"polars_arrow::legacy::utils"],[5361,"polars_arrow::legacy::trusted_len::rev"],[5362,"smartstring::config"],[5363,"smartstring"],[5364,"polars_error::constants"],[5365,"polars_arrow::legacy::prelude"],[5366,"polars_arrow::legacy::array::utf8"],[5367,"polars_core::utils::any_value"],[5368,"polars_core::utils::schema"],[5369,"polars_core::utils::supertype"],[5370,"polars_core::utils::series"]],"if":"`````````````{{}b}``0``````````````{{}d}``````````````{{{f{c}}h}b{}}{{{f{{l{j}}}}}d}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}{f{Aj}}}Adn}{{{f{{l{Al}}}}}d}{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{{l{j}}}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Bh{l{c}}}}{f{{l{c}}}}}b{{Bn{}{{Bj{Bl}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{An}{{C`{An}}}}Cd}}{{{f{{l{j}}}}c}{{l{j}}}{{Ch{Cf}{{C`{Ad}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{{l{Cj}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{Cl}}}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{An}{{C`{{An{e}}}}}}}Bn}{{{l{c}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}{f{Cb}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}}{{l{e}}}nBn}{{{f{{l{Cn}}}}c}{{l{Cn}}}{{Ch{{f{{Db{D`}}}}}{{C`{{f{{Db{D`}}}}}}}}}}{{{f{Bh{l{c}}}}e}bn{{Cb{}{{C`{}}}}Cd}}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{{l{c}}}}Dfg}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{{l{j}}}}{f{Cb}}}{{Af{Dj}}}}{{{f{{l{c}}}}g{f{Bh{Db{e}}}}}bn{}{{Cb{An{f{e}}}{{C`{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}n{{Cb{}{{C`{}}}}Cd}}{{{f{{l{c}}}}g}{{l{i}}}Bn{}{{Ch{}{{C`{e}}}}}Bn}{{{f{{l{c}}}}Dl}Dnn}{{{f{{l{c}}}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}n}{{{f{{l{c}}}}}{{Af{Dn}}}n}`{{{f{{l{Dd}}}}}Eb}{{{f{{l{c}}}}}{{f{{l{c}}}}}Bn}{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}BnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEd{}}00{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0``{{{f{{l{c}}}}e}{{l{g}}}n{{Cb{}{{C`{}}}}Cd}n}{{{f{{l{c}}}}{f{Df}}}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Df}}Ef}{{Af{Ad}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Eh}{{{f{{l{c}}}}e}{{Af{Ad}}}EhAb}{{{f{{l{c}}}}}EjBn}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{El}}}}}}}Bn}{{{f{{l{c}}}}}{{f{{F`{En}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{F`{En}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Bn}0{{{f{c}}{f{Bhe}}}b{}{}}`{{{f{Bh{l{c}}}}}b{Bnn}}`{{{f{{l{c}}}}}{{Af{{f{Db}}}}}n}{{{f{Bh{l{c}}}}{f{{l{c}}}}Fb}bBn}{{{f{Bh{l{c}}}}{f{{l{e}}}}Fb}bBnBn}{{{f{{l{c}}}}}{{`{{Fd{}{{B`{{f{Db}}}}}}}}}n}{{}{{l{c}}}Bn}{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}}bBn}{Elb}0{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Df}}}Bn}{{{f{{l{c}}}}}{{f{{Ff{c}}}}}Bn}{{{f{{l{c}}}}e}FhnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}10{{{f{Bh{l{c}}}}{f{{l{c}}}}}bn}{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Fh}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}}{{An{El}}}Bn}`{{{f{{l{Al}}}}{f{BhFj}}}Fl}{{{f{{l{c}}}}{f{BhFj}}}Fln}{{{f{{l{c}}}}e}bBn{{Ch{An}}}}{{{f{{l{j}}}}c}b{{Ch{{An{Cf}}}}}}{cc{}}{c{{l{e}}}Fn{{Bn{}{{G`{c}}}}}}1{{{f{Bf}}c}{{l{e}}}Gb{{Bn{}{{G`{}}}}Bn}}{{{f{{l{c}}}}e}{{l{c}}}{{Bn{}{{G`{}}}}Bn}Gb}{{{f{Bf}}{F`{En}}}{{l{c}}}Bn}{{{f{Bf}}{F`{En}}Df}{{l{c}}}Bn}{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{c{{l{Al}}}{{Gb{}{{B`{{An{d}}}}}}}}{c{{l{e}}}{{Gb{}{{B`{An}}}}}n}{c{{l{e}}}{{Gb{}{{B`{{Gj{F`{An{Gh}}}}}}}}}n}{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{An}}}}}n}23{{{f{Bf}}c}{{l{e}}}{{Bd{}{{B`{}}}}}n}`{c{{l{e}}}{{Gl{}{{B`{An}}}}}n}{{{f{Bf}}{f{Db}}}{{l{c}}}n}{{{f{Bf}}{f{{Db{An}}}}}{{l{c}}}n}{c{{l{e}}}{{Gn{}{{B`{An}}}}}n}{{{f{Bf}}F`}{{l{c}}}n}{{{f{Bf}}F`{An{Gh}}}{{l{c}}}n}{{{f{Bf}}El}{{l{c}}}n}0{{{f{{l{c}}}}El}{{l{c}}}Bn}{{{f{Bf}}El{f{Df}}}Dj}{{{f{{l{c}}}}El}AnBn}{{{f{{l{c}}}}El}{{Af{H`}}}n}{{{f{{l{c}}}}El}H`n}{{{f{{l{j}}}}El}{{An{Ad}}}}{{{f{{l{c}}}}}{{An{Hb}}}Bn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}HdBn}{{{f{{l{j}}}}}Ad}{{{f{{l{c}}}}}{{An{f}}}Bn}0{{{f{{l{{Hf{c}}}}}}El}{{An{{f{Hh}}}}}Hj}09{{{f{{l{c}}}}dd}{{Af{Aj}}}n}{{{f{{l{c}}}}EldEl}AjEd}{{{f{{l{c}}}}e}FhnAb}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}018{{{f{{l{c}}}}{An{El}}}{{l{c}}}Bn}{{}El}0{{ElHl{An{Hn}}}{{l{c}}}n}{{{f{{l{j}}}}}{{f{Df}}}}{ce{}{}}0{{{l{I`}}{An{El}}El}{{Af{Ib}}}}{{{l{I`}}{An{El}}El}Ib}{{{f{{l{c}}}}}en{}}{{{f{{l{c}}}}}{{`{IdIf{Ih{}{{B`{}}}}FdGn}}}n}{{{l{c}}}AdBn}{{{f{{l{c}}}}}dBn}{{{f{{l{c}}}}}FhIj}000{{{f{{l{c}}}}}FhBn}02{{{f{{l{c}}}}}IlBn}{{{f{{l{c}}}}}{{`{{In{}{{B`{An}}}}}}}Bn}{{{f{{l{c}}}}}{{`{{Bd{}{{B`{{l{c}}}}}}}}}Bn}{{{f{{l{j}}}}}{{`{{Bd{}{{B`{J`}}}}}}}}{{{f{{l{c}}}}}{{Jf{{Jb{En}}{Jd{{f{En}}}{{C`{{An{{f{Gh}}}}}}}}}}}Bn}`{{{f{{l{c}}}}}AnBn}{{{f{{l{c}}}}}{{An{El}}}Bn}{{{f{{l{c}}}}}{{Jh{c}}}Bn}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{l{e}}}g{}n{}}{{c{f{{l{e}}}}}g{}n{}}{{{f{{l{c}}}}}ElBn}0{{{f{{l{c}}}}e}{{l{c}}}n{A`Jj}}00{{{f{{l{c}}}}El}{{l{c}}}Bn}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}{{{f{{l{c}}}}e}FhnAb}10{{{f{{l{Al}}}}}{{An{d}}}}{{{f{{l{c}}}}}Ann}{{{f{{l{c}}}}}Jln}{{{f{{l{c}}}}}{{An{Jn}}}n}{{{f{{l{Al}}}}}{{An{Jn}}}}{{{f{{l{c}}}}}{{An{Jn}}}Ed}{{{f{{l{c}}}}}JlEd}{{{f{Bh{l{c}}}}{Ff{c}}}bBn}`{{{f{{l{c}}}}}{{An{{f{{Ff{c}}}}}}}Bn}{{{f{{l{c}}}}}{{An{{f{{K`{{Ff{c}}}}}}}}}Bn}{{{f{Bh{l{c}}}}}{{f{Bh{K`{{Ff{c}}}}}}}Bn}{{{f{{l{c}}}}}{{K`{{Ff{c}}}}}Bn}:;{{{f{{l{c}}}}}{{An{Gj}}}n}:{{{f{Bf}}{f{{Db{D`}}}}ElEl}{{l{Al}}}}{{{f{Bf}}{f{Db}}}{{l{c}}}n}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{c}}}}}ElBn}{{{f{{l{c}}}}}{{Af{El}}}n}{{{f{{l{c}}}}}{{f{Bf}}}Bn}{{{f{Bf}}c}{{l{Al}}}{{Kb{{Db{{An{d}}}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{Kb{{Db{Hl}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Kb{{Db{Jn}}}}}}{{{f{Bf}}c}{{l{Dd}}}{{Kb{{Db{Dh}}}}}}{{{f{Bf}}c}{{l{Kd}}}{{Kb{{Db{Hn}}}}}}{{{f{Bf}}c}{{l{Kf}}}{{Kb{{Db{{An{J`}}}}}}}}{{{f{Bf}}c}{{l{Kh}}}{{Kb{{Db{Kj}}}}}}{{{f{Bf}}c}{{l{Cj}}}{{Kb{{Db{{An{Jn}}}}}}}}{{{f{Bf}}{Kl{Kj}}}{{l{Kh}}}}{{{f{Bf}}{Kl{J`}}}{{l{Kf}}}}{{{f{Bf}}c}{{l{Kn}}}{{Kb{{Db{L`}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{Kb{{Db{{F`{D`}}}}}}}}{{{f{Bf}}c}{{l{Cn}}}{{Kb{{Db{{An{{F`{D`}}}}}}}}}}{{{f{Bf}}c}{{l{Kh}}}{{Kb{{Db{{An{Kj}}}}}}}}{{{f{Bf}}c}{{l{Dd}}}{{Kb{{Db{{An{Dh}}}}}}}}{{{f{Bf}}c}{{l{Cl}}}{{Kb{{Db{{An{Hl}}}}}}}}{{{f{Bf}}c}{{l{Kd}}}{{Kb{{Db{{An{Hn}}}}}}}}{{{f{Bf}}c}{{l{Kn}}}{{Kb{{Db{{An{L`}}}}}}}}{{{f{Bf}}{Kl{L`}}}{{l{Kn}}}}{{{f{Bf}}{Kl{Hn}}}{{l{Kd}}}}{{{f{Bf}}c}{{l{Kf}}}{{Kb{{Db{J`}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Kb{{Db{d}}}}}}{{{f{Bf}}}{{l{{Hf{c}}}}}Hj}{{{f{{l{c}}}}ElEl}{{l{c}}}n}{{{f{Bf}}{F`{c}}}{{l{{Hf{c}}}}}Hj}{{{f{Bf}}{F`{c}}Gh}{{l{{Hf{c}}}}}Hj}{{{f{Bf}}F`}{{l{c}}}n}{{{K`{Lb}}{F`{En}}}{{l{c}}}Bn}{{{K`{Lb}}{F`{En}}HbHb}{{l{c}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Ij}{{{f{{l{c}}}}{f{{l{c}}}}}Fhn}{{{f{{l{c}}}}e}FhnAb}01{{{f{{l{c}}}}}ElBn}``{{{f{{l{Dd}}}}}{{`{{Ld{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{Ld{}{{B`{{An{Ad}}}}}}}}}}{{{f{Bh{l{j}}}}}{{`{{Lf{}{{B`{{An{Ad}}}}}}}}}}{{{f{{l{Dd}}}}}{{`{{Lf{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{{l{c}}}}}Jln}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}JnLh}{{Af{{An{Jn}}}}}Ed}{{{f{{l{c}}}}JnLh}{{Af{Jl}}}Ed}{{{f{Bf}}ElJn}{{Af{{l{Al}}}}}}{{{f{Bf}}ElJnJn}{{Af{{l{c}}}}}n}{{{f{Bf}}El}{{l{c}}}n}{{{f{Bf}}ElJnJn}{{l{c}}}n}{{{f{{l{c}}}}}{{l{c}}}Bn}{{{f{{l{c}}}}}{{f{Lb}}}Bn}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{Bh{l{c}}}}{f{Bf}}}bBn}{{{f{{l{c}}}}}{{l{c}}}n}{{{f{{l{c}}}}{f{Cb}}Lj}{{Af{Ad}}}n}{{{f{{l{c}}}}Ele}{{Af{{l{c}}}}}Ij{{Ch{{f{Bh{l{c}}}}}{{C`{An}}}}}}{{{f{{l{c}}}}Jndd{An{Hn}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}Eldd{An{Hn}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}eAn}{{Af{{l{c}}}}}n{{Gb{}{{B`{Hb}}}}}}{{{f{{l{c}}}}eg}{{Af{{l{c}}}}}n{{Gb{}{{B`{Hb}}}}}{{Cb{An}{{C`{An}}}}}}{{{f{{l{c}}}}{f{Fh}}An}{{Af{{l{c}}}}}n}{{{f{Bh{l{j}}}}}b}{{{f{Bh{l{c}}}}d}bBn}{{{f{Bh{l{j}}}}Df}b}{{{f{Bh{l{c}}}}Hb}bBn}{{{f{Bh{l{c}}}}Il}bBn}{{{f{{l{c}}}}J`}{{l{c}}}n}{{{f{{l{c}}}}J`An}{{l{c}}}n}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}J`El}{{l{c}}}Bn}0{{{f{{l{c}}}}d}{{l{c}}}n}{{{f{{l{c}}}}Dl}{{l{c}}}n}{{{f{{l{c}}}}J`}{{Gj{{l{c}}{l{c}}}}}Bn}0{{{f{{l{c}}}}D`}{{An{Jn}}}n}{{{f{{l{c}}}}D`}JlEd}{{{f{{l{c}}}}e}gn{A`Ab}{}}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{A`Ab}{}}{{{f{{l{c}}}}{f{Ad}}}{{Af{Ad}}}Ah}{{{f{{l{Al}}}}}{{An{Hb}}}}{{{f{{l{c}}}}}Ann}{{{f{{l{c}}}}}Jln}{{{f{{l{c}}}}{An{El}}}{{l{c}}}Bn}{{{f{{l{c}}}}{f{e}}}{{Af{{l{c}}}}}Bn{{Kb{{Db{Hb}}}}Ll}}{{{f{{l{c}}}}{f{Dn}}}{{Af{{l{c}}}}}Bn}{{{f{{l{c}}}}{f{Dn}}}{{l{c}}}{{Bn{}{{Ln{Bl}}}}Bn}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Bn{}{{Ln{Bl}}}}Bn}{{Kb{{Db{Hb}}}}Ll}}`{{{f{{l{c}}}}dM`}{{F`{{F`{Mb}}}}}Bn}{{{f{{l{c}}}}}{{l{c}}}Ij}{{{f{{l{Dd}}}}El}{{Af{Ad}}}}{{{f{Bh{l{j}}}}Df}b}{{{f{{l{j}}}}}{{Af{Md}}}}{{{f{{l{c}}}}}{{Af{Mf}}}n}{{{f{c}}}e{}{}}{{{f{{l{Cn}}}}}Mh}{{{f{{l{c}}}}}{{F`{An}}}n}{{{f{{l{c}}}}}{{Mj{F`{F`{An}}}}}n}{{{l{c}}{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}{{{f{{l{j}}}}c}{{Af{{l{j}}}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{{l{j}}}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gd{{An{e}}g}}}}}}Cd}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gd{eg}}}}}}}Bn}{c{{Gd{e}}}{}{}}0{{{f{Bf}}g}{{Gd{{l{i}}e}}}Fn{}{{Gb{}{{B`{{Gd{ce}}}}}}}{{Bn{}{{G`{c}}}}Bn}}11{{{f{{l{j}}}}{f{{l{c}}}}e}{{Af{{l{j}}}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Ml{}}0{{{f{{l{c}}}}}{{Af{{l{c}}}}}n}{{{f{{l{c}}}}{f{Ad}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{Bh{l{c}}}}}bBn}{{{f{{l{c}}}}El}{}Bn}{{{f{{l{c}}}}D`}{{An{Jn}}}n}{{{f{{l{c}}}}D`}JlEd}{ce{}{}}0{{{f{Bf}}c}{{l{e}}}Fn{{Bn{}{{G`{c}}}}Bn}}{{{f{{l{e}}}}c}{{l{e}}}Fn{{Bn{}{{G`{c}}}}Bn}}{{{f{{l{c}}}}{F`{En}}}{{l{c}}}Bn}{{{l{c}}{f{Bf}}}{{l{c}}}Bn}{{{f{{Db{Mn}}}}e}c{}{{N`{{f{Dn}}}{{C`{c}}}}}}{{{f{{l{c}}}}Il}{{l{c}}}Bn}{{{f{{l{c}}}}}en{}}{{{l{c}}}en{}}{{{f{{l{c}}}}{f{{l{c}}}}}en{}}{{{l{c}}{l{c}}}en{}}{{{l{c}}e}gn{}{}}{{{f{{l{c}}}}e}gn{}{}}2301{{c{f{{l{e}}}}}g{}n{}}{{c{l{e}}}g{}n{}}452310452376542310542310{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}Bn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}{{{f{{l{c}}}}{f{Fh}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}````{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}e{}{}{}}{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}c}e{}{}{}}{{c{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}e{}{}{}}{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}g{}{}{}}{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}c}g{}{}{}}{{c{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}g{}{}{}}{{{Nh{}{{Nb{c}}{Nd{e}}{Nf{g}}}}}e{}{}{}}65654654650654654````````{{{f{c}}h}b{}}000{{{f{BhNj}}}b}{{{f{Bh{Nl{c}}}}}b{NnLl}}{{{f{BhO`}}}b}{{{f{BhOb}}}b}{{{f{Bh{Od{c}}}}}bn}{{{f{Bh{Nl{c}}}}{An{e}}}b{NnLl}{{Kb{c}}}}{{{f{BhNj}}{An{c}}}b{}}{{{f{BhNj}}c}b{}}{{{f{Bh{Nl{c}}}}e}b{NnLl}{{Kb{c}}}}{{{f{BhO`}}d}b}5{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{{Nl{c}}}}}{{Nl{c}}}{NnLl}}{{{f{O`}}}O`}{{{f{Ob}}}Ob}{{{f{{Od{c}}}}}{{Od{c}}}{nOf}}{{{f{c}}{f{Bhe}}}b{}{}}000{El{{f{c}}}{}}000{El{{f{Bhc}}}{}}000{Elb}000{Nj{{l{c}}}Bn}{{{Nl{{Db{D`}}}}}Eb}{{{Nl{Bf}}}Mh}{OhMh}{OjEb}{O`Fh}`{{{Od{c}}}{{l{c}}}n}{cc{}}000{{{f{Bf}}e}Ol{}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Ol{}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}{f{{Db{c}}}}}Ol{}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Ol{}}{{}El}000{ce{}{}}000`{{{f{Bf}}El}{{Nl{c}}}{NnLl}}{{{f{Bf}}El}O`}{{{f{Bf}}El}Ob}{{{f{Bf}}El}{{Od{c}}}n}{{{f{BhNj}}}b}{{{f{BhO`}}}b}{{{f{BhOb}}}b}{{{f{Bh{Od{c}}}}}bn}{{{f{c}}}e{}{}}000{c{{Gd{e}}}{}{}}0000000{{{f{c}}}Ml{}}000;;;;````````{{{f{BhOn}}{f{Fn}}}b}{{{f{BhOn}}}b}{{{f{BhA@`}}}b}{{{f{BhA@b}}c}b{{Bd{}{{B`{{An{d}}}}}}Gn}}{{{f{Bh{A@d{c}}}}e}bn{{Bd{}{{B`{An}}}}Gn}}{{{f{Bh{A@d{c}}}}e}bn{{Bd{}{{B`{}}}}Gn}}{{{f{BhA@f}}}b}54{{{f{BhA@h}}}b}{{{f{BhA@j}}}b}{{{f{BhA@b}}}b}{{{f{BhA@l}}}b}{{{f{Bh{A@d{c}}}}}bn}{{{f{BhOn}}{An{{f{Fn}}}}}b}{{{f{BhOn}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{BhA@f}}{An{{f{Ad}}}}}{{Af{b}}}}{{{f{Bh{A@d{c}}}}{An{{f{Db}}}}}bn}{{{f{BhA@f}}{f{Ad}}}{{Af{b}}}}{{{f{BhOn}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@`}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@h}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@j}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@b}}{f{Ad}}}{{Af{b}}}}{{{f{BhA@l}}{f{Ad}}}{{Af{b}}}}{{{f{Bh{A@d{c}}}}{f{Ad}}}{{Af{b}}}n}{{{f{Bh{A@d{c}}}}{f{Db}}}bn}{{{f{BhA@h}}c}b{{Bd{}{{B`{{An{{f{Bf}}}}}}}}Gn}}{{{f{BhA@j}}c}b{{Bd{}{{B`{{An{{f{{Db{D`}}}}}}}}}}Gn}}{{{f{BhA@h}}c}b{{Bd{}{{B`{{f{Bf}}}}}}}}{{{f{BhA@j}}c}b{{Bd{}{{B`{{f{{Db{D`}}}}}}}}}}{{{f{c}}}{{f{e}}}{}{}}000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000`{{}On}{{}A@`}{El{{f{c}}}{}}000000{El{{f{Bhc}}}{}}000000{Elb}000000{{{f{A@h}}}d}{{{f{A@j}}}d}{{{f{A@b}}}d}{{{f{{A@d{c}}}}}dn}{{{f{A@f}}}d}{{{f{A@h}}}{{f{Lb}}}}{{{f{A@j}}}{{f{Lb}}}}{{{f{A@b}}}{{f{Lb}}}}{{{f{{A@d{c}}}}}{{f{Lb}}}n}{{{f{A@f}}}{{f{Lb}}}}{{{f{BhOn}}}Dj}{{{f{BhA@`}}}Dj}{{{f{BhA@l}}}Dj}{{{f{BhA@f}}}Dj}{cc{}}000000{{{f{Df}}ElEl{f{Bf}}}{{Af{{A@n{A@f}}}}}}{{}El}000000{{{f{BhA@h}}}En}{{{f{BhA@j}}}En}{{{f{BhA@b}}}En}{{{f{Bh{A@d{c}}}}}Enn}{{{f{BhA@f}}}En}{ce{}{}}000000{{{f{Bf}}El{An{Df}}}On}{{{f{Bf}}El{An{Df}}}A@`}{{{f{Bf}}ElEl}A@h}{{{f{Bf}}ElEl}A@j}{{{f{Bf}}ElEl}A@b}{{{f{Bf}}El}A@l}{{{f{Bf}}ElElDf}{{A@d{c}}}n}{{{f{Bf}}ElElDfDf}{{A@d{c}}}n}{c{{Gd{e}}}{}{}}0000000000000{{{f{c}}}Ml{}}000000:::::::````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Ef}}}Ef}{{{f{c}}{f{Bhe}}}b{}{}}{{}Ef}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{Ef}}{f{Ef}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{Ef}}{f{BhFj}}}Fl}{cc{}}{{{f{Ef}}{f{Bhc}}}bAA`}{{}El}{ce{}{}}{{{f{Ef}}}d}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}4``{{AAb{f{Bf}}}{{l{c}}}Bn}{{AAd{f{{l{c}}}}}{{l{c}}}Bn}10{{AAd{f{Bf}}Df}{{l{c}}}Bn}0{{AAb{f{Bf}}}{{Gd{{l{c}}e}}}Bn{}}{{AAd{f{{l{c}}}}}{{Gd{{l{c}}e}}}Bn{}}10{{AAd{f{Bf}}Df}{{Gd{{l{c}}e}}}Bn{}}0`{AAfAAf}``{{AAh{f{Bf}}Df}e{}{{AAj{c}}}}{{e{f{Bf}}Df}AAj{}{{Gl{}{{B`{c}}}}}}```{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0{Elb}0{cc{}}0{{}El}0{ce{}{}}000{{{f{AAl}}}AAn}{{{f{BhAAn}}}{{An{c}}}{}}{{{f{Bh{AB`{c}}}}}{{An{e}}}Bd{}}1{{{f{Bh{AB`{c}}}}}{{An{e}}}Fd{}}`{{{f{AAn}}}{{Gj{El{An{El}}}}}}{{{f{{AB`{c}}}}}{{Gj{El{An{El}}}}}Bd}{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}088`````````````````````{{{f{c}}h}b{}}000{{}Fb}{{}Hd}{{FbFb}Fb}{{HdHd}Hd}{{{f{BhFb}}Fb}b}{{{f{BhHd}}Hd}b}3210{{{f{Fb}}}Kj}0{{{f{Hd}}}D`}05432{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{{Ff{c}}}}}{{Ff{c}}}Bn}{{{f{ABb}}}ABb}{{{f{Fb}}}Fb}{{{f{Hd}}}Hd}{{{f{c}}{f{Bhe}}}b{}{}}000{{{f{BhABd}}}b}{FbFb}{HdHd}{{{f{Fb}}Fb}d}{{{f{Hd}}Hd}d}{{}{{Ff{c}}}Bn}{{}Fb}{{}Hd}{El{{f{c}}}{}}0000{El{{f{Bhc}}}{}}0000{{FbFb}Fb}{{HdHd}Hd}{{}d}{{{f{ABf}}}{{An{Hb}}}}{{{f{{Ff{c}}}}}{{An{Hb}}}Bn}{{{Ff{c}}Hb}{{Ff{c}}}Bn}{{{Ff{c}}{An{Hb}}}{{Ff{c}}}Bn}{Elb}0000;:5{{{f{Fb}}{f{Fb}}}d}{{{f{Hd}}{f{Hd}}}d}7{{{f{BhFb}}c}b{{Gb{}{{B`{Fb}}}}}}{{{f{BhHd}}c}b{{Gb{}{{B`{Hd}}}}}}{{{Ff{c}}d}{{Ff{c}}}Bn}{{{Ff{c}}{An{d}}}{{Ff{c}}}Bn}{{{f{{Ff{c}}}}Fb}{{Ff{c}}}Bn}{{{f{{Ff{c}}}}Fb}{{Ff{e}}}BnBn}{{{Ff{c}}Hd}{{Ff{c}}}Bn}{{{Ff{c}}{An{Hd}}}{{Ff{c}}}Bn}{{{f{{Ff{c}}}}{f{BhFj}}}FlBn}{{{f{ABb}}{f{BhFj}}}Fl}{{{f{Fb}}{f{BhFj}}}Fl}0000{{{f{Hd}}{f{BhFj}}}Fl}0000{cc{}}0000{Kj{{An{Fb}}}}{D`{{An{Hd}}}}{KjFb}0{D`Hd}010{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}0{cFb{{Gb{}{{B`{Fb}}}}}}{cHd{{Gb{}{{B`{Hd}}}}}}{{{f{Bf}}}{{An{Fb}}}}{{{f{Bf}}}{{An{Hd}}}}{{{f{{Ff{c}}}}}{{An{Hb}}}Bn}{{{f{{Ff{c}}}}}dBn}{{{f{Hd}}}d}{{{f{ABf}}}Hd}{{{f{{Ff{c}}}}}HdBn}0{{{f{{Ff{c}}}}}{{An{f}}}Bn}0{{{f{Hd}}}Il}{{}El}0000{{{f{BhFb}}Fb}b}{{{f{BhHd}}Hd}b}{{FbFb}Fb}{{HdHd}Hd}{{{f{Fb}}Fb}d}{{{f{Hd}}Hd}d}{ce{}{}}0000{Fbc{}}{Hdc{}}{{{f{Fb}}}d}?{{{f{{Ff{c}}}}}dBn}1{{{f{Hd}}}d}{{{f{{Ff{c}}}}}IlBn}22{{{f{Fb}}}{{ABh{Fb}}}}{{{f{Hd}}}{{ABh{Hd}}}}{{{f{Fb}}}{{ABj{Fb}}}}{{{f{Hd}}}{{ABj{Hd}}}}{{}d}{{}{{f{{ABn{ABl}}}}}}{{{f{ABf}}}{{An{Jl}}}}{{{f{{Ff{c}}}}}{{An{Jl}}}Bn}{{{Ff{c}}}{{Ff{c}}}Bn}{{{Ff{c}}An}{{Ff{c}}}Bn}{{{f{{Ff{c}}}}{Ff{c}}}{{AC`{c}}}Bn}4231{FbFb}{HdHd}{{{f{BhFb}}Fb}b}{{{f{BhHd}}Hd}b}{{{f{BhFb}}Fbd}b}{{{f{BhHd}}Hdd}b}{{{f{Bh{Ff{c}}}}{An{Hb}}}bBn}{{{f{Bh{Ff{c}}}}d}bBn}{{{f{BhHd}}d}b}{{{f{Bh{Ff{c}}}}Hd}bBn}{{{f{Bh{Ff{c}}}}An}bBn}033{{{f{Bh{Ff{c}}}}Il}bBn}{{{f{BhHd}}Il}b}{{{Ff{c}}Il}{{Ff{c}}}Bn}{{{Ff{c}}{An{Il}}}{{Ff{c}}}Bn}{{FbFb}Fb}{{HdHd}Hd}>=10{{{f{c}}}e{}{}}000?>{c{{Gd{e}}}{}{}}000000000{{{f{c}}}Ml{}}000043{ce{}{}}0000{ABdABd}````{{{f{c}}h}b{}}{{{f{{ACb{c}}}}El}{{Gj{{ACb{c}}{ACb{c}}}}}Hj}{e{{ACb{c}}}Hj{{Gb{}{{B`{{f{c}}}}}}}}{e{{ACb{c}}}Hj{{Gb{}{{B`{{An{{f{c}}}}}}}}}}{{ACde}g{}{{Gb{}{{B`{c}}}}}{}}0{{{f{Hh}}}{{f{ACf}}}}{{{f{{ACb{c}}}}}{{f{ACf}}}Hj}{{{f{Bh{ACb{c}}}}}{{f{BhACf}}}Hj}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`{{{f{{ACb{c}}}}El}dHj}{{{f{{ACb{c}}}}}{{ACb{c}}}{HjOf}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{{ACb{c}}}}}{{f{ACd}}}Hj}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{{f{Hh}}}}{f{{f{Hh}}}}}d}{{{f{Hh}}{f{Hh}}}d}{{{f{{ACb{c}}}}{f{BhFj}}}Fl{HjACh}}{cc{}}{{ElACd}{{ACb{c}}}Hj}{{{f{{ACb{c}}}}El}{{An{{f{c}}}}}Hj}{{}ACd}{{{f{Gh}}{f{{ACb{c}}}}{f{{ACb{c}}}}}{{ACb{c}}}Hj}{{ACd{f{Gh}}cc}{{ACb{e}}}{}Hj}{{{f{Gh}}{f{{ACb{c}}}}e}{{ACb{c}}}Hj{}}{{{f{Gh}}c{f{{ACb{e}}}}}{{ACb{e}}}{}Hj}{{}El}{ce{}{}}{{{f{{ACb{c}}}}}eHj{}}{{{f{{ACb{c}}}}El}dHj}0{{{f{c}}El}d{}}{{{f{{ACb{c}}}}}{{ACn{{f{c}}{ACj{c}}ACl}}}Hj}{{{f{{ACb{c}}}}}{{ACn{egACl}}}Hj{}{}}{{{f{{ACb{c}}}}}ElHj}0`{{{f{Bh{ACb{c}}}}{An{Gh}}}bHj}{{{f{Bh{ACb{c}}}}ElEl}bHj}{{{f{c}}ElEl}e{}{}}01{{{f{{ACb{c}}}}El}{{Gj{{A@n{Fn}}{A@n{Fn}}}}}Hj}0{{{f{Hh}}}{{A@n{Hh}}}}{{{f{{ACb{c}}}}}{{A@n{Fn}}}Hj}{{{f{c}}}e{}{}}{g{{Gd{{ACb{c}}e}}}Hj{}{{Gb{}{{B`{{Gd{{f{c}}e}}}}}}}}{g{{Gd{{ACb{c}}e}}}Hj{}{{Gb{}{{B`{{Gd{{An{{f{c}}}}e}}}}}}}}{{ACdg}{{Gd{ie}}}{}{}{{Gb{}{{B`{{Gd{ce}}}}}}}{}}0{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}{{{f{Hh}}}{{f{Bf}}}}{{}{{f{Bf}}}}{{{f{{ACb{c}}}}}{{An{{f{Gh}}}}}Hj}{{{f{{ACb{c}}}}El}{{f{c}}}Hj}0{{{f{{ACb{c}}}}El}eHj{}}{{{f{{ACb{c}}}}}{{f{{K`{{F`{c}}}}}}}Hj}{{{f{{ACb{c}}}}}eHj{}}{{{f{{ACb{c}}}}}{{ACj{c}}}Hj}{ce{}{}}{{{ACb{c}}{An{Gh}}}{{ACb{c}}}Hj}{{{f{{ACb{c}}}}{An{Gh}}}{{A@n{Fn}}}Hj}1`{{{f{Bh{AD`{c}}}}}bHj}0{{{f{Bh{AD`{c}}}}{An{c}}}bHj}{{{f{Bh{AD`{c}}}}c}bHj}{{{f{Bh{AD`{c}}}}{f{ACf}}}bHj}{{{f{Bh{AD`{c}}}}{f{ACf}}}{{Af{b}}}Hj}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}{{AD`{c}}}Hj}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{AD`{c}}}{{ADb{c}}}Hj}{cc{}}{{}El}{ce{}{}}{{{f{Bf}}El}{{AD`{c}}}Hj}{{{f{Bh{AD`{c}}}}}AdHj}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}4````{{{f{BhADd}}}b}{{{f{BhADd}}{An{{f{ACf}}}}}b}{{{f{BhADd}}{f{ACf}}}b}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}`?>={{{f{ADf}}{f{BhFj}}}Fl}<{{{f{Bf}}El}{{A@n{ADd}}}}{{}ADh}{{}ACd}>={{}d}`{{ADjADhACd}b}{{{f{BhADd}}}Ad}==<{ce{}{}}``````````````````````````````````````````{{{f{c}}h}b{}}{{{f{{ADn{}{{ADl{c}}}}}}g}{{ADn{}{{ADl{c}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{c}}}}}}Cd}}{{{f{AE`}}{f{Cb}}}AE`}{{{f{AE`}}{f{Cb}}}{{l{c}}}Bn}{{{f{{ADn{}{{ADl{c}}}}}}i{f{Bh{Db{g}}}}}b{}{}{}{{Cb{{An{e}}{f{g}}}{{C`{g}}}}}}{{{f{{ADn{}{{ADl{c}}}}}}g}{{ADn{}{{ADl{c}}}}}{}{}{{Cb{e}{{C`{c}}}}Cd}}{{{f{AEb}}Dl}Dn}{{{f{AEb}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{AEd}}}{{Af{Dn}}}}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AEf}}{f{Df}}}{{Af{Ad}}}}0{{{f{AEf}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{AEh}}}AEh}{{{f{c}}{f{Bhe}}}b{}{}}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{AEh}}{f{AEh}}}d}{{{f{{AEj{}{{B`{c}}}}}}e}c{}{}}0{{{f{AEl}}}{{Af{Ad}}}}{{{f{AEl}}}{{Af{{Gj{Ad{AEn{J`}}}}}}}}`{{{f{AF`}}c}{{Af{AF`}}}{}}{{{f{AFb}}{f{Fh}}}{{Af{{l{c}}}}}Bn}`{{{f{AEh}}{f{BhFj}}}Fl}{cc{}}`{{{f{Bf}}cEl}AFd{}}{{{f{Bf}}El}AFf}`{{{f{AFh}}El}{{Af{H`}}}}{{{f{AFh}}El}H`}::{{{f{AEh}}{f{Bhc}}}bAA`}{{}El}{ce{}{}}{{{f{AFj}}}{{Af{Fh}}}}{{{f{AFl}}}{{Af{Fh}}}}??{{{f{AFn}}}{{An{c}}}{}}{{{f{AFn}}}{{An{Jn}}}}{{{f{AG`}}}{{An{c}}}{}}2{{{f{AFn}}}{{An{{Gj{cc}}}}}{}}{{{f{AEd}}}{{Af{El}}}}{{{f{AGb}}ElEl}{{l{c}}}Bn}{{{f{{AEj{}{{B`{c}}}}}}e}c{}{}}0{{{f{AEl}}}{{Af{{AEn{J`}}}}}}{{{f{AG`}}JnLh}{{Af{{An{c}}}}}{}}{{{f{AGd}}}AGd}{{{f{AGf}}{f{Cb}}Lj}{{Af{Ad}}}}{{{f{AGh}}c{An{e}}}{{Af{AGh}}}{{Gb{}{{B`{Hb}}}}}{}}{{{f{AGh}}ci}{{Af{AGh}}}{{Gb{}{{B`{Hb}}}}}{}{}{{Cb{{An{e}}}{{C`{{An{g}}}}}}}}`{{{f{AGh}}{f{Fh}}{An{c}}}{{Af{AGh}}}{}}{{{f{AGj}}J`}{{l{c}}}Bn}{{{f{AGl}}J`c}{{l{e}}}{}Bn}`{{{f{AEb}}d}{{l{c}}}Bn}{{{f{AEb}}Dl}{{l{c}}}Bn}{{{f{AGn}}D`}{{An{Jn}}}}{{{f{AFn}}}{{An{c}}}{}}{{{f{AH`}}{f{c}}}{{Af{AH`}}}Ll}{{{f{AHb}}{f{c}}}AHbLl}{{{f{AHd}}}{{F`{{f{{Db{D`}}}}}}}}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}{{{f{AEd}}}{{Af{AEd}}}}8{ce{}{}}`{{{f{AHf}}{f{Fh}}{f{{l{c}}}}}{{Af{{l{c}}}}}Bn}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}BnBn{{Cb{ff}{{C`{}}}}}{{Cb{f}{{C`{}}}}}{{Cb{f}{{C`{}}}}}Bn}{{{l{c}}{l{e}}gik}{{l{m}}}BnBn{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}{{Cb{}{{C`{}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBnFn{{Ch{ff}{{C`{g}}}}}{{Bn{}{{G`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}BnBn{{AHh{AnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}g}bBnBn{{Ch{AnAn}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}BnBn{}{{Ch{}{{C`{g}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBn{FnAHj}{{Ch{ff}{{C`{g}}}}}{{Bn{}{{G`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i{f{Bf}}}{{l{k}}}BnBnFn{{Ch{ff}{{C`{g}}}}}{{Bn{}{{G`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}BnBnFn{{Ch{}{{C`{g}}}}}{{Bn{}{{G`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Af{Ad}}}BnBn{{Ch{ff}{{C`{{A@n{Fn}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}BnBn{{Ch{ff}{{C`{{A@n{Fn}}}}}}}}75{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gd{{l{m}}i}}}BnBn{}{}{{Ch{AnAn}{{C`{{Gd{{An{g}}i}}}}}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}BnBnBn{{AHl{AnAnAn}}}Bn}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Gd{{l{m}}i}}}BnBnFnAHn{{Ch{ff}{{C`{{Gd{gi}}}}}}}{{Bn{}{{G`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}k{f{Bf}}}{{Gd{{l{m}}i}}}BnBnFnAHn{{Ch{ff}{{C`{{Gd{gi}}}}}}}{{Bn{}{{G`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Gd{{l{c}}g}}}BnBnAHn{{Ch{ff}{{C`{{Gd{{A@n{Fn}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Gd{{l{o}}k}}}BnBnBn{}{}{{Ch{AnAnAn}{{C`{{Gd{{An{i}}k}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{}{}{{Ch{An}{{C`{{Gd{{An{e}}g}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{}{}{{Ch{}{{C`{{Gd{eg}}}}}}}Bn}{{{f{{l{c}}}}i}{{Gd{{l{k}}g}}}Bn{FnAHj}AHn{{Ch{f}{{C`{{Gd{eg}}}}}}}{{Bn{}{{G`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Bn{{AI`{An}}}Bn}{{{f{{l{c}}}}e}{{l{g}}}BnAI`Bn}{{{f{{l{c}}}}g}{{l{i}}}BnFn{{Ch{f}{{C`{e}}}}}{{Bn{}{{G`{e}}}}}}{{{l{c}}g}{{l{i}}}BnFn{{Ch{}{{C`{e}}}}}{{Bn{}{{G`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Bn{FnAHj}{{Ch{f}{{C`{e}}}}}{{Bn{}{{G`{e}}}}}}0{{{f{{l{c}}}}}Eln}0{{IlIl}Il}{{{f{Dn}}Hb}{{Af{b}}}}{{{f{{AIb{Hb}}}}Hb}{{Af{b}}}}````{{{f{c}}h}b{}}{{{f{{l{c}}}}eAIdd}{{F`{Hb}}}Bn{{Bd{}{{B`{An}}}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{AId}}}AId}{{{f{c}}{f{Bhe}}}b{}{}}{{}AId}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{AId}}{f{AId}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{AId}}{f{BhFj}}}Fl}{cc{}}{{{f{AId}}{f{Bhc}}}bAA`}{{}El}{ce{}{}}{{{f{{Db{f}}}}cHbe}{{F`{Hb}}}{{Bd{}{{B`{An}}}}}{{Cb{fElf}{{C`{d}}}}}}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}4`{{El{f{Bh{F`{d}}}}}b}```{{{f{AIf}}ElEl}AIf}0{{El{f{{Db{Ad}}}}{f{BhE`}}}{{Af{{AIh{Dn}}}}}}{{{f{{Db{Ad}}}}{f{{Db{d}}}}{f{{Db{d}}}}}{{Af{AIj}}}}{{{f{Bf}}{f{{Db{Ad}}}}{f{{Db{d}}}}{f{{Db{d}}}}}{{Af{AIl}}}}{{{f{Bf}}{f{{Db{Ad}}}}}{{Af{AIl}}}}{{{f{Ad}}}{{Af{En}}}}{{{f{{Db{Ad}}}}}{{Af{AIj}}}}{{{f{{Db{Ad}}}}}{{Af{AIl}}}}0```{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{{f{Dl}}}Dl}{{{f{E`}}}E`}{{{f{c}}{f{Bhe}}}b{}{}}0{{}Dl}{{}E`}{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0``{Elb}0{{{f{Dl}}{f{Dl}}}d}{{{f{E`}}{f{E`}}}d}{{{f{c}}{f{e}}}d{}{}}00000{{{f{Dl}}{f{BhFj}}}Fl}{{{f{E`}}{f{BhFj}}}Fl}{{{f{E`}}}Dl}{cc{}}{{{f{Dl}}}E`}1{{{f{Dl}}{f{Bhc}}}bAA`}{{{f{E`}}{f{Bhc}}}bAA`}{{}El}0{ce{}{}}0````{{}Dl}{{}E`}``{{{f{AIf}}ElEl}AIf}0{{{f{c}}}e{}{}}0{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}066{{Dld}Dl}{{E`d}E`}1010{{E`c}E`{{Gb{}{{B`{d}}}}}}210{DlDl}{E`E`}`{AInJ`}00{{}d}>>0```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}00000000000000000000000000000{{{f{Dj}}}d}{{{f{Ib}}{f{Ib}}}c{}}{{{f{Fh}}{f{Fh}}}c{}}{{FhFh}c{}}{{{f{Mh}}{f{Mh}}}c{}}{{{f{Mh}}{f{Bf}}}c{}}{{MhMh}c{}}{{{f{Eb}}{f{Eb}}}c{}}{{EbEb}c{}}{{{f{Eb}}{f{{Db{D`}}}}}c{}}{{{f{H`}}{f{H`}}}H`}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAJ`}}}{}}000000{{{f{Mh}}{f{Ad}}}{{Af{Ad}}}}{{{f{Eb}}{f{Ad}}}{{Af{Ad}}}}{{{f{Fh}}{f{Ad}}}{{Af{Ad}}}}{{{f{Dj}}{f{Aj}}}Ad}{{{f{Fh}}{f{Aj}}}Ad}{{{f{Mh}}{f{Aj}}}Ad}{{{f{Eb}}{f{Aj}}}Ad}{{{f{{ADb{c}}}}{f{Aj}}}AdHj}{{{f{Fh}}}d}{{{f{Fh}}}{{An{d}}}}{{{f{Dj}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}{{{f{Dj}}{f{Bf}}}{{`{{`{{Bd{}{{B`{{An{Bb}}}}}}}}}}}}32{{{f{Dj}}c}Dj{{Cb{{An{Ad}}}{{C`{{An{Ad}}}}}}Cd}}{{{f{Fh}}c}Fh{{Cb{{An{d}}}{{C`{{An{d}}}}}}Cd}}{{{f{Mh}}c}Mh{{Cb{{An{{f{Bf}}}}}{{C`{{An{{AJb{Bf}}}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{An{{f{{Db{D`}}}}}}}{{C`{{An{{AJb{{Db{D`}}}}}}}}}}Cd}}{{{f{{ADb{c}}}}e}{{ADb{c}}}Hj{{Cb{{An{{f{c}}}}}{{C`{{An{c}}}}}}Cd}}{{{f{Dj}}c}Dj{{Ch{Cf}{{C`{Ad}}}}}}{{{f{Dj}}e}{{l{g}}}{}{{Ch{{An{Cf}}}{{C`{{An{c}}}}}}Cd}Bn}{{{f{AJd}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{AJf}}c}Ad{{Cb{{f{Ad}}}{{C`{Ad}}}}}}{{{f{Fh}}{f{Cb}}}Fh}{{{f{Mh}}{f{Cb}}}Mh}{{{f{Eb}}{f{Cb}}}Eb}{{{f{Fh}}{f{Cb}}}{{l{c}}}Bn}{{{f{Mh}}{f{Cb}}}{{l{c}}}Bn}{{{f{Eb}}{f{Cb}}}{{l{c}}}Bn}{{{f{Mh}}c}Mh{{Ch{{f{Bf}}}{{C`{{f{Bf}}}}}}}}{{{f{Eb}}c}Eb{{Ch{{f{{Db{D`}}}}}{{C`{{f{{Db{D`}}}}}}}}}}{{{f{Mh}}c}Mh{{Ch{{f{Bf}}{f{BhDh}}}}}}{{{f{Dj}}{f{Cb}}}{{Af{Dj}}}}{{{f{Dj}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{Ad}}{f{c}}}{{C`{c}}}}}}{{{f{Fh}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{d}}{f{c}}}{{C`{c}}}}}}{{{f{Mh}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{{f{Bf}}}}{f{c}}}{{C`{c}}}}}}{{{f{Eb}}e{f{Bh{Db{c}}}}}b{}{{Cb{{An{{f{{Db{D`}}}}}}{f{c}}}{{C`{c}}}}}}{{{f{{ADb{c}}}}g{f{Bh{Db{e}}}}}bHj{}{{Cb{{An{{f{c}}}}{f{e}}}{{C`{e}}}}}}{{{f{Dj}}c}Dj{{Cb{Ad}{{C`{Ad}}}}Cd}}{{{f{Fh}}c}Fh{{Cb{d}{{C`{d}}}}Cd}}{{{f{Mh}}c}Mh{{Cb{{f{Bf}}}{{C`{{AJb{Bf}}}}}}Cd}}{{{f{Eb}}c}Eb{{Cb{{f{{Db{D`}}}}}{{C`{{AJb{{Db{D`}}}}}}}}Cd}}{{{f{{ADb{c}}}}e}{{ADb{c}}}Hj{{Cb{{f{c}}}{{C`{c}}}}Cd}}{{{f{Fh}}Dl}Dn}{{{f{Mh}}Dl}Dn}{{{f{Eb}}Dl}Dn}{{{f{AIl}}Dl}Dn}{{{f{Fh}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Mh}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Eb}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{AIl}}{f{{Db{Ad}}}}{f{E`}}}{{Af{Dn}}}}{{{f{Fh}}}{{Af{Dn}}}}{{{f{Mh}}}{{Af{Dn}}}}{{{f{Eb}}}{{Af{Dn}}}}{{{f{{ADb{c}}}}}{{Af{Dn}}}Hj}{eAJh{}{{Gb{}{{B`{c}}}}}}0{{ACde}AJj{}{{Gb{}{{B`{c}}}}}}0{{{f{Jl}}}H`}{{{f{Mh}}}Eb}{{{f{H`}}}H`}{{{f{Df}}}{{f{Df}}}}{{{f{Lb}}}{{f{Df}}}}{{{f{AJl}}}{{f{Df}}}}{{{f{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}}}{{An{{f{{Db{c}}}}}}}Of{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Dj}}{f{{l{c}}}}{f{{l{e}}}}g}DjBnBn{{Ch{{An{Cf}}AnAn}{{C`{{An{Ad}}}}}}}}{{FhFh}c{}}{{{f{Fh}}{f{Fh}}}c{}}0101{{{f{c}}}{{f{e}}}{}{}}0000000000000000000000000000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000000000000000000000000000000{Df{{A@n{Df}}}}{{{f{AKh}}{f{AKh}}c}{{Af{AKh}}}AKj}{{{f{AKl}}{f{Df}}}{{Af{Ad}}}}0{{{f{H`}}{f{Df}}}H`}{{{f{Df}}Df}Df}{{{f{Dj}}{f{Df}}}{{Af{Ad}}}}{{{f{Fh}}{f{Df}}}{{Af{Ad}}}}{{{f{Mh}}{f{Df}}}{{Af{Ad}}}}{{{f{Eb}}{f{Df}}}{{Af{Ad}}}}{{{f{AIl}}{f{Df}}}{{Af{Ad}}}}{{{f{AKl}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ib}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Dj}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Fh}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Mh}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Eb}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{AIl}}{f{Df}}Ef}{{Af{Ad}}}}`{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAJ`}}}{}}0000{{{f{AJd}}{f{Ad}}}{{Af{Ad}}}}{{{f{AJf}}{f{Ad}}}{{Af{Ad}}}}{{{f{{AKn{ce}}}}}{{AKn{ce}}}BnBn}{{{f{Jl}}}Jl}{{{f{AL`}}}AL`}{{{f{H`}}}H`}{{{f{ALb}}}ALb}{{{f{Df}}}Df}{{{f{Lb}}}Lb}{{{f{ALd}}}ALd}{{{f{ALf}}}ALf}{{{f{ALh}}}ALh}{{{f{Kh}}}Kh}{{{f{Kd}}}Kd}{{{f{ALj}}}ALj}{{{f{ALl}}}ALl}{{{f{Kn}}}Kn}{{{f{Kf}}}Kf}{{{f{Cl}}}Cl}{{{f{Cj}}}Cj}{{{f{ALn}}}ALn}{{{f{AM`}}}AM`}{{{f{Dd}}}Dd}{{{f{Cn}}}Cn}{{{f{AMb}}}AMb}{{{f{Al}}}Al}{{{f{AMd}}}AMd}{{{f{AMf}}}AMf}{{{f{AMh}}}AMh}{{{f{AMj}}}AMj}{{{f{ACd}}}ACd}{{{f{AMl}}}AMl}{{{f{c}}{f{Bhe}}}b{}{}}00000000000000000000000000000{{{f{BhLb}}Df}b}{AMne{}{{AJh{c}}AHj}}0{{AMnACd}e{}{{AJj{c}}AHj}}0{{{f{Df}}}d}00{AN`Df}{{{f{Lb}}}{{f{Df}}}}{{}H`}{{}ALb}{{}Df}{{}ACd}{{{f{{AKn{ce}}}}}{{f{g}}}BnBn{}}{El{{f{c}}}{}}0000000000000000000000000000000000{El{{f{Bhc}}}{}}{{{f{Bh{AKn{ce}}}}}{{f{Bhg}}}BnBn{}}1111111111111111111111111111111111{{{f{Ib}}{f{Ib}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAJ`}}}{}}000000{Elb}0000000000000000000000000000000000{{{f{AKl}}}{{f{Df}}}}{{{f{Ib}}}{{f{Df}}}}{{{f{Jl}}}{{f{Df}}}}{{{f{H`}}}Df}`{{{f{H`}}{f{H`}}}d}{{{f{ALb}}{f{ALb}}}d}{{{f{Df}}{f{ACd}}}d}{{{f{Df}}{f{Df}}}d}{{{f{Lb}}{f{Lb}}}d}{{{f{ALd}}{f{ALd}}}d}{{{f{ACd}}{f{ACd}}}d}{{{f{AMl}}{f{AMl}}}d}{{{f{H`}}{f{H`}}d}d}{{{f{Dj}}{f{Dj}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Mh}}{f{Bf}}}Fh}{{{f{Mh}}{f{Mh}}}Fh}{{{f{Eb}}{f{Eb}}}Fh}{{{f{Eb}}{f{{Db{D`}}}}}Fh}543210{{{f{c}}{f{e}}}d{}{}}00000000000000000000{{{f{Dj}}}{{Af{{Gj{Ad{AEn{J`}}}}}}}}{{{f{{AKn{ce}}}}}LbBnBn}{{{f{Fh}}d}{{Af{Fh}}}}{{{f{Eb}}{f{{Db{D`}}}}}{{Af{Eb}}}}{{{f{Dj}}{f{Fh}}}{{Af{Dj}}}}{{{f{Fh}}{f{Fh}}}{{Af{{l{Al}}}}}}{{{f{Mh}}{f{Fh}}}{{Af{{l{Dd}}}}}}{{{f{Eb}}{f{Fh}}}{{Af{{l{Cn}}}}}}{{{f{AIl}}{f{Fh}}}{{Af{AIl}}}}{{{f{{ADb{c}}}}{f{Fh}}}{{Af{{l{{Hf{c}}}}}}}Hj}{{AKj{f{ANb}}{f{ANb}}}{{Af{ANb}}}}{{{f{Dj}}{f{BhFj}}}Fl}{{{f{Mh}}{f{BhFj}}}Fl}{{{f{Eb}}{f{BhFj}}}Fl}{{{f{{ADb{c}}}}{f{BhFj}}}FlHj}{{{f{AL`}}{f{BhFj}}}Fl}{{{f{H`}}{f{BhFj}}}Fl}0{{{f{ALb}}{f{BhFj}}}Fl}{{{f{Df}}{f{BhFj}}}Fl}0{{{f{Lb}}{f{BhFj}}}Fl}{{{f{ALd}}{f{BhFj}}}Fl}0{{{f{ACd}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{AMl}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{Dj}}c}b{{Ch{{An{Cf}}}}}}{cc{}}0000000{dH`}{cH`ANf}2{{{An{c}}}H`{{ANh{H`}}}}{{{f{Bf}}}H`}{{{f{{Db{D`}}}}}H`}5{H`Df}6{{{f{ACd}}}Df}{{{f{H`}}}Df}{{{f{ANj}}}Lb}{{{f{H`}}}Lb}:{{{f{AMl}}}ALd};;;;;;;;;;;;;;;;;;;;;{ANlACd}{ANnACd}=={{{f{ACd}}d}Df}{cDj{{Gb{}{{B`{{An{Ad}}}}}}}}{eDj{{AO`{Ad}}}{{Gb{}{{B`{c}}}}}}{cDj{{Gb{}{{B`{{An{{A@n{Fn}}}}}}}}}}{cFh{{Gb{}{{B`{d}}}}}}{eMh{{`{Bf}}}{{Gb{}{{B`{c}}}}}}{eMh{{Kb{Bf}}}{{Gb{}{{B`{{An{c}}}}}}}}{eEb{{Kb{{Db{D`}}}}}{{Gb{}{{B`{{An{c}}}}}}}}{eEb{{`{{Db{D`}}}}}{{Gb{}{{B`{c}}}}}}{e{{ADb{c}}}Hj{{Gb{}{{B`{{An{c}}}}}}}}{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{{An{d}}}}}}}}{{{f{Bf}}e}Mh{{Kb{Bf}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}Eb{{Kb{{Db{D`}}}}}{{Bd{}{{B`{{An{c}}}}}}}}{{{f{Bf}}e}{{ADb{c}}}Hj{{Bd{}{{B`{{An{c}}}}}}}};<97865{eAIl{{`{{Db{D`}}}}}{{Gb{}{{B`{c}}}}}}{eAIl{{Kb{{Db{D`}}}}}{{Gb{}{{B`{{An{c}}}}}}}}6{{{f{Bf}}c}{{l{Al}}}{{Bd{}{{B`{d}}}}}}{{{f{Bf}}e}Mh{{Kb{Bf}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}Eb{{Kb{{Db{D`}}}}}{{Bd{}{{B`{c}}}}}}{{{f{Bf}}e}{{ADb{c}}}Hj{{Bd{}{{B`{c}}}}}}{{AObDf}Lb}{cDj{{Gl{}{{B`{{An{Ad}}}}}}}}{cFh{{Gl{}{{B`{{An{d}}}}}}}}{cFh{{Gl{}{{B`{d}}}}}}{eMh{{Kb{Bf}}IdIf}{{Gl{}{{B`{{An{c}}}}}}}}{eMh{{`{Bf}}IdIfAOd}{{Gl{}{{B`{c}}}}}}{eEb{{Kb{{Db{D`}}}}IdIf}{{Gl{}{{B`{{An{c}}}}}}}}{eEb{{`{{Db{D`}}}}IdIfAOd}{{Gl{}{{B`{c}}}}}}{{c{f{Bf}}Df}Dj{{Gl{}{{B`{{An{Ad}}}}}}}}{{{f{Bf}}{f{{Db{d}}}}}Fh}{{{f{Bf}}{f{{Db{c}}}}}Mh{{Kb{Bf}}}}{{{f{Bf}}{f{{Db{c}}}}}Eb{{Kb{{Db{D`}}}}}}{{{f{Bf}}{f{{Db{c}}}}}{{ADb{c}}}Hj}{{{f{Bf}}{f{{Db{{An{d}}}}}}}Fh}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Mh{{Kb{Bf}}}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}Eb{{Kb{{Db{D`}}}}}}{{{f{Bf}}{f{{Db{{An{c}}}}}}}{{ADb{c}}}Hj}{cFh{{Gn{}{{B`{{An{d}}}}}}}}{{{F`{c}}ACd}{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}Of{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{F`{c}}ACd}{{AHj{}{{AJn{e}}{AK`{c}}{AKb{g}}}}}{AKd{AKf{e}}}Of{{Fd{}{{B`{e}}}}GnIdIf}}{{ElcACd}{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}Of{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Bf}}{f{Ad}}El}Dj}{{{f{Bf}}dEl}Fh}{{{f{Bf}}{f{Bf}}El}Mh}{{{f{Bf}}{f{{Db{D`}}}}El}Eb}{{{f{Bf}}{f{{Db{D`}}}}El}AIl}{{{f{Bf}}cEl}{{ADb{c}}}Hj}{{ElACd}{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}Of{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Bf}}El}Dj}{{{f{Bf}}El}Fh}{{{f{Bf}}El}Mh}{{{f{Bf}}El}Eb}{{{f{Bf}}El}AIl}{{{f{Bf}}El}{{ADb{c}}}Hj}{{{f{Bf}}El{f{Df}}}Dj}{{{f{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}}El}{{An{c}}}Of{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Ib}}El}{{Af{H`}}}}{{{f{AKl}}El}{{Af{H`}}}}0{{{f{Dj}}El}{{Af{H`}}}}{{{f{Fh}}El}{{Af{H`}}}}{{{f{Mh}}El}{{Af{H`}}}}{{{f{Eb}}El}{{Af{H`}}}}{{{f{AIl}}El}{{Af{H`}}}}{{{f{{ADb{c}}}}El}{{Af{H`}}}Hj}{{{f{Ib}}El}H`}{{{f{AKl}}El}H`}0{{{f{Dj}}El}H`}{{{f{Fh}}El}H`}{{{f{Mh}}El}H`}{{{f{Eb}}El}H`}{{{f{AIl}}El}H`}{{{f{{ADb{c}}}}El}H`Hj}{{{f{Dj}}El}{{An{Ad}}}}{{}Df}00000000000000000000000{{{f{Dj}}}Ad}{{{f{{ADb{c}}}}El}{{An{{f{Hh}}}}}Hj}0{{{f{H`}}}{{An{{f{Bf}}}}}}{{{f{AOf}}El}H`}{{{f{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}}El}{{An{c}}}Of{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Dj}}}El}{{{f{Mh}}}El}{{{f{AIl}}}El}{{{f{Dj}}dd}{{Af{Aj}}}}{{{f{Fh}}dd}{{Af{Aj}}}}{{{f{Mh}}dd}{{Af{Aj}}}}{{{f{Eb}}dd}{{Af{Aj}}}}{{{f{AIl}}dd}{{Af{Aj}}}}{{{f{{ADb{c}}}}dd}{{Af{Aj}}}Hj}{{{f{Dj}}{f{Dj}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Mh}}{f{Bf}}}Fh}{{{f{Mh}}{f{Mh}}}Fh}{{{f{Eb}}{f{Eb}}}Fh}{{{f{Eb}}{f{{Db{D`}}}}}Fh}543201{{{f{H`}}{f{Bhc}}}bAA`}{{{f{ALb}}{f{Bhc}}}bAA`}{{{f{Df}}{f{Bhc}}}bAA`}{{{f{Lb}}{f{Bhc}}}bAA`}{{{f{ALd}}{f{Bhc}}}bAA`}{{{f{ACd}}{f{Bhc}}}bAA`}{{{f{AMl}}{f{Bhc}}}bAA`}{{{f{H`}}{f{Bhc}}d}bAA`}{DfDf}{{}El}0000000000000000000000000000000000{{{f{Dj}}}{{f{Df}}}}{{{f{Df}}}{{An{{f{Df}}}}}}{{{f{ACd}}}{{An{{f{ACd}}}}}}{ce{}{}}0000000000000000000000000000000000{{AOh{An{El}}El}{{Af{Ib}}}}{{AOh{An{El}}El}Ib}{{{f{Dj}}}c{}}{{{f{Fh}}}c{}}{{{f{Mh}}}c{}}{{{f{Eb}}}c{}}{{{f{AIl}}}c{}}{{{f{{ADb{c}}}}}eHj{}}{{AOjDf}{{Af{Jl}}}}{IbAd}{AOhAd}{{Jl{f{Bf}}}Ad}{H`{{Af{H`}}}}{{{f{Df}}}d}00{{{f{H`}}}d}111010111110101011110111101{{{f{ACd}}}d}{{{f{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}}}{{ACn{cgACl}}}Of{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Dj}}}{{`{{Bd{}{{B`{J`}}}}}}}}{{{f{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}}}{{An{c}}}Of{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Df}}}{{f{Df}}}}{{{f{Dj}}{f{Dj}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Mh}}{f{Mh}}}Fh}{{{f{Mh}}{f{Bf}}}Fh}{{{f{Eb}}{f{Eb}}}Fh}{{{f{Eb}}{f{{Db{D`}}}}}Fh}542310{{{f{AKh}}{f{AKh}}}{{Af{{Gj{AKhAKh}}}}}}{{DjDj}{{Af{{Gj{DjDj}}}}}}{{{f{Df}}{f{Df}}}{{Af{d}}}}{{{f{ALb}}}{{An{Df}}}}{{{f{Fh}}}{{An{d}}}}{{{f{Fh}}}Jl}{{{f{Mh}}}Jl}{{{f{Eb}}}Jl}{{{f{Fh}}}{{An{Jn}}}}{{{f{AJd}}}{{An{Hl}}}}{{{f{AJf}}}{{An{Jn}}}}{{{f{AJd}}}Jl}{{{f{AJf}}}Jl}{{{f{Df}}{f{Df}}}{{Af{Df}}}}9876{{{f{Bf}}{f{{Db{D`}}}}ElEl}Fh}{{{f{Ib}}{f{Ib}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAJ`}}}{}}000000{{{f{Mh}}}{{Af{El}}}}{{{f{Eb}}}{{Af{El}}}}{{{f{Lb}}}{{f{AOb}}}}`{{}c{}}00{{{f{Bf}}c}Mh{{Kb{{Db{{f{Bf}}}}}}}}{{{f{Bf}}c}Mh{{Kb{{Db{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Mh{{Kb{{Db{{An{{AJb{Bf}}}}}}}}}}{{{f{Bf}}c}Mh{{Kb{{Db{{AJb{Bf}}}}}}}}{{{f{Bf}}c}Eb{{Kb{{Db{{AJb{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Eb{{Kb{{Db{{f{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Eb{{Kb{{Db{{An{{AJb{{Db{D`}}}}}}}}}}}}{{{f{Bf}}c}Eb{{Kb{{Db{{An{{f{{Db{D`}}}}}}}}}}}}{{{f{Bf}}e}{{ADb{c}}}Hj{{Kb{{Db{{An{c}}}}}}}}{{{f{Bf}}{f{{Db{c}}}}}{{ADb{c}}}Hj}{{DfH`}Jl}{{{f{Bf}}Df}Lb}{{{f{Bf}}}{{ADb{c}}}Hj}{{{f{Dj}}ElEl}Dj}{{{f{Fh}}ElEl}Fh}{{{f{Mh}}ElEl}Mh}{{{f{Eb}}ElEl}Eb}{{{f{AIl}}ElEl}AIl}{{{f{{ADb{c}}}}ElEl}{{ADb{c}}}Hj}{{{f{Bf}}{F`{c}}}{{ADb{c}}}Hj}{{{f{Bf}}{F`{c}}Gh}{{ADb{c}}}Hj}{{{l{c}}}{{AKn{ec}}}BnBn}{Fhc{}}{{{f{Fh}}}c{}}{{{f{Dj}}{f{Dj}}}Fh}{{{f{Fh}}{f{Fh}}}Fh}{{{f{Mh}}{f{Mh}}}Fh}{{{f{Mh}}{f{Bf}}}Fh}{{{f{Eb}}{f{Eb}}}Fh}{{{f{Eb}}{f{{Db{D`}}}}}Fh}542301{{{f{Dj}}}{{Af{{AEn{J`}}}}}}{{{f{Dj}}}{{`{{Ld{}{{B`{{An{Ad}}}}}}}}}}{{{f{Mh}}}{{`{{Ld{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{BhDj}}}{{`{{Lf{}{{B`{{An{Ad}}}}}}}}}}{{{f{Mh}}}{{`{{Lf{}{{B`{{An{{f{Bf}}}}}}}}}}}}{{{f{H`}}{f{H`}}}{{An{AOl}}}}{{{f{ALd}}{f{ALd}}}{{An{AOl}}}}{{{f{Ib}}}{{An{El}}}}{{{f{{AKn{AMdI`}}}}}{{An{El}}}}{{{f{AJd}}JnLh}{{Af{{An{Hl}}}}}}{{{f{AJf}}JnLh}{{Af{{An{Jn}}}}}}{{{f{AJd}}JnLh}{{Af{Jl}}}}{{{f{AJf}}JnLh}{{Af{Jl}}}}{{{f{Bf}}ElJn}{{Af{Fh}}}}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAJ`}}}{}}000000{{{f{Dj}}}Dj}{{{f{Fh}}}Fh}{{{f{Mh}}}Mh}{{{f{Eb}}}Eb}{{{f{AIl}}}AIl}{{{f{{ADb{c}}}}}{{ADb{c}}}Hj}`{{{f{Ib}}}El}{{{f{{AKn{AMdI`}}}}}El}{{{f{Fh}}c{An{d}}}{{Af{Fh}}}{{Gb{}{{B`{Hb}}}}}}{{{f{Mh}}c{An{{f{Bf}}}}}{{Af{Mh}}}{{Gb{}{{B`{Hb}}}}}}{{{f{Eb}}c{An{{f{{Db{D`}}}}}}}{{Af{Eb}}}{{Gb{}{{B`{Hb}}}}}}{{{f{Fh}}ce}{{Af{Fh}}}{{Gb{}{{B`{Hb}}}}}{{Cb{{An{d}}}{{C`{{An{d}}}}}}}}{{{f{Mh}}ce}{{Af{Mh}}}{{Gb{}{{B`{Hb}}}}}{{Cb{{An{{f{Bf}}}}}{{C`{{An{Dh}}}}}}}}{{{f{Eb}}ce}{{Af{Eb}}}{{Gb{}{{B`{Hb}}}}}{{Cb{{An{{f{{Db{D`}}}}}}}{{C`{{An{{F`{D`}}}}}}}}}}{{{f{Fh}}{f{Fh}}{An{d}}}{{Af{Fh}}}}{{{f{Mh}}{f{Fh}}{An{{f{Bf}}}}}{{Af{Mh}}}}{{{f{Eb}}{f{Fh}}{An{{f{{Db{D`}}}}}}}{{Af{Eb}}}}{{{f{BhDj}}}b}{{{f{BhDj}}Df}b}{{{f{BhLb}}AOb}b}{{{f{Dj}}J`}Dj}{{{f{Fh}}J`}Fh}{{{f{Mh}}J`}Mh}{{{f{Eb}}J`}Eb}{{{f{AIl}}J`}AIl}{{{f{{ADb{c}}}}J`}{{ADb{c}}}Hj}{{{f{Dj}}J`{An{{f{Ad}}}}}Dj}{{{f{Fh}}J`{An{d}}}Fh}{{{f{Mh}}J`{An{{f{Bf}}}}}Mh}{{{f{Eb}}J`{An{{f{{Db{D`}}}}}}}Eb}{{{f{AIl}}J`{An{{f{{Db{D`}}}}}}}AIl}{{{f{{ADb{c}}}}J`{An{{Hf{c}}}}}{{l{{Hf{c}}}}}Hj}{{{f{Fh}}d}Fh}{{{f{Mh}}d}Mh}{{{f{Eb}}d}{{l{Cn}}}}{{{f{AIl}}d}AIl}{{{f{Fh}}Dl}{{l{Al}}}}{{{f{Mh}}Dl}{{l{Dd}}}}{{{f{Eb}}Dl}{{l{Cn}}}}{{{f{AIl}}Dl}AIl}{{{f{AJd}}D`}Jl}{{{f{AJf}}D`}Jl}{{{f{H`}}{f{Df}}}{{An{H`}}}}`{{{f{Ib}}{f{Ib}}}c{}}{{{f{{l{c}}}}{f{Ad}}}{{Gd{AdAJ`}}}{}}000000{{{f{Fh}}}{{An{Hb}}}}{{{f{Fh}}}Jl}{{{f{Eb}}}Jl}{{{f{Mh}}{f{c}}}Mh{{Kb{{Db{Hb}}}}Ll}}{{{f{Mh}}{f{Dn}}}Mh}{{{f{Eb}}{f{Dn}}}Eb}{{{f{Eb}}{f{c}}}Eb{{Kb{{Db{Hb}}}}Ll}}{{{f{Df}}d}ACd}{{{f{Lb}}d}ANj}{ALdAMl}{{{f{Df}}{f{Bf}}d}ANj}{ALd{{f{Bf}}}}{{{f{Mh}}El}{{Af{Ad}}}}{{{f{BhDj}}Df}b}{{{f{ACd}}}{{f{ACd}}}}{{{f{Dj}}}{{Af{Md}}}}{{{f{c}}}e{}{}}00000000000000000000000000000{{{f{Df}}}Df}{{{f{ACd}}}AOn}{{{f{c}}}Dh{}}00{{{f{Eb}}}Mh}{{{f{H`}}{f{H`}}}d}{{{f{Dj}}c}{{Af{Dj}}}{{Ch{Cf}{{C`{{Af{Ad}}}}}}}}{{{f{Dj}}e}{{Af{{l{g}}}}}{}{{Ch{{An{Cf}}}{{C`{{Af{{An{c}}}}}}}}Cd}Bn}{g{{Gd{AJhe}}}{}{}{{Gb{}{{B`{{Gd{ce}}}}}}}}0{{ACdg}{{Gd{AJje}}}{}{}{{Gb{}{{B`{{Gd{ce}}}}}}}}0{AMn{{Gd{eg}}}{}{{AJh{c}}AHj}{}}0{{AMnACd}{{Gd{eg}}}{}{{AJj{c}}AHj}{}}0{{{f{H`}}}{{Af{c}}}Jj}{c{{Gd{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000{{{f{H`}}{f{Df}}}{{Af{H`}}}}{{{f{Df}}d}{{Af{ACd}}}}{{{f{Dj}}{f{{l{c}}}}e}{{Af{Dj}}}Bn{{Ch{{An{Cf}}An}{{C`{{Af{{An{Ad}}}}}}}}}}{{{f{c}}}Ml{}}0000000000000000000000000000000000{{{f{ACd}}}ACd}{{{f{Fh}}}{{Af{Fh}}}}{{{f{Mh}}}{{Af{Mh}}}}{{{f{Eb}}}{{Af{Eb}}}}{{{f{{ADb{c}}}}}{{Af{{l{{Hf{c}}}}}}}Hj}{{{f{BhJl}}H`}b}{{{f{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}}El}cOf{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Jl}}}{{f{H`}}}}1{{{f{Df}}H`}d}{{{f{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}}}gOf{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{AJd}}D`}Jl}{{{f{AJf}}D`}Jl}{{{f{Fh}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@`}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@b}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{ANb}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@d}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@f}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@h}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@j}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{B@l}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{AOh}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{AJd}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{AJf}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{Mh}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{Eb}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{AIl}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}{{{f{{ADb{c}}}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}Hj}{{{f{Fh}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@`}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@b}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{ANb}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@d}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@f}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@h}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@j}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{B@l}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{AOh}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{AJd}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{AJf}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{Mh}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{Eb}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{AIl}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}{{{f{{ADb{c}}}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}Hj}{ce{}{}}0000000000000000000000000000000000{Elc{}}0{El{{B@n{ce}}}{}{}}{{{f{{Db{Mn}}}}e}c{}{{N`{{f{Dn}}}{{C`{c}}}}}}{{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}{An{Gh}}}{{AHj{}{{AJn{c}}{AK`{e}}{AKb{g}}}}}Of{AKd{AKf{c}}}{{Fd{}{{B`{c}}}}GnIdIf}}{{{f{Df}}}H`}{{{f{Dj}}{f{{l{c}}}}e}DjBn{{Ch{{An{Cf}}An}{{C`{{An{Ad}}}}}}}}```````````{{{f{c}}h}b{}}{{{f{AKh}}}d}{{AKhd}AKh}{{{f{BhBA`}}{An{{f{Bf}}}}}b}{{{f{BhAKh}}{f{AKh}}}{{Af{b}}}}{{{f{BhBA`}}}b}{{{f{BhBA`}}{f{Bf}}}b}{{{f{AKh}}Dl}Dn}{{{f{c}}}{{f{e}}}{}{}}000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000{{{f{AKh}}{f{AKh}}c}{{Af{AKh}}}AKj}{{{f{AKh}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{AKh}}}AKh}{{{f{c}}{f{Bhe}}}b{}{}}{{}BAb}{El{{f{c}}}{}}000{El{{f{Bhc}}}{}}000{{BA`c}AKh{{Gb{}{{B`{{An{{f{Bf}}}}}}}}}}{Elb}000{{{f{AKh}}}{{f{Df}}}}{{{f{AKh}}{f{Bf}}}c{}}{{{f{AKh}}{f{Mh}}}c{}}{{{f{AKh}}{f{AKh}}}c{}}210{{AKj{f{ANb}}{f{ANb}}}{{Af{ANb}}}}{BA`AKh}{BAb{{K`{BAd}}}}{cc{}}000{{ANb{K`{BAd}}dBAf}AKh}{{ANbBAf}AKh}{{{f{Mh}}{f{AN`}}BAf}{{Af{AKh}}}}{{{f{Bf}}dElBAf}AKh}{{{f{AKh}}El}{{Af{H`}}}}{{{f{AKh}}El}H`}{{{f{AKh}}}{{f{{K`{BAd}}}}}};<=;=<{{}El}000{ce{}{}}0000{AKhAd}{{{f{AKh}}}d}0{{{f{AKh}}}BAh}{{{f{AKh}}}El}{{{f{AKh}}{f{AKh}}}c{}}{{{f{AKh}}{f{Bf}}}c{}}{{{f{AKh}}{f{Mh}}}c{}}210{{{f{AKh}}{f{AKh}}}{{Af{{Gj{AKhAKh}}}}}}{{DjDj}{{Af{{Gj{DjDj}}}}}}{{{f{AKh}}}Jl}{{{f{BhBAb}}{f{{K`{BAd}}}}}{{Af{b}}}}1{{{f{AKh}}}{{Af{El}}}}{{{f{AKh}}}{{f{Bf}}}}{{{f{Bf}}ElBAf}BA`}{{{K`{BAd}}}BAb}{{{f{BhBAh}}}{{An{c}}}{}};9:;:9<{{{f{AKh}}}{{f{ANb}}}}{{{f{BhBA`}}{f{Bf}}}{{Gj{Kjd}}}}`{{{f{BAh}}}{{Gj{El{An{El}}}}}}{{{f{AKh}}d}AKh}{{{f{AKh}}Dl}AKh}`{{{f{AKh}}dd}En}{{{f{AKh}}{f{AN`}}BAj}AKh}{{{f{AKh}}}{{Af{AKh}}}}{{{f{AKh}}}AKh}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0000000{{{f{c}}}Ml{}}0004{{{f{AKh}}}d}{{{f{AKh}}}{{Af{BAl}}}}{ce{}{}}000``````{{{f{c}}h}b{}}0{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{AN`BAd}{{{f{BAf}}}BAf}{{{f{BAd}}}BAd}{{{f{c}}{f{Bhe}}}b{}{}}0{{}BAf}{{}BAd}{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0{Elb}0{{{f{BAf}}{f{BAf}}}d}{{{f{BAd}}{f{Bf}}}{{An{Kj}}}}{{{f{BAf}}{f{BhFj}}}Fl}{{{f{BAd}}{f{BhFj}}}Fl}{cc{}}0{{{f{BAd}}Kj}{{f{Bf}}}}{{{f{BAd}}}{{f{AN`}}}}{{{f{BAd}}Kj}{{An{{f{Bf}}}}}}{{}El}0{ce{}{}}0{{{f{BAd}}}d}0{{{f{BAd}}}El}{{{f{BAd}}{f{BAd}}}d}{{{f{c}}}e{}{}}0{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}066`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{}BAn}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{{}b}{{{f{BhBAn}}}b}{Elb}2{cc{}}6{{}El}{ce{}{}}<<;{{}d}1```````660````````````````````````{{{f{BB`}}}{{f{Bf}}}}<<;;`9{{{f{BB`}}}f}:9966`{{{f{BBb}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{BB`}}{f{BhFj}}}{{Gd{bANd}}}}07{cBB`{{ANh{{AJb{Bf}}}}}}8{{}{{Jd{{f{Bf}}BBb}{{C`{b}}}}}}8877{cAJ`AHn}````{{{Jd{{f{Bf}}BBb}{{C`{b}}}}}b}{cAJ`BBd}{{{f{c}}}Dh{}}{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}0==``````````````````{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BBf}}}BBf}{{{f{c}}{f{Bhe}}}b{}{}}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{BhFj}}BBhEl}Fl}{cc{}}{{}BBj}{{}BBf}{{}{{An{El}}}}{{}Dh}{{}d}{{}El}{ce{}{}}{{{An{BBj}}}b}{BBfb}{{{An{El}}}b}2{{{An{d}}}b}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}7```````````{{{f{c}}h}b{}}00{{{f{BhBAl}}{F`{Ad}}{f{BBl}}}{{Af{b}}}}{{{f{BAl}}{f{Cb}}}{{F`{Ad}}}}0{{{f{BAl}}{f{Fh}}}{{Af{BAl}}}}{{{f{BAl}}{f{{Db{AOb}}}}}{{Af{BAl}}}}0{{{f{BAl}}J`El}BAl}{{{f{BAl}}{f{BAl}}}c{}}{{BAl{f{Ad}}}c{}}{{{f{BAl}}{f{Ad}}}c{}}{{{f{BhBAl}}}{{f{BhBAl}}}}{{{f{BhBAl}}{f{Bf}}e}{{Af{{f{BhBAl}}}}}BBn{{N`{{f{Ad}}}{{C`{c}}}}}}{{{f{BhBAl}}Ele}{{Af{{f{BhBAl}}}}}BBn{{N`{{f{Ad}}}{{C`{c}}}}}}22{{{f{c}}}{{f{e}}}{}{}}0000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000{{{f{BAl}}}{{`{{Bd{}{{B`{El}}}}}}}}{{{f{BAl}}}BAl}{{{f{BC`}}}BC`}{{{f{BCb}}}BCb}2{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{BAl}}{f{Bf}}}{{Af{{f{Ad}}}}}}{{{f{BAl}}e}{{Af{{F`{{f{Ad}}}}}}}{{Kb{Bf}}}{{Gb{}{{B`{c}}}}}}{{}BCb}{{}BAl}{El{{f{c}}}{}}0000{El{{f{Bhc}}}{}}0000{{BAl{f{Ad}}}c{}}{{{f{BAl}}{f{Ad}}}c{}}{{{f{BAl}}{f{BAl}}}c{}}{Elb}0000{{{f{BAl}}{f{Bf}}}{{Af{BAl}}}}{{{f{BhBAl}}{f{Bf}}}{{Af{Ad}}}}{{{f{BAl}}{f{{Db{c}}}}}BAl{{Kb{Bf}}}}{{{f{BAl}}{f{{BCd{{f{Bf}}}}}}}BAl}{{{f{BAl}}{An{{f{{Db{c}}}}}}}{{Af{BAl}}}{{Kb{Bf}}}}{{{f{BAl}}}{{F`{Df}}}}<{{{f{BCb}}{f{BCb}}}d}{{{f{BAl}}{f{BAl}}}d}00{{{f{c}}{f{e}}}d{}{}}00{{{f{BAl}}}El}`{{{f{BAl}}e}{{Af{BAl}}}{{Kb{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{BAl}}{F`{Ad}}}{{Af{BAl}}}}{{{f{BhBAl}}{f{BAl}}}{{Af{b}}}}{{{f{BAl}}}{{F`{Lb}}}}{{{f{BAl}}AEh}{{Af{BAl}}}}{{{f{BAl}}{f{Fh}}}{{Af{BAl}}}}{{{f{BC`}}{f{BhFj}}}Fl}{{{f{BCb}}{f{BhFj}}}Fl}{{{f{BAl}}{f{BhFj}}}Fl}0{cc{}}000{{{f{BCf}}}BAl}{{{f{BBl}}}BAl}2{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{cBAl{{Gb{}{{B`{Ad}}}}}}{{{f{{Db{BCh}}}}}{{Af{BAl}}}}{{{f{{Db{BCh}}}}{f{BBl}}}{{Af{BAl}}}}{{c{f{BBl}}}{{Af{BAl}}}{{Bd{}{{B`{{f{BCh}}}}}}}}{{{f{BAl}}El}{{An{{F`{H`}}}}}}{{{f{BAl}}{f{Bf}}}{{An{El}}}}{{{f{BAl}}}{{F`{{f{Bf}}}}}}{{{f{BAl}}}{{F`{AOb}}}}{{{f{BAl}}}{{f{{Db{Ad}}}}}}{{{f{BhBAl}}}{{f{Bh{F`{Ad}}}}}}{{{f{BAl}}El}{{Af{BCh}}}}{{{f{BAl}}El{f{BhBCh}}}{{Af{b}}}}{{{f{BAl}}El{f{BhBCh}}}b}{{{f{BAl}}}{{An{{Af{Df}}}}}}`{{{f{BAl}}e}{{Af{BCj}}}{{Kb{Bf}}}{{Gb{}{{B`{c}}}}}}0{{{f{BAl}}{F`{Ad}}dd}{{Af{BCj}}}}{{{f{BCb}}{f{Bhc}}}bAA`}{{{f{BhBAl}}{An{M`}}}{{Af{B@d}}}}{{{f{BAl}}{An{El}}}BAl}{{{f{BAl}}}El}{{{f{BAl}}{f{{Db{Ad}}}}}{{Af{BAl}}}}{{{f{BhBAl}}{f{{Db{Ad}}}}}{{Af{{f{BhBAl}}}}}}{{{f{BhBAl}}{f{{Db{Ad}}}}}{{f{BhBAl}}}}{{{f{BAl}}{BCl{El}}}{{f{c}}}{}}{{{f{BAl}}{BCn{El}}}{{f{c}}}{}}{{{f{BAl}}{f{Bf}}}{{f{c}}}{}}{{{f{BAl}}{Kl{El}}}{{f{c}}}{}}{{{f{BAl}}El}{{f{c}}}{}}{{{f{BAl}}{BD`{El}}}{{f{c}}}{}}{{{f{BAl}}{BDb{El}}}{{f{c}}}{}}{{{f{BAl}}BDd}{{f{c}}}{}}{{}El}0000{{{f{BhBAl}}Elc}{{Af{{f{BhBAl}}}}}BBn}{ce{}{}}000000{{{f{BAl}}}{{Af{Fh}}}}{{{f{BAl}}}d}1{{{f{BAl}}}{{Jb{Ad}}}}{{{f{BAl}}}{{`{{Bd{}{{B`{BAl}}}}}}}}{{{f{BAl}}dd}BDf}{{{f{BAl}}}BDh}{{{f{BAl}}}El}{{{f{BAl}}}{{Af{{An{Ad}}}}}}{{{f{BAl}}BC`}{{Af{{An{Ad}}}}}}{{{f{BAl}}ce}{{Af{BAl}}}{{BDj{AOb}}}{{BDj{AOb}}}}{{{f{BAl}}BDl}{{Af{BAl}}}}3{{BAl{f{Ad}}}c{}}{{{f{BAl}}{f{BAl}}}c{}}{{{f{BAl}}{f{Ad}}}c{}}77{{{F`{c}}}{{Af{BAl}}}BBn}{{{F`{Ad}}}BAl}{{{F`{Ad}}}{{Af{BAl}}}}{{{f{BhBDf}}}{{An{c}}}{}}{{{f{BhBDh}}}{{An{c}}}{}}{{{f{BAl}}}BAl}{{{f{BAl}}cd}{{Af{{F`{BAl}}}}}{{BDj{Dh}}}}0{{BAle}{{Af{c}}}{}{{Cb{BAl}{{C`{{Af{c}}}}}}}}{{{f{BhBAl}}e}{{Af{c}}}{}{{Cb{{f{BhBAl}}}{{C`{{Af{c}}}}}}}}{{BAlgc}{{Af{e}}}{}{}{{Cb{BAlc}{{C`{{Af{e}}}}}}}}{{{f{BhBAl}}}{{An{Ad}}}}{{{f{BAl}}{f{BAl}}}d}><={{{f{BhBAl}}{f{Bf}}{f{Bf}}}{{Af{{f{BhBAl}}}}}}{{{f{BhBAl}}{f{Bf}}c}{{Af{{f{BhBAl}}}}}BBn}{{{f{BhBAl}}Elc}{{Af{{f{BhBAl}}}}}BBn}19`{{{f{BAl}}{f{Ad}}dd{An{Hn}}}{{Af{BAl}}}}0{{{f{BAl}}Eldd{An{Hn}}}{{Af{BAl}}}}{{{f{BAl}}}BBl}{{{f{BAl}}{f{BAl}}}{{Af{b}}}}{{{f{BAl}}e}{{Af{BAl}}}{{Kb{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{BAl}}El}{{An{{f{Ad}}}}}}{{{f{BAl}}c}{{Af{BAl}}}{{BDn{El}}}}2{{{f{BAl}}c}{{Af{{F`{Ad}}}}}{{BDj{AOb}}}}{{{f{BAl}}e{f{BE`}}}{{Af{BAl}}}{{Kb{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{BAl}}e{f{BBl}}}{{Af{BAl}}}{{Kb{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{BhBAl}}{f{{Db{c}}}}}{{Af{b}}}{{Kb{Bf}}}}{{{f{BAl}}}{{Gj{ElEl}}}}{{{f{BAl}}J`}BAl}{{{f{BAl}}}d}{{{f{BhBAl}}}b}{{{f{BDf}}}{{Gj{El{An{El}}}}}}{{{f{BDh}}}{{Gj{El{An{El}}}}}}{{{f{BAl}}J`El}BAl}00{{{f{BAl}}cE`}{{Af{BAl}}}{{BDj{AOb}}}}{{{f{BhBAl}}cE`}{{Af{{f{BhBAl}}}}}{{BDj{AOb}}}}{{{f{BAl}}J`}{{Gj{BAlBAl}}}}0{{{f{BhBAl}}}{{`{{Bd{}{{B`{BAl}}}}}}}}{{BAlEld}{{F`{BAl}}}}{{{f{BAl}}{f{BAl}}}c{}}{{{f{BAl}}{f{Ad}}}c{}}{{BAl{f{Ad}}}c{}}{{{f{BAl}}BC`}{{Af{{An{Ad}}}}}}{{{f{BAl}}{An{El}}}BAl}{{{f{BAl}}{f{Dn}}}{{Af{BAl}}}}{{{f{BAl}}{f{Dn}}}BAl}{{{f{BAl}}{f{Dn}}d}BAl}{{{f{BAl}}BEb}{{Af{Md}}}}{{{f{c}}}e{}{}}00{{{f{c}}}Dh{}}{{{f{BAl}}ElcE`}{{Af{BAl}}}{{BDj{AOb}}}}{{{f{BhBAl}}{An{{f{Bf}}}}{An{{Mj{Dh{F`{Dh}}}}}}}{{Af{BAl}}}}{{{f{BhBAl}}{f{Bf}}e}{{Af{{f{BhBAl}}}}}BBn{{N`{{f{Ad}}}{{C`{{Af{c}}}}}}}}{{{f{BhBAl}}Ele}{{Af{{f{BhBAl}}}}}BBn{{N`{{f{Ad}}}{{C`{{Af{c}}}}}}}}{c{{Gd{e}}}{}{}}000{BEd{{Af{BAl}}}}{{{Gj{BEf{f{{Db{ANj}}}}}}}{{Af{BAl}}}}2{{c{f{BBl}}}{{Af{BAl}}}{{Bd{}{{B`{{Af{{f{BCh}}}}}}}}}}{{{f{BAl}}{f{Bf}}}{{Af{El}}}}44444{{{f{c}}}Ml{}}0000{{{f{BAl}}{An{{f{{Db{Dh}}}}}}BCb{An{{Gj{J`El}}}}}{{Af{BAl}}}}{{{f{BAl}}d{An{{f{{Db{Dh}}}}}}BCb{An{{Gj{J`El}}}}}{{Af{BAl}}}}1{{{f{BAl}}{f{BAl}}}{{Af{BAl}}}}{{{f{BhBAl}}{f{BAl}}}{{Af{{f{BhBAl}}}}}}{ce{}{}}0000{{{f{BAl}}}El}{{{f{BhBAl}}c}{{Af{{f{BhBAl}}}}}BBn}{{{f{BhBAl}}c{f{BBl}}}{{Af{{f{BhBAl}}}}}BBn}{{{f{BhBAl}}Ad}{{f{BhBAl}}}}{{{f{BAl}}{f{Bf}}{An{Hb}}}{{Af{BAl}}}}{{{f{BhBAl}}{f{Bf}}{An{Hb}}}{{f{BhBAl}}}}`{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BDl}}}BDl}{{{f{c}}{f{Bhe}}}b{}{}}{{}BDl}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{BDl}}{f{BDl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BDl}}{f{BhFj}}}Fl}{cc{}}{{{f{BDl}}{f{Bhc}}}bAA`}`{{}El}{ce{}{}}`{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}```3````````````````````````````````{{{f{c}}h}b{}}000{{{f{BCj}}}{{Af{BAl}}}}`{{{f{BEh}}}{{f{{Db{BEj}}}}}}{{{f{BCj}}c}{{Af{BAl}}}{{Ch{BAl}{{C`{{Af{BAl}}}}}}IdIf}}{{{f{Aj}}}Dj}{{{f{c}}}{{f{e}}}{}{}}0000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}0000000{{{f{BEh}}}BEh}{{{f{Aj}}}Aj}{{{f{BCj}}}BCj}{{{f{BEl}}}BEl}{{{f{c}}{f{Bhe}}}b{}{}}000:{{}BEh}{{}Aj}{El{{f{c}}}{}}000{{{f{BEn}}}{{f{c}}}{}}1111{El{{f{Bhc}}}{}}0000000`{{BF`e}{}{}{{BFb{c}}}}{Elb}0000{{{f{BhBEh}}}b}111{{{f{BEh}}{f{BEh}}}d}{{{f{Aj}}{f{Aj}}}d}{{{f{c}}{f{e}}}d{}{}}00000`{{{f{BFd}}}Hb}{{{f{BEh}}}{{f{{Db{Hb}}}}}}{{{f{BCj}}}{{Af{BAl}}}}{{{f{BhBEh}}}{{f{Bh{F`{Hb}}}}}}{{{f{BEh}}{f{BhFj}}}Fl}{{{f{Aj}}{f{BhFj}}}Fl}{{{f{BCj}}{f{BhFj}}}Fl}{{{f{BEl}}{f{BhFj}}}Fl}0{{{f{Bf}}BEl}Dh}{cc{}}000{{{F`{BFf}}}BEh}{{{F`{{Gj{{F`{Hb}}{F`{BEj}}}}}}}BEh}2{{{F`{{F`{BFf}}}}}BEh}3{BEhAj}44{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{cBEh{{Gb{}{{B`{BFf}}}}}}{cBEh{{Gl{}{{B`{BFf}}}}}}{{{f{Aj}}El}BFd}{{{f{BCj}}}{{f{Aj}}}}{{{f{BhBCj}}}{{f{BhAj}}}}{{{f{Aj}}}Dn}{{{f{BFh}}dd}{{Af{Aj}}}}0{{{f{BCj}}}{{Af{BAl}}}}{{{f{BhAj}}}{{f{BhBEh}}}}{{}El}0000000{ce{}{}}0000000{AjBEh}1{BEhc{}}{{{f{BEh}}}c{}}301{{{f{BFd}}}d}{{{f{Aj}}}d}{{{f{BEh}}}d}{{{f{BEh}}}{{BFl{{BFj{{Jb{Hb}}}}{Jb{BEj}}}}}}{{{f{Aj}}}BFn}{{{f{BCj}}}{{F`{Ad}}}}{{{f{BCj}}{An{{Gj{J`El}}}}}{{F`{Ad}}}}={{{f{BFd}}}El}{{{f{Aj}}}El}?????{{{F`{Hb}}{F`{BEj}}d}BEh}{{{f{BAl}}{F`{Ad}}Aj{An{{F`{Dh}}}}}BCj}{{{f{BhBFn}}}{{An{c}}}{}}{{{f{BhBFn}}El}{{An{c}}}{}}{{{f{BCj}}c}{{Af{BAl}}}{{Cb{BAl}{{C`{{Af{BAl}}}}}}IdIf}}{{{f{c}}}{}{}}{{{f{Aj}}}BF`}{{{f{BCj}}JnLh}{{Af{BAl}}}}{{BCje}BCj{{Kb{Bf}}}{{Gb{}{{B`{c}}}}}}{{{f{Aj}}J`El}BEn}{{{f{BhBEh}}}b}{{{f{BhAj}}}b}{{{f{BCj}}D`}{{Af{BAl}}}}{{{f{BCj}}}{{Af{BAl}}}}{Aj{{F`{Hb}}}}0{BCjAj}{{{f{BhBCj}}}Aj}{{{f{c}}}e{}{}}000{{{f{c}}}Dh{}}{c{{Gd{e}}}{}{}}000000000000000{{{f{c}}}Ml{}}0000000{AjAj}{{{f{Aj}}}{{f{BEh}}}}{{{f{Aj}}}{{f{BG`}}}};{ce{}{}}0000000`````{{{f{BEh}}c}Ad{{Cb{{Gj{Hb{f{BEj}}}}}{{C`{An}}}}IdIf}}{{{f{BEh}}c}Ad{{Cb{{Gj{Hb{f{BEj}}}}}{{C`{}}}}IdIf}}{{{f{{Db{{BGb{Hb}}}}}}c}Ad{{Cb{{BGb{Hb}}}{{C`{An}}}}IdIf}}{{{f{{Db{{BGb{Hb}}}}}}c}Ad{{Cb{{BGb{Hb}}}{{C`{}}}}IdIf}}{{{f{{Db{c}}}}eBGd}{{AIb{c}}}{BGfBGh}{{Bd{}{{B`{{Gj{HbHb}}}}}}Gn}}{{{f{{Db{c}}}}{f{Gh}}eBGd}{{AIb{c}}}{BGfBGh}{{Bd{}{{B`{{Gj{HbHb}}}}}}Gn}}{{{f{{l{c}}}}HbHb}{{l{c}}}Bn}{{{f{BG`}}{f{{Db{En}}}}}d}{{{f{BGj}}{f{Aj}}}Ad}{{BGlBGl}BGl}0`{{{f{BGn}}{f{BAl}}{f{Aj}}}{{Af{Ad}}}}{{{f{BGn}}}{{Af{{f{Bf}}}}}}```````````````````````{{{f{c}}h}b{}}00{{{f{BhBH`}}H`}{{An{b}}}}{{{f{BhBHb}}{f{H`}}}b}0{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BH`}}}BH`}{{{f{BHb}}}BHb}{{{f{BCh}}}BCh}{{{f{c}}{f{Bhe}}}b{}{}}00{{{f{{Db{c}}}}}Df{{AO`{Df}}}}{{}BCh}{El{{f{c}}}{}}00{El{{f{Bhc}}}{}}00{Elb}00{{{f{BCh}}{f{BCh}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BCh}}{f{BhFj}}}Fl}{cc{}}{{{Gj{{f{Df}}El}}}BH`}{{{Gj{{f{Df}}El}}}BHb}22{{eEl}BBl{{ANh{Df}}}{{Bd{}{{B`{{F`{{Gj{Dhc}}}}}}}}}}{{}El}00{ce{}{}}00{BH`Ad}{BHbAd}{{{f{Df}}El}BH`}{{{f{Df}}El}BHb}{{{F`{H`}}}BCh}{{{f{BhBH`}}El}Ad}{{{f{BhBHb}}El}Ad}{{{f{{Db{BCh}}}}{An{El}}}{{Af{BBl}}}}0{{{f{{Db{BCh}}}}{An{El}}}{{Af{{F`{Df}}}}}}{{{f{c}}}e{}{}}00{c{{Gd{e}}}{}{}}00000{{{f{c}}}Ml{}}00<<<{{{f{{Db{BAl}}}}}{{Af{BAl}}}}0`````{{HnHn}Hn}{{{f{{Db{BAl}}}}{An{M`}}}{{Af{{Gj{{F`{B@d}}M`}}}}}}{{{f{{BHd{J`}}}}M`{f{Bh{F`{Hn}}}}}b}{{{f{c}}}{{f{e}}}{}{}}0{{{f{Bhc}}}{{f{Bhe}}}{}{}}0{{}BHf}{El{{f{c}}}{}}0{El{{f{Bhc}}}{}}0{Elb}0{{{f{BHf}}}Hn}{{{f{BHh}}{f{BhFj}}}Fl}{cc{}}0{{{f{BHh}}{f{Bhc}}}bAA`}``{{}El}0{ce{}{}}0{{{f{Bh{BHj{BHhce}}}}HbHn{f{BAl}}gi}b{}BHl{{Cb{}{{C`{c}}}}}{{Ch{{f{Bhc}}}}}}{c{{Gd{e}}}{}{}}000{{{f{c}}}Ml{}}0{{{f{BHn}}M`{f{Bh{F`{Hn}}}}}{{Af{b}}}}0{{{f{BHn}}M`{f{Bh{Db{Hn}}}}}{{Af{b}}}}055{{{f{BhBHf}}{f{{Db{D`}}}}}b}{{{f{BhBHf}}L`}b}{{{f{BhBHf}}J`}b}{{{f{BhBHf}}Kj}b}{{{f{BhBHf}}Hn}b}```````````````````````````````````````````````````````````````````````````````````````````````````````````{{{f{c}}h}b{}}0000000000{{{f{{K`{ce}}}}}{{f{e}}}{}BI`}{{{f{{K`{c}}}}}BIb{BIdLl}}{{{f{{K`{ce}}}}}{}LlBI`}{{{f{{K`{c}}}}}L`BIf}{{{f{{K`{ce}}}}}{{f{c}}}LlBI`}{{{K`{{Db{{BIh{c}}}}e}}}{{K`{{Db{c}}e}}}{}BI`}{{{K`{{BIh{c}}e}}}{{K`{ce}}}{}BI`}{{{f{c}}}{{f{e}}}{}{}}0003000000000{{{f{Bhc}}}{{f{Bhe}}}{}{}}000000000000{{{f{AKh}}{f{AKh}}c}{{Af{AKh}}}AKj}{{{f{{K`{c}}}}}{{An{{f{AHn}}}}}{AHnLl}}`{{{f{BIj}}{f{Ad}}}{{Af{Ad}}}}{{{f{BIj}}c}{{Af{Ad}}}Ab}{{{f{Mn}}}Mn}{{{f{BIl}}}BIl}{{{f{{K`{ce}}}}}{{K`{ce}}}Ll{BI`Of}}{{{f{Lj}}}Lj}{{{f{BEb}}}BEb}{{{f{ANj}}}ANj}{{{f{BCf}}}BCf}{{{f{Lh}}}Lh}{{{f{BIn}}}BIn}{{{f{BJ`}}}BJ`}{{{f{BJb}}}BJb}{{{f{c}}{f{Bhe}}}b{}{}}0000000000{{{f{{K`{ce}}}}{f{{K`{ce}}}}}AOl{BJdLl}BI`}{AMne{}{{AJh{c}}AHj}}0{{AMnACd}e{}{{AJj{c}}AHj}}0{{{f{c}}{f{e}}}AOl{}{}}{{AJ`BB`}AJ`}{AJ`AJ`}{{{f{Fn}}{f{ACd}}}{{A@n{Fn}}}}{{{f{ANj}}}{{f{ACd}}}}```{{}b}{cbBI`}{{}{{K`{Bf}}}}{{}{{K`{BJf}}}}{{}{{K`{{Db{c}}}}}{}}{{}{{K`{c}}}BJh}{{}Lj}{{}BEb}{{}ANj}{{}BCf}{{}Lh}`{El{{f{c}}}{}}000{{{f{{K`{ce}}}}}{{f{c}}}LlBI`}111111111{El{{f{Bhc}}}{}}000000000000{{{f{{K`{c}}}}}{{f{Bf}}}{AHnLl}}`{{{K`{ACfc}}}{{Gd{{K`{ec}}{K`{ACfc}}}}}BI`{ACfIdIf}}{{{K`{ACfc}}}{{K`{ec}}}BI`{ACfIdIf}}{{{f{{K`{ce}}}}}{{BJj{ce}}}Ll{OfBI`}}{Elb}000{{{f{Bh{K`{ce}}}}}bLlBI`}111111111{{{f{Mn}}{f{Mn}}}d}{{{f{{K`{BJl}}}}{f{BJl}}}d}{{{f{{K`{Fn}}}}{f{Fn}}}d}{{{f{{K`{ce}}}}{f{{K`{ce}}}}}d{BJnLl}BI`}{{{f{Lj}}{f{Lj}}}d}{{{f{BEb}}{f{BEb}}}d}{{{f{ANj}}{f{ANj}}}d}{{{f{BCf}}{f{BCf}}}d}{{{f{Lh}}{f{Lh}}}d}{{{f{BJb}}{f{BJb}}}d}{{{f{c}}{f{e}}}d{}{}}00000000000000000000{BIl{{Gj{KjKj}}}}`{{BCfc}BCf{{Cb{El{f{ANj}}}{{C`{d}}}}}}{{AKj{f{ANb}}{f{ANb}}}{{Af{ANb}}}}{{{f{Bh{K`{ABl}}}}}{{Gd{bBK`}}}}{{{f{AJ`}}{f{BhFj}}}{{Gd{bANd}}}}0{{{f{Mn}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{BIl}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{{K`{ce}}}}{f{BhFj}}}{{Gd{bANd}}}{AChLl}BI`}{{{f{{K`{ce}}}}{f{BhFj}}}{{Gd{bANd}}}{BBdLl}BI`}{{{f{{K`{ce}}}}{f{BhFj}}}{{Gd{bANd}}}LlBI`}{{{f{Lj}}{f{BhFj}}}Fl}{{{f{BEb}}{f{BhFj}}}Fl}{{{f{ANj}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{BCf}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{Lh}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{BIn}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{BJ`}}{f{BhFj}}}{{Gd{bANd}}}}{{{f{BJb}}{f{BhFj}}}{{Gd{bANd}}}}`{BK`AJ`}{cc{}}{BKbAJ`}{BKdAJ`}{BKfAJ`}{KjMn}44{BKh{{K`{BKj}}}}{{{f{Bf}}}{{K`{Bf}}}}{{{AJb{c}}}{{K`{c}}}{BKlLl}}{c{{K`{c}}}{}}{{{A@n{ce}}}{{K`{ce}}}LlBI`}{{{f{BKn}}}{{K`{BKn}}}}{{{BGb{c}}}{{K`{{Db{c}}}}}{}}{{{f{{Db{c}}}}}{{K`{{Db{c}}}}}Of}{{{f{BKj}}}{{K`{BKj}}}}{BL`{{K`{BJf}}}}{BLbc{}}{{{K`{Bf}}}{{K`{{Db{D`}}}}}}{cc{}}{Dh{{K`{Bf}}}}{{{F`{ce}}}{{K`{{Db{c}}e}}}{}{BI`Of}}{{{f{BJf}}}{{K`{BJf}}}}{BLd{{K`{BKn}}}}4444{{{F`{ANj}}}BCf}55555{{c{An{Gh}}}BLf{}}{{{BLh{J`}}{BLh{D`}}{An{Gh}}}BLj}{{{BLh{J`}}{BLh{D`}}{An{Gh}}}BLl}{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{e{{K`{{Db{c}}}}}{}{{Gb{}{{B`{c}}}}}}{{gEl}{{BLn{J`}}}Kb{{Gb{}{{B`{{An{c}}}}}}}{{Gb{}{{B`{{An{e}}}}}}}}0{e{{BLn{J`}}}{{Gb{}{{B`{{An{d}}}}}}}{{Gb{}{{B`{{An{c}}}}}}}}{{gACd}{{BLn{J`}}}BGh{{Gb{}{{B`{{An{c}}}}}}}{{Gb{}{{B`{{An{e}}}}}}}}2{e{{K`{{Db{c}}}}}Id{{Gl{}{{B`{c}}}}}}{{}{{K`{c}}}Ll}{c{{K`{ec}}}BI`Ll}{{{f{Bf}}}{{Gd{BM`}}}}{{{f{Bf}}c}BMb{}}{{{f{{K`{ce}}}}{f{{K`{ce}}}}}d{BMdLl}BI`}{{{f{Bh{K`{ce}}}}}{{An{{f{Bhc}}}}}LlBI`}{{{f{Bh{K`{ce}}}}}{{f{Bhc}}}LlBI`}{{{f{BCf}}}{{F`{{f{Bf}}}}}}{{{f{En}}El}H`}4{{{f{BMf}}}d}{{{f{{K`{ce}}}}{f{Bhg}}}b{BMhLl}BI`AA`}{{{f{BEb}}{f{Bhc}}}bAA`}{{{f{ANj}}{f{Bhc}}}bAA`}{{{f{Lh}}{f{Bhc}}}bAA`}{{{f{BJb}}{f{Bhc}}}bAA`}{{{f{Mn}}}Kj}{{}b}{cb{OfBI`}}{{{f{BCf}}{f{Bf}}}{{An{El}}}}{{{f{{Db{Kj}}}}}{{`{{Bd{}{{B`{El}}}}}}}}{{}El}000000000000`{{{f{BhBIl}}}{{f{BhHn}}}}`{ce{}{}}000000000000{{{K`{ce}}}{{An{c}}}{}BI`}{{{K`{ce}}}{}LlBI`}{{{K`{ce}}}{{Gj{e}}}LlBI`}{{{K`{BMj}}}Ad}{{{f{BCf}}}d}{{{f{BIl}}}d}{{{f{Mn}}}d}`{{{f{{K`{ABl}}}}}d}{{{f{c}}}d{}}1{{{f{{K`{ce}}}}{f{{K`{ce}}}}}d{BMdLl}BI`}{{{f{BCf}}}El}`1{{{f{AKh}}{f{AKh}}}{{Af{{Gj{AKhAKh}}}}}}{{DjDj}{{Af{{Gj{DjDj}}}}}}{{{f{Bh{K`{ce}}}}}{{f{Bhc}}}Of{BI`Of}}{{{f{BMl}}}Jl}0{{{f{BMn}}}Jl}```11`{{{f{{K`{ce}}}}{f{{K`{ce}}}}}d{BJnLl}BI`}{{BN`El}{{An{El}}}}{{{f{Bf}}c}BNb{}}{c{{K`{c}}}{}}{{cACdd}ANj{{ANh{Dh}}}}{e{{K`{c}}}{}{{N`{{f{{BJj{c}}}}}{{C`{c}}}}}}{{ce}{{K`{ce}}}{}BI`}{{}{{K`{{BIh{c}}}}}{}}{c{{K`{{BIh{e}}c}}}BI`{}}{El{{K`{{Db{{BIh{c}}}}}}}{}}{{Elc}{{K`{{Db{{BIh{e}}}}c}}}BI`{}}3210`{{}Mn}{{}BIl}{{{f{{K`{ce}}}}{f{{K`{ce}}}}}{{An{AOl}}}{BMdLl}BI`}{c{{BNd{{K`{c}}}}}{}}{{ce}{{BNd{{K`{ce}}}}}{}BI`}`````{{{f{BMl}}}Jl}0{{{f{{K`{c}}}}{f{BhBNf}}}b{AHnLl}}{{{f{{K`{ce}}}}{f{{K`{ce}}}}}dLlBI`}{{{f{BMn}}JnLh}{{Af{Jl}}}}{{{f{Bh{K`{ABl}}}}{f{Bh{Db{D`}}}}}{{Gd{ElBK`}}}}{{{f{Bh{K`{ABl}}}}BNh}{{Gd{bBK`}}}}{{{f{Bh{K`{ABl}}}}{f{Bh{F`{D`}}}}}{{Gd{ElBK`}}}}{{{f{Bh{K`{ABl}}}}{f{BhDh}}}{{Gd{ElBK`}}}}{{{f{Bh{K`{ABl}}}}{f{Bh{Db{BNj}}}}}{{Gd{ElBK`}}}}`{{{f{Bh{K`{ABl}}}}BNl}{{Gd{HnBK`}}}}`{{{f{AIf}}ElEl}AIf}0{{{f{{K`{c}}}}}{{An{{f{AHn}}}}}{AHnLl}}{{{f{BNn}}D`}Jl}{{KjKj}BIl}`{{{f{{K`{ce}}}}}ElLlBI`}>>{{{f{Mn}}}{{An{Kj}}}}{{{f{c}}}e{}{}}0000000000{{{f{c}}}Dh{}}0{AMn{{Gd{eg}}}{}{{AJh{c}}AHj}{}}0{{AMnACd}{{Gd{eg}}}{}{{AJj{c}}AHj}{}}0{c{{Gd{e}}}{}{}}000{{{K`{{Db{c}}e}}}{{Gd{{K`{{BGb{c}}e}}}}}{}BI`}1111111111111111111111{{BN`El}{{Gd{ElAJ`}}}}{c{{Gd{{K`{c}}BO`}}}{}}{{ce}{{Gd{{K`{ce}}BO`}}}{}BI`}{{}{{Gd{{K`{{BIh{c}}}}BO`}}}{}}{c{{Gd{{K`{{BIh{e}}c}}BO`}}}BI`{}}10{c{{Gd{{BNd{{K`{c}}}}BO`}}}{}}{{ce}{{Gd{{BNd{{K`{ce}}}}BO`}}}{}BI`}{{{K`{ce}}}{{Gd{c{K`{ce}}}}}{}BI`}{{{f{c}}}Ml{}}000000000000{{{K`{ce}}}cOfBI`}`{{{f{BNn}}D`}Jl}{ce{}{}}000000000000{{{f{{K`{ce}}}}}ElLlBI`}``{{ANj{BOb{DhDh}}}ANj}{{BCf{BOb{DhDh}}}BCf}{{{f{Bh{K`{ABl}}}}{f{{Db{D`}}}}}{{Gd{ElBK`}}}}{{{f{Bh{K`{ABl}}}}{f{{Db{BOd}}}}}{{Gd{ElBK`}}}}```````{{c{An{Gh}}}BLf{}}{{{BLh{J`}}{BLh{D`}}{An{Gh}}}BLj}{{{BLh{J`}}{BLh{D`}}{An{Gh}}}BLl}`{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{BOf{An{{f{ACd}}}}}{{Gd{{BLn{J`}}AJ`}}}}{cc{}}{{}El}{ce{}{}}{{{f{BOf}}}d}{ElBOf}{{{f{BOf}}}{{f{{Db{J`}}}}}}{{{f{BhBOf}}{f{Fn}}}b}{{{f{BhBOf}}}b}{{{f{BhBOf}}{f{{Db{{A@n{Fn}}}}}}}b}1{{{f{BhBOf}}{An{{f{Fn}}}}}b}{BOf{{BOh{J`}}}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}:`{{{f{c}}h}b{}}{{{f{BOj}}}{{f{ACf}}}}{{{f{BhBOj}}}{{A@n{Fn}}}}{{{f{BhBOj}}}{{f{BhACf}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BOj}}}BOj}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{BOj}}}{{f{ACd}}}}{{}BOj}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{BhBOj}}El}b}{{{f{BOj}}{f{BhFj}}}{{Gd{bANd}}}}{cc{}}{{}El}{ce{}{}}{{{f{BOj}}}El}{ElBOj}{{{f{BhBOj}}}b}70{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}{{{f{BOj}}}{{An{{f{BOl}}}}}}7```````{{{f{AIf}}ElEl}AIf}0`{{}b}0{{}d}``{{eElEl}{{BOn{J`}}}{{Kb{Bf}}}{{Bd{}{{B`{c}}}}}}{{eElEl}{{BHd{J`}}}{{Kb{{Db{D`}}}}}{{Bd{}{{B`{c}}}}}}{Hnb}```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{BBl}}}BBl}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{BBl}}{f{Bf}}}d}{{}BBl}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{BBl}}{f{BBl}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{BBl}}{f{BhFj}}}Fl}{cc{}}{{{f{BCf}}}BBl}{C@`BBl}{BCfBBl}{{{f{C@`}}}BBl}{{{f{{Db{Ad}}}}}BBl}{{{f{BCh}}}BBl}{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{eBBl{{ANh{Lb}}}{{Gb{}{{B`{c}}}}}}{{{f{BBl}}{f{Bf}}}{{An{{f{Df}}}}}}{{{f{BBl}}El}{{An{{Gj{{f{AOb}}{f{Df}}}}}}}}{{{f{BhBBl}}El}{{An{{Gj{{f{BhAOb}}{f{BhDf}}}}}}}}{{{f{BBl}}{f{Bf}}}{{An{Lb}}}}{{{f{BBl}}{f{Bf}}}{{An{{Gj{El{f{AOb}}{f{Df}}}}}}}}{{{f{C@b}}}{{F`{{f{Bf}}}}}}{{{f{BBl}}}{{F`{{f{Bf}}}}}}{{{f{BBl}}{f{Bhc}}}bAA`}{{{f{C@b}}{f{Bf}}}{{An{El}}}}{{{f{BBl}}{f{Bf}}}{{An{El}}}}{{}El}{{{f{BhBBl}}ElAObDf}{{Af{{An{Df}}}}}}{ce{}{}}{BBlc{}}{{{f{BBl}}}d}{{{f{BBl}}}{{`{{Bd{}{{B`{{Gj{{f{AOb}}{f{Df}}}}}}}}}}}}{{{f{BBl}}}{{`{{Ih{}{{B`{{f{Df}}}}}}}}}}{{{f{BhBBl}}}{{`{{Ih{}{{B`{{f{BhDf}}}}}}}}}}{{{f{BBl}}}{{`{{Ih{}{{B`{Lb}}}}}}}}{{{f{BBl}}}{{`{{Ih{}{{B`{{f{AOb}}}}}}}}}}{{{f{BBl}}}El}{{{f{BhBBl}}BBl}b}{{{f{BhBBl}}{f{BBl}}}b}{{}BBl}{{{f{BBl}}ElAObDf}{{Af{BBl}}}}{{{f{BhBBl}}{f{Bf}}}{{An{Df}}}}{{{f{BhBBl}}{f{Bf}}AOb}{{An{AOb}}}}{{{f{BhBBl}}El}b}{{{f{BhBBl}}{f{Bf}}Df}{{An{Df}}}}{{{f{BhBBl}}ElDf}{{An{Df}}}}4{{{f{BhBBl}}El}{{An{{Gj{AObDf}}}}}}{{{f{BBl}}d}BCf}{{{f{c}}}e{}{}}{{{f{BhBBl}}{f{BBl}}}{{Af{d}}}}{c{{Gd{e}}}{}{}}{{{f{BBl}}{f{Bf}}}{{Af{{f{Df}}}}}}{{{f{BBl}}El}{{Af{{Gj{{f{AOb}}{f{Df}}}}}}}}{{{f{BBl}}{f{Bf}}}{{Af{Lb}}}}{{{f{BBl}}{f{Bf}}}{{Af{{Gj{El{f{AOb}}{f{Df}}}}}}}}{{{f{BhBBl}}{f{Bf}}}{{Af{{f{BhDf}}}}}}{{{f{C@b}}{f{Bf}}}{{Af{El}}}}6{{{f{c}}}Ml{}}{ce{}{}}{ElBBl}{{{f{BhBBl}}AObDf}{{An{Df}}}}``````````````{{{f{c}}h}b{}}0{{{f{Bf}}{F`{En}}{f{ACd}}}{{Af{Ad}}}}{{{f{Bf}}{F`{En}}{f{ACd}}{An{{f{C@d}}}}}{{Af{Ad}}}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`Jj}{}}{{AdAd}c{}}{{Adc}e{A`Jj}{}}`{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{BMj}}Dl}Dn}0{{{f{BMj}}}{{Af{Dn}}}}0`{{{f{Ad}}El}{{f{En}}}}{{{f{BMj}}}{{f{ACf}}}}{{{f{BhBMj}}}{{f{BhACf}}}}0{{{f{Ad}}}Dj}{{{f{BhBMj}}}{{f{Bh{l{c}}}}}Bn}{{{f{BMj}}}{{f{{l{c}}}}}Bn}{{{f{Ad}}}{{f{BMj}}}}{{{f{BhBMj}}}{{Af{El}}}}0{{{f{BhAd}}}{{Af{El}}}}{{{f{Ad}}}{{Af{{f{Eb}}}}}}{{{f{Ad}}}{{Af{{f{AIl}}}}}}{{{f{BMj}}{f{Ad}}}{{Af{Ad}}}}00000{{{f{Ad}}}{{Af{{f{Fh}}}}}}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{BMj}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}0{{{f{Ad}}{f{Df}}Ef}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AKh}}}}}}77{{{f{Ad}}{f{Ad}}}{{Af{Ad}}}}{{{f{Ad}}c}{{Af{Ad}}}Ab}{{{f{BMj}}}Ej}{{{f{Ad}}}{{`{{Bd{}{{B`{El}}}}}}}}{{{f{BMj}}}{{f{{F`{En}}}}}}{{{f{BhBMj}}}{{f{Bh{F`{En}}}}}}{{{f{BhAd}}}{{f{Bh{F`{En}}}}}}{{{f{Ad}}}Ad}{{{f{Il}}}Il}1{{{f{BMj}}}{{K`{BMj}}}}{{{f{c}}{f{Bhe}}}b{}{}}0{{{f{BhAd}}}b}{{{f{Ad}}}{{Af{{f{Ib}}}}}}{{}Ad}{El{{f{c}}}{}}00{{{f{Ad}}}{{f{c}}}{}}{El{{f{Bhc}}}{}}00{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Jj}{}}{{{f{Ad}}c}e{A`Jj}{}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}{{Af{Jn}}}}{Elb}00{{{f{BMj}}}Ad}0{{{f{BMj}}}{{f{Df}}}}0{{{f{Il}}{f{Il}}}d}{{{f{Ad}}{f{Ad}}}d}{{{f{Ad}}{f{Bf}}}{{Af{Fh}}}}{{{f{Ad}}c}{{Af{Fh}}}ANf}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}c}eANf{}}{{{f{Ad}}{f{Bf}}}c{}}255{{{f{c}}{f{e}}}d{}{}}00{{{f{Ad}}}El}{{{f{Ad}}}{{Af{Ad}}}}{{{f{BhAd}}{f{Ad}}}{{Af{{f{BhAd}}}}}}{{{f{Ad}}H`El}{{Af{Ad}}}}{{{f{Ad}}}{{Af{{f{AJd}}}}}}{{{f{Ad}}}{{Af{{f{AJf}}}}}}{{{f{BMj}}}{{AJb{Lb}}}}0{{{f{Ad}}AEh}{{Af{Ad}}}}{{{f{BMj}}{f{Fh}}}{{Af{Ad}}}}{{{f{Il}}{f{BhFj}}}Fl}{{{f{Ad}}{f{BhFj}}}Fl}0{{{f{Ad}}}Dh}{cc{}}0{{{l{c}}}AdBn}1{{{f{Bf}}{f{{Db{H`}}}}d}{{Af{Ad}}}}{{{f{Bf}}{f{{Db{H`}}}}{f{Df}}d}{{Af{Ad}}}}{{{f{Bf}}En}{{Af{Ad}}}}{{{f{Bf}}{F`{En}}}{{Af{Ad}}}}{{{f{Bf}}{F`{En}}{f{Df}}}Ad}{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{cAd{{Gb{}{{B`{Jn}}}}}}{cAd{{Gb{}{{B`{{f{Hn}}}}}}}}{cAd{{Gb{}{{B`{Dh}}}}}}{cAd{{Gb{}{{B`{Hn}}}}}}{cAd{{Gb{}{{B`{{An{Hl}}}}}}}}{cAd{{Gb{}{{B`{{An{J`}}}}}}}}{cAd{{Gb{}{{B`{J`}}}}}}{cAd{{Gb{}{{B`{{f{J`}}}}}}}}{cAd{{Gb{}{{B`{{An{L`}}}}}}}}{cAd{{Gb{}{{B`{{f{Bf}}}}}}}}{cAd{{Gb{}{{B`{d}}}}}}{cAd{{Gb{}{{B`{{f{Hl}}}}}}}}{cAd{{Gb{}{{B`{Hl}}}}}}{cAd{{Gb{}{{B`{{An{d}}}}}}}}{cAd{{Gb{}{{B`{{An{Hn}}}}}}}}{cAd{{Gb{}{{B`{Kj}}}}}}{cAd{{Gb{}{{B`{{f{d}}}}}}}}{cAd{{Gb{}{{B`{{An{Jn}}}}}}}}{cAd{{Gb{}{{B`{{f{Kj}}}}}}}}{cAd{{Gb{}{{B`{{f{L`}}}}}}}}{cAd{{Gb{}{{B`{L`}}}}}}{cAd{{Gb{}{{B`{{f{Jn}}}}}}}}{cAd{{Gb{}{{B`{{An{Kj}}}}}}}}{{{f{Bf}}{F`{J`}}}Ad}{{{f{Bf}}{F`{L`}}}Ad}{{{f{Bf}}{F`{Jn}}}Ad}{{{f{Bf}}{F`{Hl}}}Ad}{{{f{Bf}}{F`{Hn}}}Ad}{{{f{Bf}}{F`{Kj}}}Ad}{{{f{Bf}}El{f{Df}}}Ad}{{{f{Ad}}ElEl}Ad}{{{f{BMj}}El}{{Af{H`}}}}{{{f{Ad}}}El}{{{f{Ad}}}Hd}{{{f{Ad}}}Ad}{{{f{BMj}}}{{An{{f{ABf}}}}}}0{{{f{BMj}}El}{{An{{f{Hh}}}}}}0{{{f{BMj}}ElEl}{{An{{f{Hh}}}}}}0{{{f{BMj}}El}H`}0{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}c}{{Af{Fh}}}ANf}{{{f{Ad}}{f{Bf}}}{{Af{Fh}}}}21{{{f{Ad}}{f{Bf}}}c{}}{{{f{BMj}}}d}{{{f{Il}}{f{Bhc}}}bAA`}{{{f{Ad}}{An{El}}}Ad}{{{f{Ad}}}{{Af{{f{B@h}}}}}}{{{f{Ad}}}{{Af{{f{B@j}}}}}}{{{f{Ad}}}{{Af{{f{B@l}}}}}}{{{f{Ad}}}{{Af{{f{B@f}}}}}}{{{f{Ad}}}{{Af{{f{Dn}}}}}}`{{{f{Ad}}}{{Af{Dj}}}}{{}El}00{ce{}{}}00{AdBAl}1{BBnAd}{AdAd}=={{{f{Ad}}}{{Af{Fh}}}}000{{{f{BMj}}}Fh}0{{}d}00{{{f{Ad}}}Il}{{{f{Ad}}}C@f}{{{f{Ad}}}{{`{{Bd{}{{B`{Ad}}}}}}}}{{{f{BMj}}}El}{{{f{Ad}}}El}{{{f{BMj}}El}Ad}0{{{f{Ad}}}{{Af{{f{Dj}}}}}}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}{f{Bf}}}c{}}{{{f{Ad}}c}{{Af{Fh}}}ANf}210{{{f{Ad}}}{{Af{{An{c}}}}}Jj}{{{f{BMj}}}{{Af{Jl}}}}0{{{f{BMj}}}{{An{Jn}}}}0{{{f{Ad}}}Jl}1122322{{{f{Ad}}c}e{A`Jj}{}}{{AdAd}c{}}{{{f{Ad}}{f{Ad}}}c{}}{{Adc}e{A`Jj}{}}>>={{{f{BMj}}}{{Af{El}}}}0{{{f{BMj}}}{{f{Bf}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{F`{D`}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{f{{Db{D`}}}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Hn}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{L`}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{{AJb{{Db{D`}}}}}}}}}}}}{{{f{Bf}}c}AdBBn}{{{f{Bf}}c}Ad{{Kb{{Db{Jn}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{{F`{D`}}}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Kj}}}}}}}}{{{f{Bf}}{f{Ad}}}Ad}{{{f{Bf}}c}Ad{{Kb{{Db{d}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{{AJb{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{AJb{Bf}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{Dh}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Jn}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Dh}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{J`}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{L`}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Ad}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{{f{Bf}}}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{J`}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{d}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{Hl}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{f{Bf}}}}}}}}{{{f{Bf}}{Kl{J`}}}Ad}{{{f{Bf}}c}Ad{{Kb{{Db{Ad}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{Hl}}}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{An{{f{{Db{D`}}}}}}}}}}}}{{{f{Bf}}{Kl{Kj}}}Ad}{{{f{Bf}}{Kl{Hn}}}Ad}{{{f{Bf}}c}Ad{{Kb{{Db{Hn}}}}}}{{{f{Bf}}{Kl{L`}}}Ad}{{{f{Bf}}c}Ad{{Kb{{Db{Kj}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{H`}}}}}}{{{f{Bf}}c}Ad{{Kb{{Db{{AJb{{Db{D`}}}}}}}}}}{{{f{Bf}}{f{Df}}}Ad}{{{f{BMj}}ElEl}Ad}{{{f{Bf}}El}Ad}{{{f{BhC@f}}}{{An{c}}}{}}{{{f{Ad}}c}{{Af{Fh}}}ANf}{{{f{Ad}}{f{Bf}}}{{Af{Fh}}}}{{{f{Ad}}{f{Ad}}}{{Af{Fh}}}}{{{f{Ad}}c}eANf{}}{{{f{Ad}}{f{Bf}}}c{}}2{{{f{Ad}}}{{Af{{f{`}}}}}}{{{f{BMj}}}El}`{{{f{Ad}}}C@h}{{{f{Ad}}}{{Af{Jl}}}}{{{f{BMj}}JnLh}{{Af{Jl}}}}0{{{f{BMj}}}Ad}{{{f{Ad}}c}e{A`Jj}{}}{{Adc}e{A`Jj}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{BhBMj}}{f{Bf}}}b}{{{f{BhAd}}{f{Bf}}}{{f{BhAd}}}}{{{f{Ad}}{f{{Db{J`}}}}}{{Af{Ad}}}}6{IlIl}{{{f{BMj}}{f{Cb}}Lj}{{Af{Ad}}}}0{{{f{Ad}}Jndd{An{Hn}}}{{Af{Ad}}}}{{{f{Ad}}Eldd{An{Hn}}}{{Af{Ad}}}}{{{f{Ad}}El}Ad}{{{f{BhAd}}Il}b}{{{f{BMj}}J`}Ad}{{{f{BhBMj}}}b}0{{{f{BhAd}}}b}{{{f{Ad}}{An{Hn}}}Ad}{{{f{C@f}}}{{Gj{El{An{El}}}}}}{{{f{BMj}}J`El}Ad}{{{f{Ad}}J`El}Ad}{{{f{Ad}}Dl}{{Af{Ad}}}}{{{f{BMj}}Dl}{{Af{Ad}}}}0{{{f{BMj}}J`}{{Gj{AdAd}}}}{{{f{Ad}}J`}{{Gj{AdAd}}}}{{{f{BMj}}D`}{{An{Jn}}}}0{{{f{BMj}}D`}{{Af{Jl}}}}0{{{f{Ad}}}{{Af{{f{Mh}}}}}}{{{f{Ad}}El}{{Af{{AJb{Bf}}}}}}{{{f{Ad}}{f{Df}}}{{Af{Ad}}}}{{Adc}e{A`Jj}{}}{{{f{Ad}}{f{Ad}}}c{}}{{{f{Ad}}c}e{A`Jj}{}}{{AdAd}c{}}{{{f{Ad}}}{{Af{c}}}Jj}{{{f{BMj}}}{{Af{Jl}}}}0{{{f{Ad}}}{{Af{Jl}}}}{{{f{Ad}}{An{El}}}Ad}{{{f{BMj}}{f{Dn}}}{{Af{Ad}}}}{{{f{BMj}}{f{{Db{Hb}}}}}{{Af{Ad}}}}{{{f{BMj}}{f{{Db{Hb}}}}}Ad}{{{f{BMj}}{f{Dn}}}Ad}{{{f{Ad}}{f{{Db{Hb}}}}}Ad}{{{f{Ad}}Eld}En}{{{f{Ad}}}{{Af{Ad}}}}{{{f{c}}}e{}{}}0{{{f{Ad}}}{{AJb{Ad}}}}{{{f{c}}}Dh{}}{{AdAd}{{Af{Ad}}}}{c{{Gd{e}}}{}{}}0{{{Gj{{f{Bf}}En}}}{{Af{Ad}}}}{{{Gj{{f{Bf}}{F`{En}}}}}{{Af{Ad}}}}{{{Gj{{f{ANj}}{F`{En}}}}}{{Af{Ad}}}}{{{Gj{{f{ANj}}En}}}{{Af{Ad}}}}44445{{{f{BhAd}}{Ff{c}}}dBn}6{{{f{c}}}Ml{}}00{{{f{Ad}}}{{Af{{f{B@b}}}}}}{{{f{Ad}}}{{Af{{f{ANb}}}}}}{{{f{Ad}}}{{Af{{f{B@d}}}}}}{{{f{Ad}}}{{Af{{f{B@`}}}}}}{{{f{BMj}}}{{Af{Ad}}}}0{{{f{Ad}}}{{Af{Ad}}}}{{{f{BMj}}}{{Af{{f{{l{c}}}}}}}Bn}{{{f{BMj}}D`}{{An{Jn}}}}0{{{f{BMj}}D`}{{Af{Jl}}}}0{ce{}{}}00{{Ad{f{Bf}}}Ad}{{{f{Ad}}c}Ad{A`Jj}}{{{f{Ad}}{f{Fh}}{f{Ad}}}{{Af{Ad}}}}``{{{f{c}}h}b{}}{{{f{Cf}}}{{f{Ad}}}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{Cf}}}Cf}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{Cf}}}Ad}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{cc{}}{{}El}?{{{C@j{Ad}}}Cf}{{{f{BhCf}}{f{BhEn}}}b}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}{ce{}{}}{{{f{BhCf}}{f{BhEn}}e}c{}{{Cb{{f{Cf}}}{{C`{c}}}}}}````{{{C@l{}{{C`{c}}}}{f{Ad}}}c{}}{{{f{C@n}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Ah}}}}{f{Ad}}}{{Af{Ad}}}}0`2100210021002100``{{{f{BIj}}{f{Ad}}}{{Af{Ad}}}}{{{f{{l{Eh}}}}{f{Ad}}}{{Af{Ad}}}}0{{{f{BIj}}c}{{Af{Ad}}}Ab}{{{f{{l{Eh}}}}c}{{Af{Ad}}}Ab}0```{{{f{c}}h}b{}}{{{f{c}}}{{f{e}}}{}{}}{{{f{Bhc}}}{{f{Bhe}}}{}{}}{{{f{CA`}}}CA`}{{{f{c}}{f{Bhe}}}b{}{}}{{}CA`}{El{{f{c}}}{}}{El{{f{Bhc}}}{}}{Elb}{{{f{CA`}}{f{CA`}}}d}{{{f{c}}{f{e}}}d{}{}}00{{{f{CA`}}{f{BhFj}}}Fl}{cc{}}{{{f{CA`}}{f{Bhc}}}bAA`}{{}El}{ce{}{}}{{{f{c}}}e{}{}}{c{{Gd{e}}}{}{}}0{{{f{c}}}Ml{}}3`````````{{{f{c}}h}b{}}5{{{F`{BAl}}}{{Af{BAl}}}}{c{{Af{BAl}}}{{Gb{}{{B`{BAl}}}}}}{cBAl{{Gb{}{{B`{BAl}}}}}}{c{{An{BAl}}}{{Gb{}{{B`{BAl}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Gj{{AJb{{l{c}}}}{AJb{{l{e}}}}}}}BnBn}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Gj{{AJb{{l{c}}}}{AJb{{l{e}}}}{AJb{{l{g}}}}}}}BnBnBn}{{{f{BhCAb}}}d}{c{{Af{Df}}}{{Gb{}{{B`{{f{H`}}}}}}}}{c{{Af{{Gj{DfEl}}}}}{{Gb{}{{B`{{f{H`}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{An{Gh}}}BnBn}{{{f{c}}}{{f{e}}}{}{}}00{{{f{Bhc}}}{{f{Bhe}}}{}{}}00{{{f{CAd}}}{{`{{Bd{}{{B`{El}}}}}}}}{{{f{{CAf{ec}}}}}{{CAf{ec}}}Of{Of{Bd{}{{B`{c}}}}}}{{{f{c}}{f{Bhe}}}b{}{}}{{{f{{l{c}}}}{f{{l{c}}}}}{{Gj{{AJb{{l{c}}}}{AJb{{l{c}}}}}}}Bn}{{{f{Ad}}{f{Ad}}}{{Gj{AdAd}}}}{CAbe{}{{CAh{c}}}}{CAbe{}{{CAj{c}}}}{c{{Af{BAl}}}{{Gb{}{{B`{{f{BAl}}}}}}}}{cBAl{{Gb{}{{B`{{f{BAl}}}}}}}}{{{f{BhCAb}}{f{c}}}dBJn}{{{f{{CAl{c}}}}}{{f{e}}}{}{}}{El{{f{c}}}{}}{{{f{{AIh{c}}}}}{{f{e}}}{}{}}11{El{{f{Bhc}}}{}}0{{{f{Bh{AIh{c}}}}}{{f{Bhe}}}{}{}}1{Elb}00{cBBl{{Gb{}{{B`{Df}}}}}}{c{{Af{Df}}}{{Gb{}{{B`{{f{Df}}}}}}}}{{{f{{CAl{Ad}}}}{f{{CAl{Ad}}}}}d}{{{f{c}}{f{e}}}d{}{}}00`{{{f{BhCAb}}cg}{{An{c}}}{}{}{{Ch{ce}{{C`{c}}}}}}{cc{}}00{g{{Gd{ic}}}{}{}{{Gf{c}{{B`{e}}}}}{}}{c{{AIh{{l{e}}}}}{{Gb{}{{B`{}}}}}n}{c{{AIh{Fh}}}{{Gb{}{{B`{d}}}}}}{eCAj{}{{Gb{}{{B`{c}}}}}}21{c{{AIh{{l{e}}}}}{{Gl{}{{B`{}}}}}n}{c{{AIh{{l{e}}}}}{{Gn{}{{B`{}}}}}n}{c{{AIh{Fh}}}{{Gn{}{{B`{d}}}}}}{{{f{Df}}{f{Df}}}{{An{Df}}}}{{{f{ALd}}{f{ALd}}}ALd}{{{f{Ad}}{f{Ad}}}{{Af{b}}}}{{{f{{CAl{Ad}}}}{f{Bhc}}}bAA`}{{}El}00{ce{}{}}00{{{AIh{c}}}c{}}1{BDj{{F`{c}}}{}}{c{{F`{{CB`{CAn}}}}}{}}{c{{F`{Dh}}}{}}{{{f{CAd}}}{{`{{Bd{}{{B`{CAd}}}}}}}}{{{f{CAd}}}El}{BBhH`}1{c{{AIh{c}}}{}}{{eEl}{{CAf{ec}}}{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CAf{ec}}}}}An{}{{Bd{}{{B`{c}}}}}}{{{f{Bh{CAf{ec}}}}}An{}{{Bd{}{{B`{c}}}}Fd}}`{{{f{{CAf{ec}}}}}{{Gj{El{An{El}}}}}{}{{Bd{}{{B`{c}}}}}}{{{f{CAd}}J`El}CAd}{{{f{{Db{c}}}}J`El}{{f{{Db{c}}}}}{}}{{{f{c}}El}{{F`{c}}}CAd}0{{{f{CAd}}J`}{{Gj{CAdCAd}}}}{{{f{BAl}}Eld}{{F`{BAl}}}}{{{f{c}}}e{}{}}{{CAbEl}{{CAf{CAbc}}}{}}{c{{Gd{e}}}{}{}}00{{{f{Df}}{f{Df}}}{{Af{Df}}}}111{{{f{c}}}Ml{}}00{ce{}{}}00{{{f{Df}}e}c{}{{Cb{{f{BhCf}}}{{C`{c}}}}}}{{{f{{Db{{F`{c}}}}}}}{{Gj{El{F`{El}}}}}{}}{{{f{BAl}}}{{`{{Bd{}{{B`{BAl}}}}}}}}{{{f{{Db{c}}}}}{{AIb{Hb}}}{{Kb{{Db{Mn}}}}IdIf}}{{{f{{Db{e}}}}}{{F`{c}}}{IdIfCd}{{Kb{{Db{c}}}}}}{{{f{Ad}}}{{F`{Ad}}}}","D":"JAl","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5218],[5,"ListType",1464],[5,"ChunkedArray",39],[10,"PolarsNumericType",1464],[10,"Num",5219],[10,"ToPrimitive",5220],[5,"Series",4621],[8,"PolarsResult",3902,5221],[10,"NumOpsDispatchInner",5037,5222],[6,"GroupsProxy",3504,5223],[5,"BooleanType",1464],[6,"Option",5224],[17,"Item"],[8,"ArrayBox",5014],[10,"Iterator",5225],[1,"str"],[0,"mut"],[17,"IsNested"],[5,"FalseT",1464],[10,"PolarsDataType",1464],[17,"Output"],[10,"Fn",5226],[10,"Copy",5227],[5,"AmortSeries",5014],[10,"FnMut",5226],[5,"Float64Type",1464],[5,"Float32Type",1464],[5,"BinaryType",1464],[1,"u8"],[1,"slice"],[5,"StringType",1464],[6,"DataType",1464,5228],[5,"String",5229],[8,"ListChunked",1464],[5,"SortOptions",1381],[8,"IdxCa",1464,5230],[5,"SortMultipleOptions",1381],[8,"BinaryChunked",1464],[10,"PolarsIntegerType",1464],[6,"CastOptions",723],[10,"NumOpsDispatchCheckedInner",5062,5231],[8,"ChunkLenIter",39],[1,"usize"],[8,"ArrayRef",3902,5232],[5,"Vec",5233],[5,"MetadataProperties",810],[10,"DoubleEndedIterator",5234],[5,"Metadata",810],[8,"BooleanChunked",1464],[5,"Formatter",5235],[8,"Result",5235],[10,"Array",5232],[17,"Array"],[10,"IntoIterator",5236],[6,"Result",5237],[10,"FallibleIterator",5238],[5,"Bitmap",5239],[1,"tuple"],[10,"IntoParallelIterator",5240],[10,"TrustedLen",5241],[6,"AnyValue",1464,5242],[8,"IdxSize",3902,5243],[5,"MetadataFlags",810],[5,"ObjectType",1464],[10,"PolarsObjectSafe",1047],[10,"PolarsObject",1047],[1,"f32"],[1,"u64"],[5,"Int128Type",1464],[8,"DecimalChunked",1464,5244],[10,"Send",5227],[10,"Sync",5227],[10,"ExactSizeIterator",5245],[10,"PolarsFloatType",1464],[6,"IsSorted",4621,5246],[10,"PolarsIterator",771],[1,"i64"],[5,"Iter",5247],[1,"fn"],[5,"Map",5248],[6,"ChunkedArrayLayout",39],[10,"NumCast",5220],[5,"Scalar",1464,5242],[1,"f64"],[5,"Arc",3902,5249],[10,"AsRef",5250],[5,"UInt64Type",1464],[5,"Int64Type",1464],[5,"UInt32Type",1464],[1,"u32"],[5,"Range",5251],[5,"Int32Type",1464],[1,"i32"],[5,"Field",1464,5252],[10,"ParallelIterator",5240],[10,"IndexedParallelIterator",5240],[6,"QuantileInterpolOptions",3902,5253],[5,"RollingOptionsFixedWindow",3902,5254],[10,"Sized",5227],[17,"HasViews"],[5,"RandomState",5255],[5,"BytesHash",5256],[8,"Array2",5257],[8,"ArrayView1",5257],[8,"StringChunked",1464],[6,"Either",5258],[5,"TypeId",5259],[5,"NullableIdxSize",3902,5243],[10,"FnOnce",5226],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",437,5260],[10,"ChunkedBuilder",465],[5,"BinViewChunkedBuilder",465,5261],[10,"ViewType",5262],[5,"BooleanChunkedBuilder",465,5263],[5,"NullChunkedBuilder",465,5264],[5,"PrimitiveChunkedBuilder",465,5265],[10,"Clone",5266],[8,"StringChunkedBuilder",465,5261],[8,"BinaryChunkedBuilder",465,5261],[10,"NewChunkedArray",465],[5,"AnonymousListBuilder",569,5267],[5,"AnonymousOwnedListBuilder",569,5267],[5,"ListBooleanChunkedBuilder",569,5268],[5,"ListPrimitiveChunkedBuilder",569,5269],[10,"ListBuilderTrait",569],[5,"ListStringChunkedBuilder",569,5270],[5,"ListBinaryChunkedBuilder",569,5270],[5,"ListNullChunkedBuilder",569,5271],[5,"Box",5272],[10,"Hasher",5273],[10,"ChunkedCollectInferIterExt",751],[10,"ChunkedCollectIterExt",751],[10,"Canonical",765],[10,"ChunkedCollectParIterExt",767],[10,"FromParIterWithDtype",767],[5,"BooleanArray",5274],[5,"BoolIterNoNull",771],[5,"SomeIterator",771],[5,"MetadataEnv",810,5275],[10,"MetadataCollectable",810],[10,"MetadataTrait",810],[5,"Iter",5276],[5,"IterNames",5276],[5,"File",5277],[5,"Mutex",5278],[6,"MetadataMerge",810],[5,"ObjectArray",1047],[6,"ArrowDataType",1464,5279],[10,"Any",5259],[10,"Debug",5235],[8,"ObjectValueIter",1047],[5,"BitmapIter",5280],[6,"ZipValidity",5281],[5,"ObjectChunkedBuilder",1122],[8,"ObjectChunked",1464],[10,"AnonymousObjectBuilder",1145],[5,"ObjectRegistry",1145],[8,"ObjectConverter",1145],[8,"BuilderConstructor",1145],[17,"FuncRet"],[10,"ChunkApply",1173],[10,"ChunkApplyKernel",1173],[10,"ChunkSort",1173],[10,"ChunkUnique",1173],[10,"ChunkCast",1173],[6,"FillNullStrategy",1173],[10,"ChunkCompare",1173],[10,"ChunkExplode",1173],[5,"OffsetsBuffer",5282],[10,"ChunkFillNullValue",1173],[10,"ChunkFilter",1173],[10,"ChunkFull",1173],[10,"ChunkFullNull",1173],[10,"ChunkAnyValue",1173],[10,"IsFirstDistinct",1173],[10,"IsLastDistinct",1173],[10,"ChunkAgg",1173],[10,"ChunkQuantile",1173],[10,"ChunkExpandAtIndex",1173],[10,"ChunkReverse",1173],[10,"ChunkRollApply",1173],[10,"ChunkSet",1173],[10,"ChunkShift",1173],[10,"ChunkShiftFill",1173],[10,"ChunkVar",1173],[10,"ChunkTake",1173],[10,"ChunkTakeUnchecked",1173],[10,"ChunkBytes",1173],[10,"ChunkZip",1173],[10,"BinaryFnMut",1297],[10,"StaticArray",1464,5283],[10,"TernaryFnMut",1297],[10,"Error",5284],[10,"UnaryFnMut",1297],[5,"PrimitiveArray",5285],[6,"SearchSortedSide",1337],[10,"SlicedArray",3902,5286],[5,"NoNull",5096],[5,"RowsEncoded",5287],[8,"BinaryOffsetChunked",1464],[5,"NaiveDateTime",5288],[6,"PolarsError",3902,5221],[6,"Cow",5289],[8,"Float32Chunked",1464],[8,"Float64Chunked",1464],[10,"ArrayFromIter",1464,5290],[10,"ArrayFromIterDtype",1464,5290],[10,"AsRefDataType",1464,5228],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5291],[10,"From",5250],[5,"CategoricalChunked",2875,5292],[10,"CategoricalMergeOperation",2875,5293],[10,"LogicalType",1464,5294],[5,"Logical",1464,5294],[5,"OwnedObject",1464,5242],[6,"UnknownKind",1464,5228],[6,"TimeUnit",1464,5295],[5,"UInt8Type",1464],[5,"UInt16Type",1464],[5,"Int8Type",1464],[5,"Int16Type",1464],[5,"DateType",1464],[5,"TimeType",1464],[5,"BinaryOffsetType",1464],[5,"DecimalType",1464],[5,"DatetimeType",1464],[5,"DurationType",1464],[5,"CategoricalType",1464],[6,"ArrowTimeUnit",1464],[10,"ArrayCollectIterExt",3902,5290],[8,"Utf8ViewArray",5262],[8,"UInt32Chunked",1464],[5,"Error",5235],[10,"NumericNative",1464],[10,"Into",5250],[5,"ArrowField",3902],[6,"IntegerType",5296],[6,"PrimitiveType",5297],[10,"Borrow",5298],[8,"SmartString",1464],[10,"NoOption",5299],[10,"GetAnyValue",1464,5242],[8,"Int128Chunked",1464],[10,"IntoScalar",1464,5300],[6,"Ordering",5301],[6,"PhysicalType",5296],[8,"UInt8Chunked",1464],[8,"UInt16Chunked",1464],[8,"UInt64Chunked",1464],[8,"Int8Chunked",1464],[8,"Int16Chunked",1464],[8,"Int32Chunked",1464],[8,"Int64Chunked",1464],[8,"PlIdHashMap",1464,5230],[5,"CategoricalChunkedBuilder",2875,5302],[5,"GlobalRevMapMerger",2875,5293],[6,"RevMapping",3015,5303],[6,"CategoricalOrdering",3015,5303],[5,"CatIter",2875,5292],[1,"u128"],[5,"DataFrame",3206],[5,"StringCacheHolder",3067,5304],[5,"ErrString",3096,5221],[6,"PolarsWarning",3096,5305],[10,"Display",5235],[6,"FloatFmt",3176],[1,"i128"],[1,"char"],[5,"Schema",4547],[10,"IntoSeries",4621,5306],[6,"NullStrategy",3206],[6,"UniqueKeepStrategy",3206],[8,"PlHashSet",1464,5307],[5,"ArrowSchema",3902,5308],[5,"Row",3758],[5,"GroupBy",3504],[5,"RangeFrom",5251],[5,"RangeInclusive",5251],[5,"RangeToInclusive",5251],[5,"RangeTo",5251],[5,"RangeFull",5251],[5,"RecordBatchIter",3206],[5,"PhysRecordBatchIter",3206],[10,"IntoVec",5096],[5,"MeltArgs",3475],[10,"RangeBounds",5251],[8,"SchemaRef",4547],[6,"IndexOrder",3902,5309],[5,"StructArray",5310],[8,"RecordBatch",5311],[5,"GroupsIdx",3504,5223],[8,"IdxVec",5312],[6,"GroupByMethod",3504],[5,"SlicedGroups",3504,5223],[5,"GroupsProxyParIter",3504,5223],[10,"UnindexedConsumer",5313],[6,"GroupsIndicator",3504,5223],[8,"IdxItem",3504,5223],[10,"IntoGroupsProxy",3504,5314],[5,"Copied",5315],[5,"Zip",5316],[5,"GroupsProxyIter",3504,5223],[8,"GroupsSlice",3504,5223],[1,"array"],[8,"DynArgs",3902,5317],[10,"IsFloat",5318],[10,"NativeType",5319],[10,"AggList",3742,5320],[10,"TakeExtremum",3742],[10,"PhysicalAggExpr",3755],[6,"AnyValueBuffer",3758,5321],[6,"AnyValueBufferTrusted",3758,5321],[5,"BinaryArray",5322],[5,"IdHasher",3854,5323],[5,"IdxHash",3854,5323],[5,"HashMap",5324],[10,"BuildHasher",5273],[10,"VecHash",3854,5325],[10,"Allocator",5326],[5,"BorrowedFd",5327],[10,"AsFd",5327],[10,"AsRawFd",5328],[20,"MaybeUninit",5329],[10,"NumOpsDispatchChecked",3902,5231],[5,"ChunkId",3902,5243],[5,"RollingVarParams",3902,5317],[5,"RollingQuantileParams",3902,5317],[6,"NonExistent",3902,5330],[10,"Ord",5301],[5,"CStr",5331],[10,"Default",5332],[5,"Weak",5249],[10,"Scalar",5333],[10,"PartialEq",5301],[5,"Error",5334],[5,"TryReserveError",5335],[5,"Utf8Error",5336],[6,"Error",5337],[5,"PathBuf",5338],[5,"Path",5338],[10,"ToOwned",5289],[5,"OsStr",5339],[5,"CString",5340],[1,"never"],[5,"OsString",5339],[10,"FromData",4470,5341],[5,"Buffer",5342],[10,"FromDataUtf8",4470,5341],[10,"FromDataBinary",4470,5341],[5,"ListArray",5343],[6,"Ambiguous",3902,5330],[10,"NamedFromOwned",3902,5344],[10,"PartialOrd",5301],[10,"PolarsArray",3902,5345],[10,"Hash",5273],[10,"SeriesTrait",4621,5246],[10,"ChunkAggSeries",3902,5346],[10,"QuantileAggSeries",3902,5347],[10,"IndexToUsize",3902,5348],[10,"NamedFrom",3902,5344],[5,"Pin",5349],[5,"Request",5284],[5,"BorrowedCursor",5350],[5,"IoSliceMut",5351],[6,"SeekFrom",5351],[10,"VarAggSeries",3902,5352],[5,"AllocError",5326],[5,"BTreeMap",5353],[5,"IoSlice",5351],[5,"AnonymousBuilder",4476,5354],[5,"Offsets",5282],[5,"MutableNullArray",4499,5355],[5,"MutableBitmap",5356],[5,"Utf8Array",5357],[8,"ArrowSchemaRef",5308],[10,"IndexOfSchema",4547],[8,"Metadata",5279],[5,"SeriesIter",4621,5358],[8,"SeriesPhysIter",4621,5358],[5,"Rc",5359],[10,"LhsNumOps",5037,5222],[10,"NumOpsDispatch",5037,5222],[6,"NullBehavior",5070],[10,"CustomIterTools",5096,5360],[10,"Container",5096],[5,"TrustMyLength",5096,5241],[10,"FromIteratorReversed",5361],[10,"FromTrustedLenIterator",5096,5360],[5,"Wrap",5096],[5,"LazyCompact",5362],[5,"SmartString",5363],[8,"FillNullLimit",1173],[10,"InitHashMaps",1464],[10,"InitHashMaps2",1464],[5,"TrueT",1464],[15,"IO",3161],[15,"Context",3161],[15,"Count",3739],[15,"Slice",3740],[10,"ListFromIter",3902],[10,"Utf8FromIter",4542],[10,"BinaryFromIter",4542]],"r":[[0,5323],[4,5304],[13,5304],[16,5304],[31,5304],[437,5260],[465,5261],[466,5261],[467,5263],[470,5264],[471,5265],[472,5261],[569,5267],[570,5267],[571,5270],[572,5268],[574,5271],[575,5269],[576,5270],[820,5275],[1366,5286],[1381,5286],[1465,5242],[1467,5290],[1468,5290],[1469,5290],[1470,5279],[1472,5228],[1488,5292],[1491,5292],[1492,5302],[1493,5293],[1494,5303],[1496,5228],[1497,5228],[1498,5228],[1509,5244],[1519,5252],[1520,5252],[1535,5242],[1537,5293],[1541,5230],[1542,5348],[1543,5230],[1544,5230],[1545,5307],[1546,5230],[1571,5300],[1583,5294],[1584,5294],[1602,5242],[1606,5307],[1607,5307],[1608,5230],[1609,5307],[1610,5307],[1616,5303],[1617,5242],[1620,5283],[1632,5295],[1633,5228],[1660,5228],[1859,5293],[1876,5294],[1952,5228],[2472,5293],[2473,5293],[2485,5228],[2569,5292],[2607,5292],[2875,5292],[2876,5292],[2877,5302],[2878,5293],[2879,5303],[2881,5293],[2885,5303],[2902,5293],[2967,5293],[2968,5293],[2986,5292],[2990,5292],[3015,5303],[3020,5303],[3067,5304],[3073,5304],[3076,5304],[3084,5304],[3086,5303],[3091,5303],[3092,5304],[3093,5304],[3094,5304],[3095,5304],[3102,5221],[3109,5221],[3110,5221],[3111,5305],[3125,5221],[3133,5221],[3140,5305],[3145,5221],[3146,5221],[3147,5221],[3148,5221],[3149,5221],[3150,5305],[3151,5221],[3165,5364],[3166,5364],[3167,5364],[3168,3854],[3504,5223],[3510,5223],[3511,5223],[3512,5223],[3513,5223],[3514,5223],[3515,5223],[3518,5223],[3520,5314],[3532,5223],[3742,5320],[3760,5321],[3761,5321],[3854,5323],[3855,5323],[3856,5323],[3857,5325],[3860,5325],[3861,5325],[3902,5330],[3903,5249],[3904,5260],[3905,5290],[3906,5232],[3908,5308],[3909,5261],[3910,5263],[3912,5292],[3913,5292],[3914,5302],[3915,5293],[3916,5303],[3917,5346],[3918,5243],[3919,39],[3920,465],[3921,751],[3922,751],[3926,3206],[3928,5317],[3932,5341],[3933,5341],[3934,5341],[3936,5293],[3939,5348],[3940,5243],[3941,5309],[3942,5348],[3943,5306],[3944,5096],[3946,5365],[3947,5365],[3948,5365],[3951,5222],[3953,5270],[3954,5268],[3955,569],[3956,5345],[3957,5269],[3958,5270],[3961,3475],[3963,5344],[3964,5344],[3966,465],[3968,5330],[3972,5243],[3973,5243],[3974,5222],[3975,5231],[3979,5345],[3980,5221],[3981,771],[3982,1047],[3983,5221],[3984,5265],[3985,5347],[3986,5253],[3989,5303],[3990,5254],[3991,5317],[3992,5317],[3997,4621],[3998,5246],[4000,5286],[4002,5304],[4004,5261],[4006,3206],[4007,5352],[4008,5325],[4054,5293],[4089,5345],[4092,0],[4105,5345],[4134,0],[4270,5348],[4313,5345],[4315,5293],[4316,5293],[4342,5345],[4348,5221],[4349,5221],[4350,5221],[4351,5221],[4363,5292],[4365,5345],[4371,5292],[4444,5345],[4470,5341],[4471,5341],[4472,5341],[4476,5354],[4499,5355],[4529,5303],[4534,5303],[4535,5286],[4538,5304],[4539,5304],[4540,5304],[4541,5304],[4542,5366],[4543,5366],[4623,1173],[4626,5306],[4627,5246],[4628,5246],[4632,5358],[4633,5358],[4634,5246],[5037,5222],[5038,5222],[5039,5222],[5045,5222],[5062,5231],[5063,5231],[5098,5360],[5099,5360],[5100,5360],[5103,5241],[5114,5367],[5115,5367],[5146,5368],[5147,5369],[5166,5369],[5168,5370],[5183,5369],[5202,5369],[5212,5370]],"b":[[48,"impl-Add-for-ChunkedArray%3CT%3E"],[49,"impl-Add-for-%26ChunkedArray%3CT%3E"],[50,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[51,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[64,"impl-ChunkedArray%3CFloat64Type%3E"],[65,"impl-ChunkedArray%3CFloat32Type%3E"],[70,"impl-ChunkedArray%3CBinaryType%3E"],[71,"impl-ChunkedArray%3CT%3E"],[72,"impl-ChunkedArray%3CStringType%3E"],[101,"impl-ChunkedArray%3CT%3E"],[102,"impl-Container-for-ChunkedArray%3CT%3E"],[120,"impl-Div-for-ChunkedArray%3CT%3E"],[121,"impl-Div-for-%26ChunkedArray%3CT%3E"],[122,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[123,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[131,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[132,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[133,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[134,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[140,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[141,"impl-Debug-for-ChunkedArray%3CT%3E"],[152,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[153,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[154,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[156,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[157,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[185,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[186,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[187,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[188,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[219,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[220,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[221,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[222,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[223,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[224,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[225,"impl-Container-for-ChunkedArray%3CT%3E"],[226,"impl-ChunkedArray%3CT%3E"],[231,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[232,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[233,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[234,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[235,"impl-ChunkedArray%3CBooleanType%3E"],[236,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[238,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[239,"impl-ChunkedArray%3CBooleanType%3E"],[248,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[249,"impl-ChunkedArray%3CBooleanType%3E"],[252,"impl-ChunkedArray%3CBooleanType%3E"],[253,"impl-ChunkedArray%3CT%3E"],[254,"impl-Mul-for-ChunkedArray%3CT%3E"],[255,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[256,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[257,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[262,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[263,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[264,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[265,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[266,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[267,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[268,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[269,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[270,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[271,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[272,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[273,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[274,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[275,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[276,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[277,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[278,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[279,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[280,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[281,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[282,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[283,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[292,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[293,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[294,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[295,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[299,"impl-ChunkedArray%3CStringType%3E"],[300,"impl-ChunkedArray%3CListType%3E"],[301,"impl-ChunkedArray%3CListType%3E"],[302,"impl-ChunkedArray%3CStringType%3E"],[313,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[314,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[315,"impl-Rem-for-ChunkedArray%3CT%3E"],[316,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[335,"impl-ChunkedArray%3CT%3E"],[336,"impl-Container-for-ChunkedArray%3CT%3E"],[339,"impl-ChunkedArray%3CT%3E"],[340,"impl-Container-for-ChunkedArray%3CT%3E"],[343,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[344,"impl-Sub-for-ChunkedArray%3CT%3E"],[345,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[346,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[348,"impl-ChunkedArray%3CBooleanType%3E"],[349,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[352,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[353,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[354,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[355,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[361,"impl-ChunkedArray%3CListType%3E"],[362,"impl-ChunkedArray%3CT%3E"],[367,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[368,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[369,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[370,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[371,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[372,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[399,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[400,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[401,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[402,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[403,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[404,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[405,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[406,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[517,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[518,"impl-BinViewChunkedBuilder%3Cstr%3E"],[843,"impl-MetadataProperties"],[844,"impl-Flags-for-MetadataProperties"],[845,"impl-MetadataFlags"],[846,"impl-Flags-for-MetadataFlags"],[891,"impl-MetadataTrait-for-Metadata%3CT%3E"],[892,"impl-Metadata%3CT%3E"],[915,"impl-LowerHex-for-MetadataProperties"],[916,"impl-UpperHex-for-MetadataProperties"],[917,"impl-Debug-for-MetadataProperties"],[918,"impl-Binary-for-MetadataProperties"],[919,"impl-Octal-for-MetadataProperties"],[920,"impl-UpperHex-for-MetadataFlags"],[921,"impl-Debug-for-MetadataFlags"],[922,"impl-Octal-for-MetadataFlags"],[923,"impl-Binary-for-MetadataFlags"],[924,"impl-LowerHex-for-MetadataFlags"],[932,"impl-MetadataProperties"],[933,"impl-Flags-for-MetadataProperties"],[934,"impl-MetadataFlags"],[935,"impl-Flags-for-MetadataFlags"],[948,"impl-MetadataTrait-for-Metadata%3CT%3E"],[949,"impl-Metadata%3CT%3E"],[986,"impl-MetadataTrait-for-Metadata%3CT%3E"],[987,"impl-Metadata%3CT%3E"],[991,"impl-Metadata%3CT%3E"],[992,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1053,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1054,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1087,"impl-ObjectArray%3CT%3E"],[1088,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1102,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1103,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1113,"impl-ObjectArray%3CT%3E"],[1114,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1116,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1117,"impl-ObjectArray%3CT%3E"],[1119,"impl-ObjectArray%3CT%3E"],[1120,"impl-Array-for-ObjectArray%3CT%3E"],[1123,"impl-ObjectChunkedBuilder%3CT%3E"],[1124,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1126,"impl-ObjectChunkedBuilder%3CT%3E"],[1127,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1699,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1700,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1701,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1702,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1703,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1704,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1705,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1706,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1782,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1783,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1784,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1785,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1786,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1787,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[2080,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2081,"impl-PartialEq-for-DataType"],[2089,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2090,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2091,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2092,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2095,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2096,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2097,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2098,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2136,"impl-Debug-for-AnyValue%3C\'a%3E"],[2137,"impl-Display-for-AnyValue%3C\'_%3E"],[2139,"impl-Debug-for-DataType"],[2140,"impl-Display-for-DataType"],[2142,"impl-Debug-for-TimeUnit"],[2143,"impl-Display-for-TimeUnit"],[2155,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2156,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2158,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2159,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2160,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2162,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2164,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2165,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2166,"impl-From%3C%26Field%3E-for-Field"],[2167,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2191,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2192,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2196,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2197,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2198,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2200,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2201,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2202,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2203,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2209,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2210,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2212,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2213,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2214,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2215,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2216,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2217,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2225,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2226,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2227,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2228,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2229,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2230,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2319,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2320,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2321,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2322,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2325,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2326,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2327,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2328,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2462,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2463,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2464,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2465,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2468,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2469,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2470,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2471,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2506,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2507,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2508,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2509,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2510,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2511,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2512,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2513,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2514,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2515,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2528,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2529,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2532,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2533,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2534,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2535,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2538,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2539,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2540,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2541,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2619,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2620,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2621,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2622,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[2921,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2922,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2923,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2924,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2925,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2926,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2941,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2942,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2943,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2944,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2945,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2946,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2961,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2962,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2963,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2964,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2965,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2966,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2977,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2978,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2979,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2980,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2981,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2982,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3135,"impl-Debug-for-ErrString"],[3136,"impl-Display-for-ErrString"],[3227,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3228,"impl-Add%3C%26Series%3E-for-DataFrame"],[3229,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3267,"impl-Div%3C%26Series%3E-for-DataFrame"],[3268,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3269,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3299,"impl-Display-for-DataFrame"],[3300,"impl-Debug-for-DataFrame"],[3305,"impl-From%3C%26ArrowSchema%3E-for-DataFrame"],[3306,"impl-From%3C%26Schema%3E-for-DataFrame"],[3334,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3335,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3336,"impl-Index%3C%26str%3E-for-DataFrame"],[3337,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3338,"impl-Index%3Cusize%3E-for-DataFrame"],[3339,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3340,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3341,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3359,"impl-Container-for-DataFrame"],[3360,"impl-DataFrame"],[3368,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3369,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3370,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3371,"impl-DataFrame"],[3372,"impl-Container-for-DataFrame"],[3386,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3387,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3388,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3414,"impl-Container-for-DataFrame"],[3415,"impl-DataFrame"],[3419,"impl-Container-for-DataFrame"],[3420,"impl-DataFrame"],[3423,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3424,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3425,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3444,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3445,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26%5BField%5D)%3E-for-DataFrame"],[3616,"impl-Display-for-GroupByMethod"],[3617,"impl-Debug-for-GroupByMethod"],[3623,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3624,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3626,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[3660,"impl-IntoIterator-for-GroupsIdx"],[3661,"impl-IntoIterator-for-%26GroupsIdx"],[3663,"impl-IntoParallelIterator-for-%26GroupsIdx"],[3664,"impl-IntoParallelIterator-for-GroupsIdx"],[4025,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4026,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4096,"impl-Default-for-Arc%3Cstr%3E"],[4097,"impl-Default-for-Arc%3CCStr%3E"],[4098,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4099,"impl-Default-for-Arc%3CT%3E"],[4153,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4154,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4155,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4188,"impl-Debug-for-PolarsError"],[4189,"impl-Display-for-PolarsError"],[4192,"impl-Debug-for-Arc%3CT,+A%3E"],[4193,"impl-Display-for-Arc%3CT,+A%3E"],[4194,"impl-Pointer-for-Arc%3CT,+A%3E"],[4204,"impl-From%3CError%3E-for-PolarsError"],[4206,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4207,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4208,"impl-From%3CError%3E-for-PolarsError"],[4212,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4213,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4214,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4215,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4216,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4217,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4218,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4219,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4220,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4221,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4223,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4225,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4226,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4227,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4228,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4566,"impl-From%3C%26ArrowSchema%3E-for-Schema"],[4567,"impl-From%3CArc%3CArrowSchema%3E%3E-for-Schema"],[4568,"impl-From%3CArrowSchema%3E-for-Schema"],[4569,"impl-From%3C%26Arc%3CArrowSchema%3E%3E-for-Schema"],[4570,"impl-From%3C%26%5BSeries%5D%3E-for-Schema"],[4571,"impl-From%3C%26Row%3C\'_%3E%3E-for-Schema"],[4639,"impl-Add-for-%26Series"],[4640,"impl-Add%3CT%3E-for-%26Series"],[4641,"impl-Add-for-Series"],[4642,"impl-Add%3CT%3E-for-Series"],[4706,"impl-Div-for-%26Series"],[4707,"impl-Div%3CT%3E-for-Series"],[4708,"impl-Div%3CT%3E-for-%26Series"],[4709,"impl-Div-for-Series"],[4720,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4721,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4722,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4723,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4724,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4725,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4742,"impl-Display-for-Series"],[4743,"impl-Debug-for-Series"],[4755,"impl-FromIterator%3Cf64%3E-for-Series"],[4756,"impl-FromIterator%3C%26u64%3E-for-Series"],[4757,"impl-FromIterator%3CString%3E-for-Series"],[4758,"impl-FromIterator%3Cu64%3E-for-Series"],[4759,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[4760,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[4761,"impl-FromIterator%3Ci64%3E-for-Series"],[4762,"impl-FromIterator%3C%26i64%3E-for-Series"],[4763,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[4764,"impl-FromIterator%3C%26str%3E-for-Series"],[4765,"impl-FromIterator%3Cbool%3E-for-Series"],[4766,"impl-FromIterator%3C%26f32%3E-for-Series"],[4767,"impl-FromIterator%3Cf32%3E-for-Series"],[4768,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[4769,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[4770,"impl-FromIterator%3Cu32%3E-for-Series"],[4771,"impl-FromIterator%3C%26bool%3E-for-Series"],[4772,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[4773,"impl-FromIterator%3C%26u32%3E-for-Series"],[4774,"impl-FromIterator%3C%26i32%3E-for-Series"],[4775,"impl-FromIterator%3Ci32%3E-for-Series"],[4776,"impl-FromIterator%3C%26f64%3E-for-Series"],[4777,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[4778,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[4779,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[4780,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[4781,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[4782,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[4783,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[4798,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4799,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4800,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4801,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4802,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4803,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4843,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4844,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4845,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4846,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4847,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4848,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4862,"impl-Mul%3CT%3E-for-%26Series"],[4863,"impl-Mul-for-Series"],[4864,"impl-Mul-for-%26Series"],[4865,"impl-Mul%3CT%3E-for-Series"],[4872,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[4873,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[4874,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[4875,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[4876,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[4877,"impl-NamedFrom%3CT,+T%3E-for-Series"],[4878,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[4879,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[4880,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[4881,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[4882,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[4883,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[4884,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[4885,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[4886,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[4887,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[4888,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[4889,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[4890,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[4891,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[4892,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[4893,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[4894,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[4895,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[4896,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[4897,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[4898,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[4899,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[4900,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[4901,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[4902,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[4903,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[4904,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[4905,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[4906,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[4911,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4912,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4913,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4914,"impl-ChunkCompare%3CRhs%3E-for-Series"],[4915,"impl-ChunkCompare%3C%26str%3E-for-Series"],[4916,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[4925,"impl-Rem%3CT%3E-for-%26Series"],[4926,"impl-Rem%3CT%3E-for-Series"],[4927,"impl-Rem-for-%26Series"],[4959,"impl-Sub%3CT%3E-for-Series"],[4960,"impl-Sub-for-%26Series"],[4961,"impl-Sub%3CT%3E-for-%26Series"],[4962,"impl-Sub-for-Series"],[4982,"impl-TryFrom%3C(%26str,+Box%3Cdyn+Array%3E)%3E-for-Series"],[4983,"impl-TryFrom%3C(%26str,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4984,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[4985,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5158,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5159,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5161,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5162,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5164,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5165,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAANUNHA5ZDlwOXQ5eDl8OYA5lDmgObQ5uDpMO","e":"OzAAAAEAAFQPBgIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAEAIQAHACoADAA+AAAAQQACAEUABABNAAMAUgAAAFQACwBiAAMAZwAAAGoAAgBuAAEAdAANAIQAAwCJAAEAjAAEAJIAAACUAAEAmAAGAKEAAwCnAAMArAAFALMAAQC4AAUAwAACAMYABADMAAMA0wACANgAAQDbAAcA6AAMAPkAAwD/AAYABwEZACUBAwAqAQAALAEEADIBAQA4AQAAOgEEAEABAABFAQUATQEBAFEBAgBVAQoAZgEBAGwBAABwAQgAegEIAIQBAACGAQUAjgEAAJABIwC1ASkA4wECAOkBIwATAgUAHQIAAB8CJgBIAkwAnAIMALACJADYAg0A5wIBAOoCGQAHAwkAEwMBABcDAQAaAycATQMAAE8DAABUAxIAawMMAHoDAAB8AwcAhgMDAIwDAQCQAw0ApgMAAKgDAACrAwEAsQMNAMoDAQDOAwAA0QMCANgDBQDfAwMA6QMLAPsDAwABBA4AEgQHABwEFQAzBAcAPAQAAD8EAABBBAIARgQQAFgEAABbBAAAXQQCAGEEAgBlBAEAaAQIAHIEAAB0BAUAfAQBAH8EAACBBAEAhAQDAIkEAwCOBAIAkgQDAJgEAACbBAAAowQAAKgEAACrBAEAsAQBALMEAAC2BAAAwAQAAMkEAgDPBAUA1wQCANwEAQDfBAAA4QQBAOcEAQDqBAEA8QQBAPcEAAD6BAAA/QQAAP8EAAABBQAAAwUAAAgFBAAPBQEAEgUHABsFAgAhBQAAIwUDACgFAQArBQUANwUVAE4FAQBSBQQAWAUDAF8FBgBpBQ8AewUMAIkFAACLBQMAmwUJALEFDQDBBQIAxQUFAM0FAADPBQwA3wUAAOEFAADmBQEA6QUAAOsFAgDvBQAA8QUAAPQFAAD3BQAA+QUBAPwFAAD+BQIAAgYMABAGAAASBgEAFQYAABcGAQAaBgAAHAYBAB8GAAAhBgEAJAYBACkGAAAtBgEAMQYAADQGAAA2BgAAOAYDAD0GAABABggASgYBAE0GBQBVBgEAWQYAAFsGAABgBgIAZAYBAGcGAABpBgEAbAYAAG4GAQBxBgAAcwYBAHYGAAB4BgEAewYAAH0GAACABjsAwgYEAMkGCQDVBgQA2wYIAOUGAADnBmAASQdPAJoHBwCjB3YAGwgBAB4IRQBsCAEAbwgCAHMIAAB1CAMAeggAAJAIAQCUCBcAsAgkANcIBgDgCB4ABQlAAEgJAABsCQsAegkAAHwJAQB/CQEAggkAAIcJBQCOCQAAkQkCAJYJAwCbCQAAnQkdALwJCQDHCQ4A1wkcAPUJBgD9CRoAGQoVADAKCwA9CgAAQgoAAEQKAABJCh0AaQoCAG0KUQDACiwA7gpMADwLBABCCwEARQsCAEkLBABPCyMAegsCAH4LCQCMCwMAkQsXAKsLAQCuCwQAtAsNAMMLBQDKCwAAzAsVAOMLAQDpCwIA7gsBAPILCQD9CwQAAwwBAAgMAAAKDAIADgwBABEMAAATDAEAGQwEAB8MBAAlDBAANwwKAEMMAABFDAIASgwEAFAMJAB2DAUAfQwJAIoMAACNDAoAmQwFAKQMEQC4DBMA0wwBANcMAgDbDAAA3QwAAOIMAwDqDAEA7QwAAPwMAAD/DAEABw0MABoNAQAgDQAAIw0AACkNAgAtDQAAMQ0BADsNAgBDDQAARg0AAEwNAABVDQIAWQ0AAFwNAABeDQQAaQ0EAHENBgB6DQkAhQ0AAIkNBACVDQ0ApA0CAKkNCgC1DQEAuA0DAL0NAwDCDQkAzQ0HANYNAQDZDRgA8w0oAB0OBgAoDgEAKw4AAC0OAAAwDgMANg4AADsOBwBLDg0AWg4BAGEOAwBmDgEAag4CAG8OAABxDh8AlA4MAKMOBQCqDgcAsw4WAMwOCwDZDg4A6Q4BAO0OAwD0DgYA/g4OAA8PAQASDxEAJg8EAC4PBQA2DwkAQQ8CAEYPBwBPDwsAXA8DAGEPFgB5DwgAgw8FAIoPFgCkDxAAtg8AALgPAQC8DxwA2w8CAN8PEgDzDwYA/Q8BAAUQIgArEAMAMBALAD0QGwBbEBIAbxADAH8QAACKEAAAkBAAAJMQAACaEAAAnRAAAKIQAQClEAYArhARANAQAwDVEAIA2RABANwQAQD3EAIA/RAEAAQRAAAHEQcAEREAABMRAQAYES0ATxEMAF0RAABfEQwAcREJAH0RBgCFEQAAhxEcAKURAACnEQsAtBEAALYRAQC/EQQAxhEFAM0RCADXEQcA5REBAOgRAQDsEQEAABIAAAISAAAEEgAACBIDAA4SBAAUEgMAGRIEACASBAAqEgAAMBICADgSBQA/EgcAShIDAE8SAABTEgIAVxIBAFsSDwBvEgMAdBIBAHkSAgCGEgMAjBIAAJASAQCTEh4AtRIAALcSAQDAEgEAwxIBAMYSAADMEgEAzxICANUSAwDhEgMA5hIAAOgSAADtEgEA8BIBAPcSAAD/EgMABRMAAAkTIAArEwAALhMDADMTAQA4EwEAPhMCAEMTAABFEwAASRMCAFATAQBTEwAAVRMBAFgTAABeEwAAYBMDAHATAQBzEwwAgRMDAIwTAACREwIAlRMAAJgTCgCkEwAAphMAAKgTBACuExoAzBMCANETDgDhEwEA5BMKAPATBAD3EwAA+hMAAP0TCgAJFAIADhQMAB0UBQAmFAgAMBQFADkUEABMFAAAThQAAFAUAgBUFAgAXhQEAA=="}],\
["polars_io",{"t":"KFFKKKNNECNNNNNNNNCMCNNNNNNNNNONNNNNNNNMCMMNNNNNNONNNNCCCOCMMMOCCCCCONNNNNNNNNNCNNGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFNNNNNNNOHNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNOOHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNHONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNHNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNOONNNNHONNNNNNNNNNNNNNOOOOOONONNNNNNNNONNPFPPGFFFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNKFNNNNNNNNHNNMNNNHNNHFFKKHNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNKKEMMMMNNNJJJJJHHHHHHHH","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriterFactory","__clone_box","__clone_box","async_glob","avro","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cloud","create_writer","csv","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","enabled","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","file_cache","finish","finish","fmt","fmt","from","from","hash","hash","hive_start_idx","init","init","into","into","ipc","json","mmap","name","ndjson","new","new","next_record_batch","offset","parquet","partition","pl_async","predicates","prelude","schema","serialize","serialize","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","Deflate","Snappy","Snappy","__clone_box","arrow_schema","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","hash","init","init","init","into","into","into","new","new","schema","set_rechunk","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","PolarsObjectStore","__clone_box","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","bucket","build_object_store","clone","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","download","drop","drop","drop","drop","eq","execute","expansion","flush","fmt","fmt","from","from","from","from_url","get","get_range","get_ranges","glob","head","init","init","init","into","into","into","new","new","new","new_with_object_store","options","prefix","queue","scheme","sync_update","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","Bucket","Checksum","Client","Client","Client","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","DisableTagging","Encryption","Endpoint","Endpoint","FederatedTokenFile","File","Gcp","GoogleConfigKey","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","SkipSignature","Token","Token","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","__clone_box","__clone_box","__clone_box","as_ref","as_ref","as_ref","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_aws","build_azure","build_gcp","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","file_cache_ttl","fmt","fmt","fmt","fmt","from","from","from","from","from","from_str","from_str","from_str","from_str","from_untyped_config","hash","hash","hash","hash","init","init","init","init","init","into","into","into","into","into","max_retries","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_aws","with_azure","with_gcp","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_with_predicate","batched","batched_borrowed","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","chunk_size","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","columns","comment_prefix","count_rows","decimal_comma","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","dtype_overwrite","encoding","eol_char","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","get_parse_options","has_header","hash","hash","hash","hash","hash","ignore_errors","infer_file_schema","infer_schema_length","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into_reader_with_file_handle","is_compressed","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","next_batches","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","serialize","serialize","serialize","serialize","skip_rows","skip_rows_after_header","to_owned","to_owned","to_owned","to_owned","to_owned","truncate_ragged_lines","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_reader_with_file_path","try_parse_dates","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_with_inference_result","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","__clone_box","__clone_box","batch_size","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","date_format","datetime_format","default","default","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","float_precision","fmt","fmt","fmt","from","from","from","from","from","hash","hash","hash","include_bom","include_bom","include_header","include_header","init","init","init","init","init","into","into","into","into","into","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","serialize","serialize","serialize_options","time_format","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOption","IpcWriterOptions","LZ4","ZSTD","__clone_box","__clone_box","__clone_box","__clone_box","arrow_schema","batched","batched_async","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","compression","count_rows","create_writer","create_writer","data","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","extension","extension","finish","finish","finish","finish","finish","finish_with_scan_ops","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_uri","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","maintain_order","memory_map","memory_mapped","metadata","new","new","new","new","new","new","new_async","schema","schema","serialize","serialize","serialize","set_rechunk","set_rechunk","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_columns","with_columns","with_compression","with_compression","with_compression","with_compression","with_extension","with_extension","with_n_rows","with_n_rows","with_pl_flavor","with_pl_flavor","with_predicate","with_projection","with_projection","with_projection","with_row_index","with_row_index","with_row_index","with_row_limit","write_batch","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","eq","equivalent","equivalent","equivalent","finish","finish","fmt","from","from","from","from","from","hash","infer_schema_len","init","init","init","init","init","into","into","into","into","into","maintain_order","new","new","new","serialize","set_rechunk","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","with_batch_size","with_ignore_errors","with_json_format","with_json_format","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","deref","deref_mut","drop","from","from","init","into","to_bytes","to_file","try_create_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","as_any","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","boxed","check_bound","clone","clone_into","count","data_type","deref","deref","deref_mut","deref_mut","drop","drop","eq","eq","fields","finish","fmt","from","from","from","from","from_path","get_fields","infer_schema_len","init","init","into","into","into_data","into_iter","iter","len","low_memory","new","new","new_empty","new_null","set_validity","slice","slice","slice_typed","slice_typed_unchecked","slice_unchecked","slice_unchecked","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_from","try_from","try_into","try_into","try_new","type_id","type_id","validity","validity","values","values_iter","vzip","vzip","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","with_validity","metadata","read","write","FileMetaData","FileMetaDataRef","ParquetStatistics","__clone_box","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","column_order","column_orders","created_by","deref","deref","deref_mut","deref_mut","deserialize","distinct_count","drop","drop","eq","fmt","fmt","from","from","from","init","init","into","into","into_thrift","key_value_metadata","key_value_metadata","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","try_from","try_from_thrift","try_into","try_into","type_id","type_id","version","vzip","vzip","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","RowGroups","__clone_box","__clone_box","batched","batched","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","finishes_this_batch","fmt","fmt","from","from","from","from","from","from_uri","get_metadata","get_metadata","hash","hash","init","init","init","init","init","into","into","into","into","into","is_finished","iter","limit_reached","low_memory","materialize_empty_df","new","new","next_batches","num_rows","num_rows","parallel","read_parallel","read_parallel","schema","schema","schema","serialize","serialize","set_low_memory","set_rechunk","set_rechunk","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","use_statistics","use_statistics","use_statistics","vzip","vzip","vzip","vzip","vzip","with_columns","with_hive_partition_columns","with_hive_partition_columns","with_n_rows","with_n_rows","with_predicate","with_predicate","with_projection","with_projection","with_row_index","with_row_index","with_schema","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","batched","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","compression","data_pagesize_limit","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distinct_count","drop","drop","drop","drop","drop","drop","drop","drop","empty","encode_and_compress","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","finish","finish","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","full","get_writer","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","serialize","serialize","serialize","serialize","serialize","set_parallel","statistics","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_new","try_new","try_new","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_row_groups","PartitionedWriter","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","new","try_from","try_into","type_id","vzip","with_parallel","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","apply_predicate","as_stats_evaluator","borrow","borrow","borrow_mut","borrow_mut","column_stats","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","dtype","evaluate_io","fmt","fmt","from","from","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","init","into","into","new","new","null_count","num_rows","schema","serialize","serialize","should_read","to_max","to_min","to_min_max","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SerReader","SerWriter","cloud","finish","finish","new","new","set_rechunk","set_rechunk","set_rechunk","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","POLARS_TEMP_DIR_BASE_PATH","check_projected_arrow_schema","check_projected_schema","check_projected_schema_impl","get_reader_bytes","get_sequential_row_statistics","is_cloud_url","materialize_projection","resolve_homedir"],"q":[[0,"polars_io"],[82,"polars_io::avro"],[148,"polars_io::cloud"],[219,"polars_io::cloud::options"],[399,"polars_io::csv"],[401,"polars_io::csv::read"],[655,"polars_io::csv::read::schema_inference"],[679,"polars_io::csv::write"],[819,"polars_io::file_cache"],[840,"polars_io::ipc"],[1093,"polars_io::json"],[1189,"polars_io::mmap"],[1211,"polars_io::ndjson"],[1213,"polars_io::ndjson::core"],[1305,"polars_io::parquet"],[1308,"polars_io::parquet::metadata"],[1360,"polars_io::parquet::read"],[1496,"polars_io::parquet::write"],[1712,"polars_io::partition"],[1728,"polars_io::pl_async"],[1749,"polars_io::predicates"],[1803,"polars_io::prelude"],[1813,"polars_io::utils"],[1826,"dyn_clone::sealed"],[1827,"polars_io::options"],[1828,"polars_io::shared"],[1829,"alloc::boxed"],[1830,"std::io"],[1831,"core::result"],[1832,"serde::de"],[1833,"std::path"],[1834,"polars_core::frame"],[1835,"polars_error"],[1836,"core::fmt"],[1837,"core::hash"],[1838,"polars_arrow::record_batch"],[1839,"core::option"],[1840,"serde::ser"],[1841,"core::any"],[1842,"polars_io::avro::read"],[1843,"polars_arrow::datatypes::schema"],[1844,"polars_io::avro::write"],[1845,"polars_core::schema"],[1846,"alloc::string"],[1847,"alloc::vec"],[1848,"polars_io::cloud::glob"],[1849,"object_store"],[1850,"alloc::sync"],[1851,"polars_io::cloud::polars_object_store"],[1852,"object_store::path"],[1853,"tokio::io::async_write"],[1854,"core::marker"],[1855,"polars_io::cloud::adaptors"],[1856,"std::io::error"],[1857,"crossterm::command"],[1858,"url"],[1859,"bytes::bytes"],[1860,"core::ops::range"],[1861,"core::ops::function"],[1862,"parquet_format_safe::thrift::varint::decode"],[1863,"object_store::aws::builder"],[1864,"object_store::azure::builder"],[1865,"object_store::gcp::builder"],[1866,"core::convert"],[1867,"core::iter::traits::collect"],[1868,"polars_io::csv::read::reader"],[1869,"polars_io::csv::read::read_impl::batched"],[1870,"polars_io::csv::read::options"],[1871,"std::fs"],[1872,"polars_core::datatypes::dtype"],[1873,"polars_io::csv::write::writer"],[1874,"polars_io::csv::write::options"],[1875,"core::num::nonzero"],[1876,"polars_io::file_cache::entry"],[1877,"polars_io::ipc::ipc_stream"],[1878,"polars_io::ipc::write"],[1879,"futures_io::if_std"],[1880,"polars_io::ipc::ipc_file"],[1881,"polars_io::ipc::ipc_reader_async"],[1882,"polars_arrow::io::ipc::read::file"],[1883,"polars_arrow::array::struct_"],[1884,"polars_arrow::array"],[1885,"polars_arrow::datatypes"],[1886,"polars_arrow::datatypes::field"],[1887,"polars_arrow::array::struct_::mutable"],[1888,"polars_arrow::array::growable::structure"],[1889,"polars_arrow::bitmap::immutable"],[1890,"polars_arrow::scalar"],[1891,"polars_arrow::array::struct_::iterator"],[1892,"polars_arrow::bitmap::utils::iterator"],[1893,"polars_arrow::bitmap::utils::zip_validity"],[1894,"polars_parquet::parquet::metadata::file_metadata"],[1895,"polars_parquet::parquet::metadata::column_order"],[1896,"polars_parquet::parquet::metadata::row_metadata"],[1897,"polars_parquet::arrow::read::statistics"],[1898,"parquet_format_safe::parquet_format"],[1899,"polars_parquet::parquet::metadata::schema_descriptor"],[1900,"polars_parquet::parquet::error"],[1901,"polars_io::parquet::read::reader"],[1902,"polars_io::parquet::read::read_impl"],[1903,"polars_io::parquet::read::options"],[1904,"polars_core::series"],[1905,"polars_io::parquet::write::writer"],[1906,"polars_io::parquet::write::batched_writer"],[1907,"polars_io::parquet::write::options"],[1908,"polars_parquet::arrow::write"],[1909,"polars_parquet::parquet::write"],[1910,"core::iter::traits::iterator"],[1911,"polars_parquet::arrow::write::file"],[1912,"std::sync::mutex"],[1913,"core::future::future"],[1914,"tokio::runtime::task::join"],[1915,"polars_core::datatypes::field"],[1916,"avro_schema::file"],[1917,"polars_io::cloud::object_store_setup"],[1918,"polars_io::csv::read::parser"],[1919,"polars_io::csv::read::utils"],[1920,"polars_io::file_cache::cache"],[1921,"polars_io::file_cache::utils"],[1922,"polars_io::parquet::read::utils"]],"i":[0,0,0,0,0,0,5,6,0,0,5,6,5,6,5,6,5,6,0,7,0,6,5,6,5,6,5,6,5,6,6,5,6,5,5,5,6,6,6,7,0,16,8,5,6,5,6,5,6,6,5,6,5,6,0,0,0,5,0,16,8,23,5,0,0,0,0,0,6,5,6,5,6,5,6,5,6,5,6,0,5,6,0,0,0,0,31,31,31,31,31,28,28,32,31,28,32,31,31,31,28,32,31,28,32,31,28,32,31,31,31,31,31,28,32,31,28,32,31,31,28,32,31,28,32,31,28,32,28,28,31,28,32,31,28,32,31,28,32,31,28,32,31,28,32,28,32,28,0,0,0,43,47,39,43,47,39,43,39,0,43,43,39,47,39,43,47,39,43,43,47,47,39,43,39,47,39,47,39,43,47,39,43,39,43,43,43,0,43,47,39,43,47,39,43,47,39,43,47,0,39,47,39,47,43,47,39,43,47,39,43,47,39,43,47,39,43,47,47,61,60,61,0,62,61,63,63,0,60,62,60,60,61,62,61,61,0,0,60,60,61,60,60,60,61,60,60,61,61,63,63,0,63,60,60,61,61,61,60,60,61,60,62,62,60,61,60,61,60,61,61,61,60,60,38,61,62,60,61,62,60,38,63,61,62,60,38,63,61,62,38,38,38,60,38,61,62,60,38,61,62,38,60,38,63,61,62,60,38,63,61,62,60,38,61,62,60,38,63,61,62,60,38,63,61,62,60,60,60,38,38,38,61,61,61,62,62,62,38,60,38,61,62,60,38,63,61,62,60,63,61,62,38,60,38,61,62,60,38,63,61,62,60,38,63,61,62,38,60,38,61,62,60,38,61,62,60,38,63,61,62,60,38,63,61,62,60,38,63,61,62,60,38,63,61,62,38,38,38,0,0,78,78,0,0,0,0,0,0,76,77,78,0,0,77,76,74,75,76,77,78,68,68,68,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,74,75,76,77,78,74,75,76,77,78,74,75,0,75,74,75,76,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,75,76,77,78,73,72,68,74,75,76,77,78,74,75,75,74,75,76,77,78,74,74,74,75,75,75,76,76,76,77,77,77,78,78,78,68,74,75,76,77,78,73,72,68,74,75,76,77,77,78,74,74,74,75,76,77,78,74,0,74,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,0,74,74,75,74,74,68,77,77,77,73,72,75,74,74,74,75,74,74,74,74,74,0,74,75,74,75,76,77,78,74,74,74,75,76,77,78,75,73,72,68,74,75,76,77,78,73,72,68,74,75,76,77,78,74,75,73,72,68,74,75,76,77,78,74,73,72,68,74,75,76,77,78,74,74,75,75,74,75,75,74,74,74,74,75,74,74,75,74,74,74,75,74,74,74,74,74,74,75,74,74,75,75,0,81,81,81,81,81,81,81,81,81,81,81,81,81,0,81,81,81,81,81,81,81,81,81,88,0,0,0,88,88,88,0,0,86,87,88,86,84,84,85,86,87,88,84,85,86,87,88,86,87,88,86,87,88,87,87,86,87,88,84,85,86,87,88,84,85,86,87,88,86,87,88,84,85,86,87,88,86,87,88,86,86,86,87,87,87,88,88,88,84,85,87,86,87,88,84,85,86,87,88,86,87,88,84,86,84,86,84,85,86,87,88,84,85,86,87,88,87,86,84,84,87,87,87,87,86,87,88,86,87,86,87,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,85,86,87,88,84,84,84,84,84,84,84,84,84,84,85,0,0,0,91,91,91,91,91,91,0,91,0,91,91,91,91,91,91,91,91,91,0,0,0,0,0,0,0,0,0,0,0,0,100,100,97,98,99,100,92,93,93,106,101,92,107,104,93,94,105,97,98,99,100,106,101,92,107,104,93,94,105,97,98,99,100,97,98,99,100,97,98,99,100,99,101,104,105,101,104,105,98,99,100,106,101,92,107,104,93,94,105,97,98,99,100,106,101,92,107,104,93,94,105,97,98,99,100,97,99,100,106,101,92,107,104,93,94,105,97,98,99,100,97,99,100,99,99,99,100,100,100,104,105,106,92,107,93,94,106,97,99,100,106,101,92,107,104,93,94,105,97,98,99,100,101,97,99,100,106,101,92,107,104,93,94,105,97,98,99,100,106,101,92,107,104,93,94,105,97,98,99,100,99,97,106,101,106,92,107,104,93,105,93,106,92,97,99,100,106,92,97,98,99,100,106,101,92,107,104,93,94,105,97,98,99,100,106,101,92,107,104,93,94,105,97,98,99,100,106,101,92,107,104,93,94,105,97,98,99,100,106,101,92,107,104,93,94,105,97,98,99,100,106,92,107,104,93,105,104,105,106,92,107,93,98,106,92,98,106,92,98,98,94,0,113,0,113,0,0,0,109,113,110,112,111,109,113,110,112,111,109,109,109,109,113,110,112,111,109,113,110,112,111,109,109,113,110,112,111,109,109,109,109,109,110,111,109,113,110,112,111,109,109,111,113,110,112,111,109,113,110,112,111,109,109,110,112,111,109,111,109,113,110,112,111,109,113,110,112,111,109,113,110,112,111,109,113,110,112,111,109,111,111,110,111,111,111,111,112,83,83,0,83,0,83,83,83,83,83,83,83,83,83,83,70,70,0,83,83,83,83,0,0,0,0,116,116,116,116,116,119,116,119,116,116,116,116,116,119,116,119,116,119,116,119,116,116,116,116,119,116,119,116,116,116,119,116,119,119,116,119,116,116,116,116,116,119,119,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,116,119,116,119,116,116,119,116,116,116,116,116,119,116,119,119,119,119,119,119,119,119,119,119,119,116,116,0,0,0,0,0,0,130,133,130,133,130,130,130,130,130,130,133,130,133,130,0,133,133,130,133,133,130,133,133,130,133,130,133,130,130,130,130,133,133,133,130,130,130,130,130,133,130,130,133,130,133,130,130,133,130,143,0,143,143,0,0,0,0,143,142,143,139,141,140,139,141,142,143,140,139,141,142,143,142,143,142,143,143,140,139,141,142,143,140,139,141,142,143,142,143,140,139,141,142,143,142,143,142,142,142,143,143,143,139,141,140,142,143,140,139,141,142,143,141,139,141,142,143,140,139,141,142,143,140,139,141,142,143,140,140,140,142,0,140,139,140,139,141,142,139,141,140,139,141,142,143,139,139,141,142,143,140,139,141,142,143,140,139,141,142,143,140,139,141,142,143,139,141,142,140,139,141,142,143,139,139,141,139,141,139,141,139,141,139,141,139,0,149,0,149,0,149,149,0,0,0,0,149,0,149,149,0,148,149,150,151,152,153,146,147,146,148,149,150,151,152,153,147,146,148,149,150,151,152,153,148,149,150,151,152,153,148,149,150,151,152,153,148,148,148,149,153,147,146,148,149,150,151,152,153,147,146,148,149,150,151,152,153,148,149,150,151,152,153,153,147,146,148,149,150,151,152,153,153,147,148,149,150,151,152,153,148,148,148,149,149,149,150,150,150,151,151,151,152,152,152,153,153,153,147,146,148,149,150,151,152,153,147,146,148,149,150,151,152,153,153,147,148,149,150,151,152,153,147,146,148,149,150,151,152,153,147,146,148,149,150,151,152,153,153,153,148,153,153,146,153,148,148,149,150,151,152,153,146,148,148,149,150,151,152,153,147,146,148,149,150,151,152,153,147,146,148,149,150,151,152,153,150,151,152,147,146,148,149,150,151,152,153,147,146,148,149,150,151,152,153,146,146,146,146,147,147,0,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,0,0,162,162,162,162,162,162,162,162,0,162,162,164,162,162,162,0,162,162,0,0,0,0,0,0,69,168,167,168,167,167,168,167,168,167,168,167,168,167,168,69,168,167,168,167,168,168,168,168,168,167,168,167,168,167,168,167,168,167,167,168,167,166,168,168,168,168,167,168,167,168,167,168,167,0,0,0,16,8,16,8,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":"``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{j}}}j}{{{b{l}}}l}{{{b{c}}{b{he}}}f{}{}}0`{{{b{n}}c}{{Ab{A`}}}Ad}`{{}l}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{j}}}Aj}{c{{Ah{l}}}Aj}{Aff}0`{{{b{j}}{b{j}}}Al}{{{b{l}}{b{l}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{n}}}An}`{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{{{b{j}}{b{hBf}}}Bh}{{{b{l}}{b{hBf}}}Bh}{cc{}}0{{{b{j}}{b{hc}}}fBj}{{{b{l}}{b{hc}}}fBj}`{{}Af}0{ce{}{}}0`````{cB`Bl}{cA`Ad}{{{b{hBn}}}{{Bd{{Cb{C`}}}}}}```````{{{b{j}}c}AhCd}{{{b{l}}c}AhCd}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0`88````````{{{b{c}}d}f{}}{{{b{h{Ch{c}}}}}{{Bd{Cj}}}{BlCl}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00{{{b{Cn}}}Cn}{{{b{c}}{b{he}}}f{}{}}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{Aff}00{{{b{Cn}}{b{Cn}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{Ch{c}}}{{Bd{Bb}}}{BlCl}}{{{b{h{D`{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{Cn}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}00{{{b{Cn}}{b{hc}}}fBj}{{}Af}00{ce{}{}}00{c{{Ch{c}}}{BlCl}}{c{{D`{c}}}Ad}{{{b{h{Ch{c}}}}}{{Bd{Dd}}}{BlCl}}{{{Ch{c}}Al}{{Ch{c}}}{BlCl}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00777{{{Ch{c}}{Cb{{Dh{Df}}}}}{{Ch{c}}}{BlCl}}{{{D`{c}}{Cb{Cn}}}{{D`{c}}}Ad}{{{Ch{c}}{Cb{Af}}}{{Ch{c}}}{BlCl}}{{{D`{c}}Df}{{D`{c}}}Ad}{{{Ch{c}}{Cb{{Dh{Af}}}}}{{Ch{c}}}{BlCl}}```{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00`{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Ed{Dn{Eb{E`}}}}}}}}{{{b{Ef}}}Ef}{{{b{c}}{b{he}}}f{}{}}{{}Dn}{Af{{b{c}}}{}}00{Af{{b{hc}}}{}}00{{{b{Ef}}{b{Eh}}{b{hc}}}{{Bd{f}}}{EjEl}}{{{b{hEn}}}f}{Aff}00{{{b{Dn}}{b{Dn}}}Al}{{{b{hc}}e}{{Ah{{b{hg}}F`}}}{}Fb{}}`{{{b{hEn}}}{{Fd{f}}}}{{{b{Dn}}{b{hBf}}}Bh}{{{b{Ef}}{b{hBf}}}Bh}{cc{}}00{{{b{Ff}}}{{Bd{Dn}}}}{{{b{Ef}}{b{Eh}}}{{Bd{Fh}}}}{{{b{Ef}}{b{Eh}}{Fj{Af}}}{{Bd{Fh}}}}{{{b{Ef}}{b{Eh}}{b{{Fl{{Fj{Af}}}}}}}{{Bd{{Dh{Fh}}}}}}{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{{Dh{Df}}}}}}{{{b{Ef}}{b{Eh}}}{{Bd{Fn}}}}{{}Af}00{ce{}{}}00{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{En}}}}{{{b{Dj}}}{{Bd{Dn}}}}{{{Eb{E`}}}Ef}{{{Eb{E`}}Eh}{{Bd{En}}}}``{{{b{hc}}e}{{Ah{{b{hg}}F`}}}{}Fb{}}`{{{b{hc}}i}{{Ah{gF`}}}{}{}{}{{Gb{{b{he}}}{{G`{g}}}}}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}00000{{{b{c}}}Cf{}}00999{{{b{hEn}}{b{{Fl{Gd}}}}}{{Fd{Af}}}}{{{b{hc}}e}{{Ah{AfF`}}}{}Gf}``````````````````````````````````````````````````````{{{b{c}}d}f{}}000{{{b{Gh}}}{{b{Dj}}}}{{{b{Gj}}}{{b{Dj}}}}{{{b{Gl}}}{{b{Dj}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Dl}}{b{Dj}}}{{Bd{{`{E`}}}}}}00{{{b{Gh}}}Gh}{{{b{Dl}}}Dl}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{c}}{b{he}}}f{}{}}000{{}Dl}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Gh}}}Aj}{c{{Ah{Dl}}}Aj}{c{{Ah{Gj}}}Aj}{c{{Ah{Gl}}}Aj}{Aff}0000{{{b{Gh}}{b{Gh}}}Al}{{{b{Dl}}{b{Dl}}}Al}{{{b{Gn}}{b{Gn}}}Al}{{{b{Gj}}{b{Gj}}}Al}{{{b{Gl}}{b{Gl}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000`{{{b{Gh}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Dl}}{b{hBf}}}Bh}{{{b{Gj}}{b{hBf}}}{{Ah{fDb}}}}{{{b{Gl}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}0000{{{b{Dj}}}{{Ah{Gh}}}}{{{b{Dj}}}{{Ah{Gnc}}}{}}{{{b{Dj}}}{{Ah{Gj}}}}{{{b{Dj}}}{{Ah{Gl}}}}{{{b{Dj}}g}{{Bd{Dl}}}{{H`{Dj}}}{{Hb{Df}}}{{Hf{}{{Hd{{Ed{ce}}}}}}}}{{{b{Gh}}{b{hc}}}fBj}{{{b{Dl}}{b{hc}}}fBj}{{{b{Gj}}{b{hc}}}fBj}{{{b{Gl}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000`{{{b{Gh}}c}AhCd}{{{b{Dl}}c}AhCd}{{{b{Gj}}c}AhCd}{{{b{Gl}}c}AhCd}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000077777{{Dle}Dl{{Hb{Df}}}{{Hf{}{{Hd{{Ed{Ghc}}}}}}}}{{Dle}Dl{{Hb{Df}}}{{Hf{}{{Hd{{Ed{Gjc}}}}}}}}{{Dle}Dl{{Hb{Df}}}{{Hf{}{{Hd{{Ed{Glc}}}}}}}}`````````````````{{{b{c}}d}f{}}0000{{{Hh{c}}{Cb{{Eb{Hj}}}}}{{Hh{c}}}Hl}{{{Hh{{Ab{Hl}}}}{Cb{Hn}}}{{Bd{I`}}}}{{{b{h{Hh{c}}}}}{{Bd{Ib}}}Hl}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000`{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{{b{Il}}}Il}{{{b{c}}{b{he}}}f{}{}}0000``{{{b{An}}Gd{Cb{Gd}}{Cb{{b{Ij}}}}GdAl}{{Bd{Af}}}}`{{}Id}{{}If}{{}Ih}{Af{{b{c}}}{}}0000000{Af{{b{hc}}}{}}0000000{c{{Ah{Id}}}Aj}{c{{Ah{If}}}Aj}{c{{Ah{Ih}}}Aj}{c{{Ah{Ij}}}Aj}{c{{Ah{Il}}}Aj}{Aff}0000000```{{{b{Id}}{b{Id}}}Al}{{{b{If}}{b{If}}}Al}{{{b{Ih}}{b{Ih}}}Al}{{{b{Ij}}{b{Ij}}}Al}{{{b{Il}}{b{Il}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000{{{Hh{c}}}{{Bd{Bb}}}Hl}{{{b{Id}}{b{hBf}}}Bh}{{{b{If}}{b{hBf}}}Bh}{{{b{Ih}}{b{hBf}}}Bh}{{{b{Ij}}{b{hBf}}}Bh}{{{b{Il}}{b{hBf}}}Bh}{cc{}}00000{{{b{Dj}}}Ij}11{{{b{Id}}}{{Eb{If}}}}`{{{b{Id}}{b{hc}}}fBj}{{{b{If}}{b{hc}}}fBj}{{{b{Ih}}{b{hc}}}fBj}{{{b{Ij}}{b{hc}}}fBj}{{{b{Il}}{b{hc}}}fBj}```{{}Af}0000000{ce{}{}}0000000{{Idc}{{Hh{c}}}Hl}{{{b{{Fl{Gd}}}}}Al}`{{Idc}Id{{In{If}{{G`{If}}}}}}```{c{{Hh{c}}}Hl}<{DfIj}{GdIj}{{{b{hIb}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{hI`}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}`````````````{{{b{Id}}c}AhCd}{{{b{If}}c}AhCd}{{{b{Ih}}c}AhCd}{{{b{Ij}}c}AhCd}{{{b{Il}}c}AhCd}``{{{b{c}}}e{}{}}0000`{c{{Ah{e}}}{}{}}000000000000000{{Id{Cb{An}}}{{Bd{{Hh{J`}}}}}}`{{{b{c}}}Cf{}}0000000{{{b{hId}}{b{Jb}}}f}{ce{}{}}0000000{{IdAf}Id}{{Id{Cb{{Eb{{Fl{Df}}}}}}}Id}{{If{Cb{c}}}If{{Hb{Ij}}}}{{IfAl}If}{{Id{Cb{{Eb{{Dh{Jd}}}}}}}Id}{{IfIh}If}{{IfGd}If}{{IdAl}Id}0{{Id{Cb{Af}}}Id}1500{{If{Cb{Il}}}If}{{IdIf}Id}{{Id{Cb{c}}}Id{{Hb{An}}}}{{Id{Cb{{Eb{{Dh{Af}}}}}}}Id}{{If{Cb{Gd}}}If}66{{Id{Cb{j}}}Id}>{{Id{Cb{Hn}}}Id}09??<<`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Jb}}}Jb}{{{b{c}}{b{he}}}f{}{}}{{}Jb}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{Jb}}{b{hBf}}}Bh}{cc{}}{{{b{Jb}}}Af}{{{b{Jb}}}Hn}{{{b{Jf}}Gd{Cb{Af}}Al{Cb{{b{Dd}}}}AfAf{Cb{{b{Ij}}}}{Cb{Gd}}Gd{Cb{{b{Il}}}}AlAl{b{h{Cb{Af}}}}Al}{{Bd{{Ed{DdAfAf}}}}}}{{}Af}{ce{}{}}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}{{{b{Jf}}{b{Id}}}{{Bd{Jb}}}}1{{{b{c}}}Cf{}}4{{JbHn}Jb}`````````{{{b{c}}d}f{}}00`{{{Jh{c}}{b{Dd}}}{{Bd{{Jj{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Jl}}}Jl}{{{b{Jn}}}Jn}{{{b{K`}}}K`}{{{b{c}}{b{he}}}f{}{}}00``{{}Jl}{{}Jn}{{}K`}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Jl}}}Aj}{c{{Ah{Jn}}}Aj}{c{{Ah{K`}}}Aj}{Aff}0000{{{b{Jl}}{b{Jl}}}Al}{{{b{Jn}}{b{Jn}}}Al}{{{b{K`}}{b{K`}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000{{{b{h{Jh{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Jj{c}}}}}{{Bd{f}}}Ad}`{{{b{Jl}}{b{hBf}}}Bh}{{{b{Jn}}{b{hBf}}}Bh}{{{b{K`}}{b{hBf}}}Bh}{cc{}}0000{{{b{Jl}}{b{hc}}}fBj}{{{b{Jn}}{b{hc}}}fBj}{{{b{K`}}{b{hc}}}fBj}{{{Jh{c}}Al}{{Jh{c}}}Ad}`0`{{}Af}0000{ce{}{}}0000``{{{Jh{c}}Af}{{Jh{c}}}Ad}{c{{Jh{c}}}Ad}````{{{b{Jl}}c}AhCd}{{{b{Jn}}c}AhCd}{{{b{K`}}c}AhCd}``{{{b{c}}}e{}{}}00{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Jh{c}}Kb}{{Jh{c}}}Ad}{{{Jh{c}}{Cb{Df}}}{{Jh{c}}}Ad}0{{{Jh{c}}{Cb{Af}}}{{Jh{c}}}Ad}{{{Jh{c}}Df}{{Jh{c}}}Ad}0{{{Jh{c}}Gd}{{Jh{c}}}Ad}{{{Jh{c}}K`}{{Jh{c}}}Ad}14{{{b{h{Jj{c}}}}{b{Bb}}}{{Bd{f}}}Ad}```{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{cc{}}{{}Kd}{{}Af}{{c{Cb{{b{Dl}}}}}{{Bd{{Dh{{Eb{Kf}}}}}}}{{H`{{Fl{{Eb{Dj}}}}}}}}{ce{}{}}{c{{Ah{e}}}{}{}}0{{{b{Kf}}}{{Bd{J`}}}}0{{{b{c}}}Cf{}}{{{b{Kf}}Kd}f}{{{b{Kf}}}{{b{{Eb{Dj}}}}}}5``````````````{{{b{c}}d}f{}}000{{{b{h{Kh{c}}}}}{{Bd{Cj}}}Bl}{{{Kj{c}}{b{Dd}}}{{Bd{{Kl{c}}}}}Ad}{{{Kj{c}}{b{Dd}}}{{Bd{{`{c}}}}}{KnElL`}}{{{b{c}}}{{b{e}}}{}{}}00000000000{{{b{hc}}}{{b{he}}}{}{}}00000000000{{{b{Lb}}}Lb}{{{b{Ld}}}Ld}{{{b{Lf}}}Lf}{{{b{Lh}}}Lh}{{{b{c}}{b{he}}}f{}{}}000`{{{b{Lj}}{Cb{{b{Ll}}}}}{{Bd{Ln}}}}{{{b{M`}}c}{{Ab{A`}}}Ad}{{{b{Mb}}c}{{Ab{A`}}}Ad}{{{b{Lj}}{Cb{{b{Ll}}}}LdAl}{{Bd{Bb}}}}{{}M`}{{}Mb}{{}Ld}{{}Lf}{{}Lh}{Af{{b{c}}}{}}00000000000{Af{{b{hc}}}{}}00000000000{c{{Ah{Lb}}}Aj}{c{{Ah{Lf}}}Aj}{c{{Ah{Lh}}}Aj}{Aff}00000000000{{{b{Lb}}{b{Lb}}}Al}{{{b{Lf}}{b{Lf}}}Al}{{{b{Lh}}{b{Lh}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{b{M`}}}An}{{{b{Mb}}}An}{{{Md{c}}}{{Bd{Bb}}}Hl}{{{Kh{c}}}{{Bd{Bb}}}Bl}{{{b{h{Mf{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kj{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{b{h{Kl{c}}}}}{{Bd{f}}}Ad}{{{Md{c}}{Cb{{Eb{Hj}}}}Al}{{Bd{Bb}}}Hl}{{{b{Lb}}{b{hBf}}}Bh}{{{b{Lf}}{b{hBf}}}Bh}{{{b{Lh}}{b{hBf}}}Bh}{cc{}}00000000000{{{b{Dj}}{Cb{{b{Dl}}}}}{{Bd{Lj}}}}{{{b{Lb}}{b{hc}}}fBj}{{{b{Lf}}{b{hc}}}fBj}{{{b{Lh}}{b{hc}}}fBj}{{}Af}00000000000{ce{}{}}00000000000``{{{Md{c}}{Cb{An}}}{{Md{c}}}Hl}{{{b{Lj}}}{{Bd{Ll}}}}{c{{Md{c}}}Hl}{c{{Kh{c}}}Bl}{c{{Mf{c}}}Ad}{{}M`}{c{{Kj{c}}}Ad}{{}Mb}{c{{Kj{c}}}{KnElL`}}{{{b{h{Md{c}}}}}{{Bd{Mh}}}Hl}{{{b{h{Kh{c}}}}}{{Bd{Dd}}}Bl}{{{b{Lb}}c}AhCd}{{{b{Lf}}c}AhCd}{{{b{Lh}}c}AhCd}{{{Md{c}}Al}{{Md{c}}}Hl}{{{Kh{c}}Al}{{Kh{c}}}Bl}{{{b{c}}}e{}{}}000{c{{Ah{e}}}{}{}}00000000000000000000000{{{b{c}}}Cf{}}00000000000{ce{}{}}00000000000{{{Md{c}}{Cb{{Dh{Df}}}}}{{Md{c}}}Hl}{{{Kh{c}}{Cb{{Dh{Df}}}}}{{Kh{c}}}Bl}{{{Mf{c}}{Cb{Lh}}}{{Mf{c}}}{}}{{M`{Cb{Lh}}}M`}{{{Kj{c}}{Cb{Lh}}}{{Kj{c}}}Ad}{{Mb{Cb{Lh}}}Mb}{{M`An}M`}{{MbAn}Mb}{{{Md{c}}{Cb{Af}}}{{Md{c}}}Hl}{{{Kh{c}}{Cb{Af}}}{{Kh{c}}}Bl}{{{Mf{c}}Al}{{Mf{c}}}{}}{{{Kj{c}}Al}{{Kj{c}}}Ad}{{Ldc}Ld{{Hb{{Cb{{Eb{Hj}}}}}}}}{{{Md{c}}{Cb{{Dh{Af}}}}}{{Md{c}}}Hl}{{{Kh{c}}{Cb{{Dh{Af}}}}}{{Kh{c}}}Bl}{{Ld{Cb{{Eb{{Fl{Df}}}}}}}Ld}{{{Md{c}}{Cb{j}}}{{Md{c}}}Hl}{{{Kh{c}}{Cb{j}}}{{Kh{c}}}Bl}{{Ldc}Ld{{Hb{{Cb{j}}}}}}{{Ldc}Ld{{Hb{{Cb{Af}}}}}}{{{b{h{Kl{c}}}}{b{Bb}}}{{Bd{f}}}Ad}```````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{Mj}}}Mj}{{{b{c}}{b{he}}}f{}{}}{{}Mj}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{Mj}}}Aj}{Aff}0000{{{b{Mj}}{b{Mj}}}Al}{{{b{c}}{b{e}}}Al{}{}}00{{{b{h{Ml{c}}}}{b{hBb}}}{{Bd{f}}}Ad}{{{Mn{c}}}{{Bd{Bb}}}Hl}{{{b{Mj}}{b{hBf}}}Bh}{cc{}}0000{{{b{Mj}}{b{hc}}}fBj}{{{Mn{c}}{Cb{Kb}}}{{Mn{c}}}Hl}{{}Af}0000{ce{}{}}0000`{c{{Ml{c}}}Ad}{c{{N`{c}}}Ad}{c{{Mn{c}}}Hl}{{{b{Mj}}c}AhCd}{{{Mn{c}}Al}{{Mn{c}}}Hl}{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000088888{{{Mn{c}}Kb}{{Mn{c}}}Hl}4{{{Ml{c}}Nb}{{Ml{c}}}Ad}{{{Mn{c}}Nb}{{Mn{c}}}Hl}{{{Mn{c}}{Cb{{Dh{Df}}}}}{{Mn{c}}}Hl}{{{Mn{c}}Hn}{{Mn{c}}}Hl}{{{Mn{c}}{b{Dd}}}{{Mn{c}}}Hl}{{{b{h{N`{c}}}}{b{Bb}}}{{Bd{f}}}Ad}`````{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{Jf}}}{{b{{Fl{Gd}}}}}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{b{hc}}}JfHl}{cc{}}{{}Af}{ce{}{}}{{{b{Hl}}}{{Cb{{b{{Fl{Gd}}}}}}}}{{{b{Hl}}}{{Cb{{b{J`}}}}}}{{{b{Nd}}}{{Bd{J`}}}}{c{{Ah{e}}}{}{}}0{{{b{c}}}Cf{}}5`{{{b{hc}}{Cb{Kb}}}{{Bd{Dd}}}Nf}``{{{b{c}}d}f{}}{{{b{Nh}}Af}{{Ed{NhNh}}}}{Nh{{Eb{Nj}}}}{{{b{Nh}}}{{b{Nl}}}}{{{b{hNh}}}{{b{hNl}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{Nh{{Ab{Nj}}}}{{{b{Nh}}Af}Al}{{{b{Nh}}}Nh}{{{b{c}}{b{he}}}f{}{}}{{{Nn{c}}}{{Bd{Af}}}Hl}{{{b{Nh}}}{{b{O`}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{Aff}0{{{b{Nh}}{b{Nh}}}Al}{{{b{Nh}}{b{{b{Nj}}}}}Al}{{{b{Nh}}}{{b{{Fl{Ob}}}}}}{{{Nn{c}}}{{Bd{Bb}}}Hl}{{{b{Nh}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}{OdNh}{OfNh}2{c{{Bd{{Nn{J`}}}}}{{Hb{An}}}}{{{b{O`}}}{{b{{Fl{Ob}}}}}}{{{Nn{c}}{Cb{Kb}}}{{Nn{c}}}Hl}{{}Af}0{ce{}{}}0{Nh{{Ed{{Dh{Ob}}{Dh{{Ab{Nj}}}}{Cb{Oh}}}}}}{{{b{Nh}}}}{{{b{Nh}}}{{A@`{{Dh{{Ab{Oj}}}}OlOn}}}}{{{b{Nh}}}Af}{{{Nn{c}}Al}{{Nn{c}}}Hl}{c{{Nn{c}}}Hl}{{O`{Dh{{Ab{Nj}}}}{Cb{Oh}}}Nh}{O`Nh}{{O`Af}Nh}{{{b{hNh}}{Cb{Oh}}}f}{{{b{hNh}}AfAf}f}0{{{b{c}}AfAf}e{}{}}011{{NhAfAf}Nh}0{{{b{Nh}}Af}{{Ed{{Ab{Nj}}{Ab{Nj}}}}}}0{{{b{hNh}}}{{Cb{Oh}}}}{{{b{Nh}}}{{Ab{Nj}}}}{{{b{c}}}e{}{}}{{{b{Nh}}{b{Nh}}}Oh}{{{b{Nh}}b}Oh}10{c{{Ah{e}}}{}{}}000{{O`{Dh{{Ab{Nj}}}}{Cb{Oh}}}{{Ah{NhA@b}}}}{{{b{c}}}Cf{}}0{{{b{Nh}}}{{Cb{{b{Oh}}}}}}0{{{b{Nh}}}{{b{{Fl{{Ab{Nj}}}}}}}}{{{b{Nh}}}Ol}{ce{}{}}0{{{Nn{c}}{Cb{Kb}}}{{Nn{c}}}Hl}{{{Nn{c}}Al}{{Nn{c}}}Hl}{{{Nn{c}}{Cb{Af}}}{{Nn{c}}}Hl}0{{{Nn{c}}{Cb{e}}}{{Nn{c}}}Hl{{Hb{An}}}}{{{Nn{c}}{Cb{{Eb{Hj}}}}}{{Nn{c}}}Hl}{{{Nn{c}}{Cb{{Eb{{Fl{Df}}}}}}}{{Nn{c}}}Hl}4{{{Nn{c}}{Cb{{b{hj}}}}}{{Nn{c}}}Hl}{{{Nn{c}}Hn}{{Nn{c}}}Hl}{{{Nn{c}}{b{Dd}}}{{Nn{c}}}Hl}{{Nh{Cb{Oh}}}Nh}{{{b{Nh}}{Cb{Oh}}}{{Ab{Nj}}}}``````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{A@d}}}A@d}{{{b{c}}{b{he}}}f{}{}}{{{b{A@d}}Af}A@f}``{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{{{b{Ob}}{b{A@h}}}{{Ah{A@jA@b}}}}`{Aff}0{{{b{A@j}}{b{A@j}}}Al}{{{b{A@j}}{b{hBf}}}{{Ah{fDb}}}}{{{b{A@d}}{b{hBf}}}{{Ah{fDb}}}}{A@lA@j}{cc{}}0{{}Af}0{ce{}{}}0{A@dA@n}{{{b{A@d}}}{{b{{Cb{{Dh{AA`}}}}}}}}``````{{{b{A@d}}}{{b{AAb}}}}`{{{b{c}}}e{}{}}{c{{Ah{e}}}{}{}}0{A@n{{Ah{A@dAAd}}}}11{{{b{c}}}Cf{}}0`77`````````{{{b{c}}d}f{}}0{{{AAf{c}}Af}{{Bd{AAh}}}Hl}{{AAjAf}{{Bd{AAh}}}}{{{b{c}}}{{b{e}}}{}{}}0000{{{b{hc}}}{{b{he}}}{}{}}0000{{{b{AAl}}}AAl}{{{b{AAn}}}AAn}{{{b{c}}{b{he}}}f{}{}}0{{}AAn}{Af{{b{c}}}{}}0000{Af{{b{hc}}}{}}0000{c{{Ah{AAl}}}Aj}{c{{Ah{AAn}}}Aj}{Aff}0000{{{b{AAl}}{b{AAl}}}Al}{{{b{AAn}}{b{AAn}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000{{{AAf{c}}}{{Bd{Bb}}}Hl}{AAj{{Bd{Bb}}}}{{{b{AAh}}Af}Al}{{{b{AAl}}{b{hBf}}}Bh}{{{b{AAn}}{b{hBf}}}Bh}{cc{}}0000{{{b{Dj}}{Cb{{b{Dl}}}}{Cb{Mh}}{Cb{AB`}}}{{Bd{AAj}}}}{{{b{h{AAf{c}}}}}{{Bd{{b{AB`}}}}}Hl}{{{b{hAAj}}}{{Bd{{b{AB`}}}}}}{{{b{AAl}}{b{hc}}}fBj}{{{b{AAn}}{b{hc}}}fBj}{{}Af}0000{ce{}{}}0000{{{b{AAh}}}Al}`0`{{{Cb{{b{{Fl{Af}}}}}}{b{Cj}}{Cb{{b{{Fl{ABb}}}}}}{Cb{{b{j}}}}}Bb}`{c{{AAf{c}}}Hl}{{{b{hAAh}}Af}{{Bd{{Cb{{Dh{Bb}}}}}}}}{{{b{h{AAf{c}}}}}{{Bd{Af}}}Hl}{{{b{hAAj}}}{{Bd{Af}}}}`{{{AAf{c}}AAn}{{AAf{c}}}Hl}{{AAjAAn}AAj}{{{b{AAh}}}{{b{Mh}}}}{{{b{h{AAf{c}}}}}{{Bd{Mh}}}Hl}{{{b{hAAj}}}{{Bd{Mh}}}}{{{b{AAl}}c}AhCd}{{{b{AAn}}c}AhCd}{{{AAf{c}}Al}{{AAf{c}}}Hl}0{{AAjAl}AAj}{{{b{c}}}e{}{}}0{c{{Ah{e}}}{}{}}000000000{{{b{c}}}Cf{}}000043`{ce{}{}}0000{{{AAf{c}}{Cb{{Dh{Df}}}}}{{AAf{c}}}Hl}{{{AAf{c}}{Cb{{Dh{ABb}}}}}{{AAf{c}}}Hl}{{AAj{Cb{{Dh{ABb}}}}}AAj}{{{AAf{c}}{Cb{Af}}}{{AAf{c}}}Hl}{{AAj{Cb{Af}}}AAj}{{{AAf{c}}{Cb{{Eb{Hj}}}}}{{AAf{c}}}Hl}{{AAj{Cb{{Eb{Hj}}}}}AAj}{{{AAf{c}}{Cb{{Dh{Af}}}}}{{AAf{c}}}Hl}{{AAj{Cb{{Dh{Af}}}}}AAj}{{{AAf{c}}{Cb{j}}}{{AAf{c}}}Hl}{{AAj{Cb{j}}}AAj}{{{AAf{c}}{Cb{Mh}}}{{AAf{c}}}Hl}````````````````{{{b{c}}d}f{}}00000{{{ABd{c}}{b{Dd}}}{{Bd{{ABf{c}}}}}Ad}{{{b{c}}}{{b{e}}}{}{}}0000000{{{b{hc}}}{{b{he}}}{}{}}0000000{{{b{ABh}}}ABh}{{{b{ABj}}}ABj}{{{b{ABl}}}ABl}{{{b{ABn}}}ABn}{{{b{AC`}}}AC`}{{{b{ACb}}}ACb}{{{b{c}}{b{he}}}f{}{}}00000``{{}ABh}{{}ABj}{{}ACb}{Af{{b{c}}}{}}0000000{Af{{b{hc}}}{}}0000000{c{{Ah{ABh}}}Aj}{c{{Ah{ABj}}}Aj}{c{{Ah{ABl}}}Aj}{c{{Ah{ABn}}}Aj}{c{{Ah{AC`}}}Aj}{c{{Ah{ACb}}}Aj}`{Aff}00000009{{{b{{ABf{c}}}}{b{Bb}}}{{`{{ACf{}{{Hd{{Bd{{ACd{A@b}}}}}}}}}}}Ad}{{{b{ABh}}{b{ABh}}}Al}{{{b{ABj}}{b{ABj}}}Al}{{{b{ABl}}{b{ABl}}}Al}{{{b{ABn}}{b{ABn}}}Al}{{{b{AC`}}{b{AC`}}}Al}{{{b{ACb}}{b{ACb}}}Al}{{{b{c}}{b{e}}}Al{}{}}00000000000000000{{{b{{ABf{c}}}}}{{Bd{Kd}}}Ad}{{{ABd{c}}{b{hBb}}}{{Bd{Kd}}}Ad}{{{b{ABh}}{b{hBf}}}Bh}{{{b{ABj}}{b{hBf}}}Bh}{{{b{ABl}}{b{hBf}}}Bh}{{{b{ABn}}{b{hBf}}}Bh}{{{b{AC`}}{b{hBf}}}Bh}{{{b{ACb}}{b{hBf}}}{{Ah{fDb}}}}{cc{}}0000000{{}ACb}{{{b{{ABf{c}}}}}{{b{{ACj{{ACh{c}}}}}}}Ad}{{{b{ABh}}{b{hc}}}fBj}{{{b{ABj}}{b{hc}}}fBj}{{{b{ABl}}{b{hc}}}fBj}{{{b{ABn}}{b{hc}}}fBj}{{{b{AC`}}{b{hc}}}fBj}{{{b{ACb}}{b{hc}}}fBj}{{}Af}0000000{ce{}{}}0000000{{{b{ACb}}}Al}0```{c{{ABd{c}}}{AdAd}}``{{{b{ABh}}c}AhCd}{{{b{ABj}}c}AhCd}{{{b{ABl}}c}AhCd}{{{b{ABn}}c}AhCd}{{{b{AC`}}c}AhCd}{{{b{ACb}}c}AhCd}{{{ABd{c}}Al}{{ABd{c}}}Ad}`{{{b{c}}}e{}{}}00000{c{{Ah{e}}}{}{}}000000000000000{Gd{{Bd{ABl}}}}{ACl{{Bd{ABn}}}}{ACn{{Bd{AC`}}}}{{{b{c}}}Cf{}}0000000????????{{{ABd{c}}ABj}{{ABd{c}}}Ad}{{{ABd{c}}{Cb{Af}}}{{ABd{c}}}Ad}0{{{ABd{c}}ACb}{{ABd{c}}}Ad}{{{b{h{ABf{c}}}}{b{Bb}}}{{Bd{f}}}Ad}{{{b{{ABf{c}}}}{Dh{{ACd{A@b}}}}}{{Bd{f}}}Ad}`{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{Af{{b{c}}}{}}{Af{{b{hc}}}{}}{Aff}{{{AD`{c}}{b{Bb}}}{{Bd{f}}}{nL`ADb}}{cc{}}{{}Af}{ce{}{}}{{cei}{{AD`{c}}}{nL`ADb}{{Hb{An}}}{{H`{Dj}}}{{Hf{}{{Hd{g}}}}}}{c{{Ah{e}}}{}{}}0{{{b{c}}}Cf{}}3{{{AD`{c}}Al}{{AD`{c}}}{nL`ADb}}``{{{b{ADd}}c}{}ADf}{{{b{ADd}}c}{}{ADfL`}}>=<;:8{{}{{b{ADd}}}}87{{{b{ADh}}}Kd}{{{b{ADd}}c}ADj{ADfL`}}77{{ACle}{}ADf{{Gb{}{{G`{c}}}}}}7:0````{{{b{hBb}}{Cb{{b{Hj}}}}Al}{{Bd{f}}}}{{{b{Hj}}}{{Cb{{b{ADl}}}}}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{hc}}}{{b{he}}}{}{}}0{{{b{ADn}}}{{b{{Fl{AE`}}}}}}{Af{{b{c}}}{}}0{Af{{b{hc}}}{}}0{c{{Ah{AE`}}}Aj}{c{{Ah{ADn}}}Aj}{Aff}0{{{b{AE`}}}{{b{Jd}}}}{{{b{Hj}}{b{Bb}}}{{Bd{ABb}}}}{{{b{AE`}}{b{hBf}}}Bh}{{{b{ADn}}{b{hBf}}}Bh}{cc{}}0{ABbAE`}{AEbAE`}{{{b{AE`}}}{{Cb{{b{ABb}}}}}}00{{{b{ADn}}{b{Dj}}}{{Bd{{b{AE`}}}}}}{{}Af}0{ce{}{}}0{{AEb{Cb{ABb}}{Cb{ABb}}{Cb{ABb}}}AE`}{{Hn{Dh{AE`}}{Cb{Af}}}ADn}{{{b{AE`}}}{{Cb{Af}}}}{{{b{ADn}}}{{Cb{Af}}}}{{{b{ADn}}}{{b{Hn}}}}{{{b{AE`}}c}AhCd}{{{b{ADn}}c}AhCd}{{{b{ADl}}{b{ADn}}}{{Bd{Al}}}};;{{{b{AE`}}}{{Cb{ABb}}}}{c{{Ah{e}}}{}{}}000{{{b{c}}}Cf{}}0;;```{B`{{Bd{Bb}}}}{{{b{hA`}}{b{hBb}}}{{Bd{f}}}}{cB`Bl}{cA`Ad}{{B`Al}B`}00`````{{{b{Cj}}{b{Cj}}{Cb{{b{{Fl{Df}}}}}}{b{Dj}}}{{Bd{f}}}}{{{b{Dd}}{b{Dd}}{Cb{{b{{Fl{Df}}}}}}{b{Dj}}}{{Bd{f}}}}0{{{b{hc}}}{{Bd{Jf}}}{BlHlAEd}}{{cAf}{{Dh{{Ed{AfAf}}}}}{{ACf{}{{Hd{Af}}}}}}{cAl{{H`{Nd}}}}{{{Cb{{b{{Fl{Df}}}}}}{b{Dd}}{Cb{{b{{Fl{ABb}}}}}}Al}{{Cb{{Dh{Af}}}}}}{{{b{Nd}}}An}","D":"CKl","p":[[1,"reference"],[5,"Private",1826],[1,"unit"],[0,"mut"],[5,"RowIndex",0,1827],[5,"HiveOptions",0,1827],[10,"WriterFactory",0,1828],[10,"SerWriter",1803,1828],[5,"Box",1829],[10,"Write",1830],[1,"usize"],[6,"Result",1831],[10,"Deserializer",1832],[1,"bool"],[5,"PathBuf",1833],[10,"SerReader",1803,1828],[5,"DataFrame",1834],[8,"PolarsResult",1835],[5,"Formatter",1836],[8,"Result",1836],[10,"Hasher",1837],[10,"Read",1830],[10,"ArrowReader",0,1828],[8,"RecordBatch",1838],[6,"Option",1839],[10,"Serializer",1840],[5,"TypeId",1841],[5,"AvroReader",82,1842],[5,"ArrowSchema",1843],[10,"Seek",1830],[6,"AvroCompression",82],[5,"AvroWriter",82,1844],[5,"Error",1836],[5,"Schema",1845],[5,"String",1846],[5,"Vec",1847],[1,"str"],[5,"CloudOptions",219],[5,"CloudLocation",148,1848],[10,"ObjectStore",1849],[5,"Arc",1850],[1,"tuple"],[5,"PolarsObjectStore",148,1851],[5,"Path",1852],[10,"AsyncWrite",1853],[10,"Unpin",1854],[5,"CloudWriter",148,1855],[5,"Error",1856],[10,"Command",1857],[8,"Result",1856],[5,"Url",1858],[5,"Bytes",1859],[5,"Range",1860],[1,"slice"],[5,"ObjectMeta",1849],[17,"Output"],[10,"FnOnce",1861],[1,"u8"],[10,"VarInt",1862],[6,"AmazonS3ConfigKey",219,1863],[6,"AzureConfigKey",219,1864],[6,"GoogleConfigKey",219,1865],[6,"CloudType",219],[10,"AsRef",1866],[10,"Into",1866],[17,"Item"],[10,"IntoIterator",1867],[5,"CsvReader",401,1868],[10,"PhysicalIoExpr",1749],[10,"MmapBytesReader",1189],[8,"SchemaRef",1845],[5,"OwnedBatchedCsvReader",401,1869],[5,"BatchedCsvReader",401,1869],[5,"CsvReadOptions",401,1870],[5,"CsvParseOptions",401,1870],[6,"CsvEncoding",401,1870],[6,"CommentPrefix",401,1870],[6,"NullValues",401,1870],[10,"Fn",1861],[5,"File",1871],[5,"SchemaInferenceResult",655],[6,"DataType",1872],[6,"ReaderBytes",1189],[5,"CsvWriter",679,1873],[5,"BatchedWriter",679,1873],[5,"CsvWriterOptions",679,1874],[5,"SerializeOptions",679,1874],[6,"QuoteStyle",679,1874],[8,"NonZeroUsize",1875],[1,"u64"],[5,"FileCacheEntry",819,1876],[5,"IpcStreamReader",840,1877],[5,"IpcWriter",840,1878],[5,"BatchedWriter",840,1878],[10,"AsyncWrite",1879],[10,"Send",1854],[5,"IpcScanOptions",840,1880],[5,"IpcReadOptions",840,1881],[5,"IpcWriterOptions",840,1878],[6,"IpcCompression",840,1878],[5,"IpcReaderAsync",840,1881],[5,"FileMetadata",1882],[1,"i64"],[5,"IpcStreamWriterOption",840,1877],[5,"IpcWriterOption",840,1878],[5,"IpcReader",840,1880],[5,"IpcStreamWriter",840,1877],[8,"ArrowSchemaRef",1843],[5,"JsonWriterOptions",1093],[5,"JsonWriter",1093],[5,"JsonReader",1093],[5,"BatchedWriter",1093],[6,"JsonFormat",1093],[5,"Path",1833],[10,"BufRead",1830],[5,"StructArray",1213,1883],[10,"Array",1884],[10,"Any",1841],[5,"JsonLineReader",1213],[6,"ArrowDataType",1885],[5,"Field",1886],[5,"MutableStructArray",1887],[5,"GrowableStruct",1888],[5,"Bitmap",1889],[10,"Scalar",1890],[5,"StructValueIter",1891],[5,"BitmapIter",1892],[6,"ZipValidity",1893],[6,"PolarsError",1835],[5,"FileMetaData",1308,1894],[6,"ColumnOrder",1895],[5,"RowGroupMetaData",1896],[5,"ParquetStatistics",1308],[5,"MutableStatistics",1897],[5,"FileMetaData",1898],[5,"KeyValue",1898],[5,"SchemaDescriptor",1899],[6,"ParquetError",1900],[5,"ParquetReader",1360,1901],[5,"BatchedParquetReader",1360,1902],[5,"ParquetAsyncReader",1360,1901],[5,"ParquetOptions",1360,1903],[6,"ParallelStrategy",1360,1903],[8,"FileMetaDataRef",1308],[5,"Series",1904],[5,"ParquetWriter",1496,1905],[5,"BatchedWriter",1496,1906],[5,"ParquetWriteOptions",1496,1907],[6,"ParquetCompression",1496,1907],[5,"GzipLevel",1496,1907],[5,"BrotliLevel",1496,1907],[5,"ZstdLevel",1496,1907],[5,"StatisticsOptions",1496,1908],[8,"RowGroupIterColumns",1496,1909],[10,"Iterator",1910],[5,"FileWriter",1911],[5,"Mutex",1912],[1,"u32"],[1,"i32"],[5,"PartitionedWriter",1712],[10,"Sync",1854],[5,"RuntimeManager",1728],[10,"Future",1913],[10,"GetSize",1728],[5,"JoinHandle",1914],[10,"StatsEvaluator",1749],[5,"BatchStats",1749],[5,"ColumnStats",1749],[5,"Field",1915],[10,"Sized",1854]],"r":[[0,1828],[1,1827],[2,1827],[3,1828],[4,1828],[5,1828],[83,1842],[84,1844],[85,1916],[148,1848],[149,1855],[150,1851],[159,1917],[187,1848],[222,1863],[227,1864],[251,1865],[403,1869],[404,1870],[405,1870],[406,1870],[407,1870],[408,1868],[412,1870],[413,1869],[453,1918],[533,655],[552,1919],[680,1873],[681,1873],[682,1874],[686,1874],[687,1874],[819,1920],[820,1921],[821,1876],[828,1920],[830,1921],[840,1878],[841,1878],[842,1881],[843,1880],[844,1881],[845,1880],[846,1877],[847,1877],[848,1877],[849,1878],[850,1878],[851,1878],[1214,1883],[1308,1894],[1325,1897],[1361,1902],[1364,1903],[1365,1901],[1366,1903],[1367,1901],[1442,1922],[1496,1906],[1498,1907],[1500,1907],[1503,1907],[1504,1907],[1505,1905],[1506,1909],[1508,1908],[1511,1907],[1803,1828],[1804,1828],[1805,0]],"b":[[1236,"impl-PartialEq-for-StructArray"],[1237,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1242,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1243,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1262,"impl-Array-for-StructArray"],[1263,"impl-StructArray"],[1266,"impl-Array-for-StructArray"],[1267,"impl-StructArray"],[1286,"impl-Array-for-StructArray"],[1287,"impl-StructArray"],[1303,"impl-StructArray"],[1304,"impl-Array-for-StructArray"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEQFqAAAAAEAAwAPABQAAAAWABMAKwACADAABAA3AAAAOQACAD0AAgBCABAAWwAAAF0AFwB4AAMAfwABAIIADQCTAAAAmAAGAKEADgCyAAIAuAADAL4AAgDGAAAAyAAAAM0ADgDiAAEA7gAAAPoAAQD9AAAAEgEQACYBMQBdAQMAYgEIAHABHACUAQQAnQEBAKEBJADHATcAAAIEAAsCAAAOAhEAKgIAACwCAgAzAisAYAIIAGoCBwCCAgAAkAIKAJwCAQCfAgAAoQIGAKkCAACxAhQAyAIhAOwCAgD0AgIA+AIAAPoCBQAGAwIADQMDABIDFgA0AwcAPQMCAEEDAQBFAwQASwMAAE4DAABRAwAAUwMBAFcDAwBcAyEAfwM+AL8DAwDPAw8A7AMAAO4DBwD4AzgAOwQCAEAEAABDBAEARgQAAEwEIwBxBAAAdwQAAHkEBACFBBgAoAQBAKYEAQCpBAgAswQAALUEAQC4BAYAwAQBAMMEBQDKBAwA2AQBANsEAQDgBAIA5gQAAOgEAADvBAAA8QQCAPcEAQD6BAkABQUCAAsFAQAPBQgAGQUAAB4FAAAgBQYAKgUDADAFBQA4BQEARgUCAEoFAwBPBQEAUgUAAFUFAABXBQAAWgUwAJAFCQCfBQAAoQUDAKYFAACoBQEAqwUBAK4FAgCyBRIAxwUFAM4FAQDRBQIA1QUAANcFAADZBQEA3AUAAN4FAQDhBQAA4wUBAOYFAQDpBSIADgY7AEwGBQBaBg8AcgYBAHUGAQB4BgAAegYFAIIGKACwBgAAsgYFALkGAAC7BgQAwQYCAMUGBADLBgEAzgYAANAGBQDYBgIA3AYDAOEGBwDrBgEA9QYBAP4GAgAEBwoAEAcAABIHAAAWBwQAHQcBACEHAQA="}],\
["polars_lazy",{"t":"CQCCCPPGPPPPPPPPPPPPPFPPPPPPPPKPGPPPPGFPPPFFPPPPPPPPPPPPPPPPPPPPPPFPPPPPPPPPFPPPPPPPPPGPPPGKFPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPGPPPPPPGPPPPPPPPPPGPPPPPPPPPPKPPPPPPPPFPPPPPPPPKKPPPPPPPPPPFPPPPPPPGPPPPPPFPFPPPPPGPFPPPPPPPPPPPPPPPPPPPKPPPPFPPPPFPPGGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNOONHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNHNHNONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNHNNNHNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOIFKFFKFFFFIFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNOOOONNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNOONNNOONNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNONNNNONONNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNONNMNNOOOONNNNNOONNNOMNNCOONOONMNNOONNNNOOMNNOOONNNNNNONNNNNNNOONNNNNNONOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNMNNNMNNNNNNNNNNNNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPFKPPGFFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNOOOONONOOOOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","BinaryExpr","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","Columns","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","Exp","Explode","Explode","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","Operator","Or","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","Reverse","Reverse","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","Selector","SeriesBinaryUdf","SeriesUdf","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Slice","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructNameSpace","SubPlan","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithTimeUnit","Xor","Year","ZFill","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_into_selector","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","agg_groups","alias","all","all","all","all","all_horizontal","allow_parallel","ambiguous","and","any","any","any","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","arg_max","arg_max","arg_min","arg_min","arg_min","arg_sort","arg_sort_by","arg_unique","arg_where","args","args","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","binary","binary_expr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","bottom_k_by","business_day_count","cache","call","call","call_udf","call_udf","call_unchecked","cast","cast","cast_with_options","cat","cat","cbrt","ceil","clip","clip_max","clip_min","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","contains","cos","cosh","cot","count","count_matches","count_matches","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","cumulative_eval","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","default","default","default","default","default","default","default","default","default","degrees","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diff","diff","div","dot","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_nans","drop_nulls","drop_nulls","dt","dt","dtype_col","dtype_cols","duration","entropy","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq_missing","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","eval","eval","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","first","first","flatten","float_type","floor","floor_div","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fold_exprs","force_parallel","format","format_str","forward_fill","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_type","fun","function_expr","function_with_options","functions","gather","gather","gather_every","gather_every","get","get","get","get_categories","get_field","get_field","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","head","head","hist","hour","hours","implode","index_cols","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into_iter","into_list_name_space","into_list_name_space","into_tree_formatter","is_between","is_column","is_column_selection","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","is_not_null","is_null","is_null","is_regex_projection","is_simple_projection","is_unique","join","join","json_encode","keep","kurtosis","last","last","last","len","len","len","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","map","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","map_dtype","map_dtypes","map_expr","map_field","map_fields","map_fields","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","max","max","max","max_horizontal","mean","mean","mean","mean_horizontal","median","median","median","median","meta","microsecond","microseconds","milliseconds","min","min","min","min","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","n_unique","n_unique","name","name","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","new","new","new","new","nodes","nodes_owned","not","not","nth","null_count","options","or","otherwise","otherwise","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","quantile","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","reshape","return_type","reverse","reverse","reverse","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","sample_n","search_sorted","second","seconds","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","shift","shift","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","slice","sort","sort","sort","sort_by","spearman_rank_corr","sqrt","std","std","std","str","strict","strict_cast","string","struct_","sub","suffix","suffix_fields","sum","sum","sum","sum","sum_horizontal","super_type","tail","tail","tan","tanh","ternary_expr","then","then","time_ranges","time_unit","time_unit","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_physical","to_physical_type","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_string","to_struct","to_struct","to_uppercase","top_k","top_k_by","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","udf","undo_aliases","union","unique","unique","unique","unique_counts","unique_stable","unique_stable","unique_stable","upper_bound","value_counts","var","var","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","when","when","when","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","with_hms","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","input","interpol","propagate_nans","propagate_nans","quantile","closed","ignore_nulls","ignore_nulls","by","by","data_type","expr","expr","expr","expr","expr","falsy","function","function","function","function","idx","input","input","input","input","left","length","offset","op","options","options","options","options","options","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","Nanosecond","Negate","Not","NullCount","OffsetBy","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RepeatBy","Replace","Replace","ReplaceTimeZone","Reshape","Reverse","Reverse","RollingExpr","RollingExprBy","Round","Round","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithTimeUnit","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","ignore_nulls","allow_duplicates","base","base","bin_count","breaks","ddof","decimals","descending","descending","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","include_breaks","include_category","labels","labels","left_closed","left_closed","limit","limit","method","method","n","name","normalize","normalize","offset","options","options","options","options","parallel","probs","return_dtype","reverse","reverse","reverse","reverse","reverse","seed","seed","sort","delimiter","delimiter","dtype","dtype","fill_char","fill_char","ignore_nulls","ignore_nulls","inclusive","infer_schema_len","length","length","literal","literal","literal","n","n","pat","strict","strict","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","time_unit","time_zone","weeks","year","CALL_DF_UDF_PYTHON","CALL_SERIES_UDF_PYTHON","PythonFunction","PythonUdfExpression","__clone_box","borrow","borrow","borrow_mut","borrow_mut","call_udf","call_udf","clone","clone_into","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","eq","equivalent","equivalent","equivalent","fmt","from","from","from","get_output","init","init","into","into","new","serialize","to_owned","try_from","try_from","try_into","try_into","try_serialize","type_id","type_id","vzip","vzip","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","OptState","PathIterator","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","_collect_post_opt","_with_eager","agg","allow_parallel","anonymous_scan","anti_join","apply","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bottom_k","cache","cache","cache","cancel","cast","cast_all","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cloud_options","cloud_options","cloud_options","cloud_options","cluster_with_columns","cluster_with_columns","coalesce","collect","collect_concurrently","comm_subexpr_elim","comm_subexpr_elim","comm_subplan_elim","comm_subplan_elim","concat_impl","concat_impl","concat_impl","count","cross_join","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop_no_validate","drop_nulls","eager","eager","expand_paths","expand_paths","explain","explode","fast_projection","fast_projection","fetch","fetch","fetch_blocking","file_caching","file_caching","fill_nan","fill_null","filter","finish","finish","finish","finish","finish","finish_no_glob","finish_no_glob","finish_no_glob","first","fmt","force_parallel","from","from","from","from","from","from","from","from","from","from","from","from","full_join","get_current_optimizations","glob","glob","glob","glob","group_by","group_by_dynamic","group_by_stable","head","hive_options","how","infer_schema_length","init","init","init","init","init","init","init","init","init","init","inner_join","into","into","into","into","into","into","into","into","into","into","join","join_builder","join_nulls","last","lazy","lazy","left_join","left_on","limit","logical_plan","logical_plan","low_memory","low_memory","map","map_python","max","mean","median","melt","memory_map","merge_sorted","min","n_rows","n_rows","n_rows","n_rows","n_rows","n_rows","name","new","new","new","new_paths","new_paths","new_streaming","new_streaming","null_count","on","optimize","parallel","paths","paths","paths","pivot","predicate_pushdown","predicate_pushdown","profile","projection_pushdown","projection_pushdown","quantile","rechunk","rechunk","rechunk","rechunk","rechunk","rename","reverse","right_on","rolling","row_estimate","row_estimate","row_index","row_index","row_index","row_index","row_index","row_index","scan_from_python_function","scan_ipc","scan_ipc_files","scan_parquet","scan_parquet_files","schema","schema","schema_with_arenas","select","select_seq","semi_join","set_cached_arena","shift","shift_and_fill","simplify_expr","simplify_expr","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","slice_pushdown","slice_pushdown","sort","sort_by_exprs","std","streaming","streaming","suffix","sum","tail","tail","to_alp","to_alp_optimized","to_dot","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","top_k","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_coercion","type_coercion","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unique","unique_stable","unnest","use_statistics","validate","var","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with","with_batch_size","with_cache","with_cloud_options","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","with_ignore_errors","with_infer_schema_length","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_n_rows","with_new_streaming","with_null_values","with_optimizations","with_paths","with_paths","with_paths","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","with_rechunk","with_rechunk","with_row_estimate","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_row_index","with_schema","with_schema","with_schema_modify","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","Duration","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","Null","OneToMany","OneToOne","Ordinal","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","closed_window","closed_window","cmp","coalesce","compare","compression","compression","compute_schema","data_pagesize_limit","days","days_only","default","default","default","default","default","default","default","default","default","default","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","descending","describe","describe_tree_format","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","diagonal","display","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","every","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt_str","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_partitioned_ds","get_datatype","group_by_dynamic","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","how","include_bom","include_boundaries","include_header","index_column","index_column","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_asof","is_constant_duration","is_full_days","is_valid_join","is_zero","join_nulls","label","lit","lit","lit","lit","maintain_order","maintain_order","maintain_order","maintain_order","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","new","offset","offset","output_schema","parallel","parse","parsed_int","partial_cmp","period","period","predicate","rechunk","rolling","row_group_size","scan","schema","schema","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","suffix","to_alp","to_any_value","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_supertypes","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validation","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","weeks","weeks_only","with_coalesce","with_columns","with_suffix","aggs","apply","args","by_column","cache_hits","contexts","df","dsl","expr","exprs","file_info","file_options","filter","function","hive_parts","id","input","input","input","input","input","input","input","input","input","input","input","input_left","input_right","inputs","inputs","keys","left_on","len","maintain_order","node","offset","options","options","options","options","options","options","options","output_schema","paths","payload","predicate","predicate","right_on","scan_type","schema","slice","sort_options","version","data_type","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1468,"polars_lazy::dsl::AggExpr"],[1475,"polars_lazy::dsl::BooleanFunction"],[1478,"polars_lazy::dsl::Expr"],[1513,"polars_lazy::dsl::FunctionExpr"],[1558,"polars_lazy::dsl::StringFunction"],[1578,"polars_lazy::dsl::TemporalFunction"],[1580,"polars_lazy::dsl::binary"],[1600,"polars_lazy::dsl::cat"],[1601,"polars_lazy::dsl::dt"],[1657,"polars_lazy::dsl::function_expr"],[1864,"polars_lazy::dsl::function_expr::BooleanFunction"],[1867,"polars_lazy::dsl::function_expr::FunctionExpr"],[1912,"polars_lazy::dsl::function_expr::StringFunction"],[1932,"polars_lazy::dsl::function_expr::TemporalFunction"],[1934,"polars_lazy::dsl::function_expr::cat"],[1936,"polars_lazy::dsl::function_expr::pow"],[1940,"polars_lazy::dsl::function_expr::rolling"],[1972,"polars_lazy::dsl::function_expr::rolling_by"],[2003,"polars_lazy::dsl::function_expr::trigonometry"],[2045,"polars_lazy::dsl::functions"],[2120,"polars_lazy::dsl::python_udf"],[2165,"polars_lazy::dsl::string"],[2226,"polars_lazy::dsl::udf"],[2232,"polars_lazy::frame"],[2666,"polars_lazy::frame::pivot"],[2668,"polars_lazy::prelude"],[3261,"polars_lazy::prelude::DslPlan"],[3316,"polars_lazy::prelude::LiteralValue"],[3319,"dyn_clone::sealed"],[3320,"polars_plan::dsl::meta"],[3321,"polars_plan::dsl::expr"],[3322,"polars_error"],[3323,"core::result"],[3324,"polars_plan::dsl::array"],[3325,"polars_plan::dsl::list"],[3326,"core::convert"],[3327,"polars_plan::dsl::expr_dyn_fn"],[3328,"alloc::sync"],[3329,"polars_core::series"],[3330,"core::option"],[3331,"core::ops::function"],[3332,"core::marker"],[3333,"polars_plan::plans::visitor"],[3334,"polars_plan::dsl::function_expr"],[3335,"polars_core::datatypes::dtype"],[3336,"polars_core::chunked_array::ops::sort::options"],[3337,"polars_plan::dsl::function_expr::schema"],[3338,"polars_core::datatypes::field"],[3339,"core::any"],[3340,"alloc::vec"],[3341,"polars_plan::dsl::binary"],[3342,"core::clone"],[3343,"alloc::string"],[3344,"polars_plan::dsl::udf"],[3345,"polars_core::chunked_array::cast"],[3346,"polars_plan::dsl::cat"],[3347,"polars_plan::dsl::arity"],[3348,"polars_plan::dsl::function_expr::boolean"],[3349,"polars_plan::dsl::function_expr::cat"],[3350,"polars_plan::dsl::function_expr::datetime"],[3351,"polars_plan::dsl::function_expr::pow"],[3352,"polars_plan::dsl::function_expr::strings"],[3353,"polars_plan::dsl::functions::temporal"],[3354,"polars_plan::dsl::options"],[3355,"polars_core::utils"],[3356,"polars_lazy::dsl::eval"],[3357,"polars_time::windows::duration"],[3358,"polars_time::windows::group_by"],[3359,"polars_core::datatypes::time_unit"],[3360,"serde::de"],[3361,"polars_plan::plans"],[3362,"polars_core::series::ops"],[3363,"polars_plan::dsl::dt"],[3364,"polars_lazy::dsl::list"],[3365,"polars_arrow::legacy::kernels::ewm"],[3366,"polars_plan::dsl::struct_"],[3367,"polars_core::chunked_array::ops"],[3368,"core::fmt"],[3369,"polars_plan::plans::apply"],[3370,"polars_plan::dsl::function_expr::business"],[3371,"polars_plan::dsl::function_expr::array"],[3372,"polars_plan::dsl::function_expr::range"],[3373,"polars_plan::dsl::function_expr::list"],[3374,"polars_plan::dsl::function_expr::binary"],[3375,"polars_plan::dsl::function_expr::struct_"],[3376,"polars_plan::plans::options"],[3377,"polars_core::schema"],[3378,"core::hash"],[3379,"polars_ops::series::ops::interpolation::interpolate"],[3380,"polars_ops::series::ops::is_between"],[3381,"polars_plan::dsl::name"],[3382,"polars_plan::plans::lit"],[3383,"polars_plan::dsl::python_udf"],[3384,"polars_utils::idx_vec"],[3385,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3386,"polars_ops::series::ops::rank"],[3387,"polars_time::group_by::dynamic"],[3388,"polars_core::chunked_array::ops::rolling_window"],[3389,"polars_core::datatypes"],[3390,"polars_core::chunked_array"],[3391,"polars_time::chunkedarray::rolling_window"],[3392,"polars_core::chunked_array::ops::search_sorted"],[3393,"serde::ser"],[3394,"polars_core::series::series_trait"],[3395,"polars_plan::dsl::string"],[3396,"polars_ops::chunked_array::list::to_struct"],[3397,"polars_ops::series::ops::business"],[3398,"polars_arrow::legacy::kernels::time"],[3399,"polars_plan::dsl::function_expr::rolling"],[3400,"polars_plan::dsl::function_expr::rolling_by"],[3401,"polars_plan::dsl::function_expr::trigonometry"],[3402,"polars_core::frame"],[3403,"rayon::iter"],[3404,"pyo3::types::any"],[3405,"pyo3::instance"],[3406,"polars_utils::arena"],[3407,"polars_plan::plans::ir"],[3408,"polars_plan::plans::aexpr"],[3409,"polars_plan::plans::anonymous_scan"],[3410,"polars_lazy::scan::anonymous_scan"],[3411,"polars_utils::index"],[3412,"polars_lazy::frame::exitable"],[3413,"polars_utils::aliases"],[3414,"polars_lazy::scan::csv"],[3415,"polars_lazy::scan::ipc"],[3416,"polars_lazy::scan::ndjson"],[3417,"polars_lazy::scan::parquet"],[3418,"polars_plan::frame::opt_state"],[3419,"polars_lazy::scan::file_list_reader"],[3420,"polars_io::cloud::options"],[3421,"polars_ops::frame::join::args"],[3422,"core::iter::traits::collect"],[3423,"std::path"],[3424,"polars_core::frame::explode"],[3425,"polars_io::options"],[3426,"polars_io::csv::write::options"],[3427,"polars_io::ipc::write"],[3428,"polars_io::json"],[3429,"polars_io::parquet::write::options"],[3430,"smartstring::alias"],[3431,"core::num::nonzero"],[3432,"polars_io::csv::read::options"],[3433,"chrono_tz::timezones"],[3434,"core::cmp"],[3435,"polars_core::frame::group_by::proxy"],[3436,"polars_core::datatypes::any_value"],[3437,"chrono::naive::datetime"],[3438,"polars_plan::dsl::functions::selectors"],[3439,"polars_plan::dsl::functions::horizontal"],[3440,"polars_plan::dsl::functions::arity"],[3441,"polars_plan::dsl"],[3442,"polars_plan::dsl::functions::range"],[3443,"polars_plan::dsl::functions::index"],[3444,"polars_plan::dsl::functions::coerce"],[3445,"polars_plan::dsl::functions::syntactic_sugar"],[3446,"polars_plan::dsl::functions::business"],[3447,"polars_plan::dsl::functions::concat"],[3448,"polars_plan::dsl::functions::correlation"],[3449,"polars_plan::dsl::functions::repeat"]],"i":[0,0,0,0,0,27,5,0,36,5,55,55,40,5,55,55,27,27,27,67,27,0,27,27,27,59,59,57,5,27,0,27,0,27,5,57,27,0,0,58,27,57,0,0,27,27,5,5,57,27,59,59,59,57,27,36,59,27,27,27,27,27,27,57,57,57,0,57,57,27,40,27,27,54,5,57,0,59,27,40,40,27,27,27,27,5,0,27,5,66,0,0,0,27,59,59,59,5,0,0,27,27,5,59,36,27,40,27,5,0,0,27,5,27,58,56,0,66,40,40,27,59,59,59,27,57,36,5,27,27,0,55,55,55,55,55,55,55,57,55,55,55,55,55,57,66,0,59,59,5,27,36,5,59,59,67,27,0,0,5,27,27,40,40,27,59,40,40,36,27,36,27,36,0,57,57,57,36,27,40,57,27,40,57,57,57,40,36,54,57,27,0,55,40,40,5,27,57,0,40,57,65,59,59,27,27,27,40,27,0,27,36,57,27,27,27,27,27,27,5,0,27,59,27,57,27,59,27,65,0,27,27,57,27,27,27,57,5,0,0,27,27,27,27,27,27,5,59,5,5,0,59,59,59,58,59,36,27,0,59,59,59,59,59,59,0,27,0,5,36,27,59,27,0,5,0,57,57,59,59,59,27,57,27,27,57,57,57,57,57,57,57,27,40,57,0,27,27,27,59,0,27,36,57,57,0,5,5,0,0,57,40,57,59,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,4,4,4,4,4,5,5,5,5,0,9,10,5,0,64,60,5,9,10,5,0,5,5,0,5,5,5,0,5,0,5,5,5,5,5,5,5,9,10,5,9,10,5,5,0,5,0,32,64,5,34,36,0,0,5,0,5,0,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,5,5,0,63,44,46,34,47,46,0,5,5,0,5,5,5,5,5,5,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,0,0,0,0,0,0,9,10,5,5,5,5,9,10,0,5,0,5,5,5,0,5,70,70,5,0,0,0,0,60,61,62,5,17,17,17,60,61,63,64,65,66,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,36,5,54,40,17,17,17,55,56,57,58,59,27,62,63,64,65,66,67,10,5,5,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,5,10,5,0,5,0,0,0,5,36,5,5,54,40,17,17,55,56,57,58,59,27,62,63,64,65,66,67,5,5,5,5,54,54,54,40,40,40,55,55,55,56,56,56,57,57,57,58,58,58,59,59,59,62,62,62,63,63,63,64,64,64,65,65,65,66,66,66,67,67,67,82,82,5,5,5,5,63,5,5,5,5,5,84,84,84,5,5,5,5,0,10,5,5,17,5,5,34,47,44,88,5,5,54,40,40,17,55,55,56,56,57,57,58,58,59,59,27,27,60,61,62,63,64,65,66,67,46,0,64,63,0,5,49,9,32,10,4,108,84,50,51,52,53,36,5,5,5,5,5,5,5,5,5,5,5,5,5,5,54,40,17,17,17,17,17,17,17,17,17,17,17,17,55,56,57,58,59,27,27,27,27,27,60,61,62,63,64,65,65,66,67,46,17,46,0,5,0,10,5,10,5,9,10,5,49,76,15,32,34,88,5,5,4,36,5,5,54,40,55,56,57,58,59,27,62,63,64,65,66,67,10,5,5,60,61,5,0,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,46,0,0,5,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,5,105,10,4,5,4,4,5,5,5,5,5,5,5,5,0,5,0,5,4,4,5,9,10,84,108,5,0,10,5,0,10,5,5,0,5,5,5,5,5,5,5,108,5,0,5,32,32,17,17,5,17,108,17,5,0,5,5,0,32,5,32,32,32,32,0,9,10,5,0,0,10,5,0,0,9,10,5,5,60,61,61,0,9,10,5,0,62,60,61,5,60,5,9,10,5,5,46,5,5,61,5,5,5,32,32,17,60,61,46,5,5,0,5,0,5,46,5,51,53,4,5,5,5,5,5,0,5,4,5,108,108,5,0,5,5,0,5,5,5,0,5,5,84,0,5,5,32,5,46,9,10,5,5,5,5,0,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,5,5,64,64,17,5,10,10,5,5,60,61,36,5,54,40,17,17,17,55,56,57,58,59,27,62,63,64,65,66,67,10,10,5,10,9,10,5,5,5,5,5,5,5,5,10,5,9,10,5,5,0,5,9,10,5,5,63,5,0,5,5,108,108,0,9,10,5,0,17,10,5,5,5,0,50,52,0,60,61,60,10,5,9,108,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,5,32,5,40,55,56,57,58,59,27,9,10,108,5,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,32,32,5,32,34,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,0,4,10,9,10,5,5,9,10,5,5,5,9,10,5,49,9,32,10,4,108,84,50,51,52,53,36,5,54,40,17,55,56,57,58,59,27,60,61,62,63,64,65,66,67,46,61,0,51,53,62,60,60,61,32,84,61,60,61,60,61,60,61,61,60,61,60,61,32,32,60,61,60,60,61,60,5,60,196,197,198,196,197,198,196,199,200,201,202,203,204,204,205,206,202,207,208,209,210,211,207,206,209,203,212,211,213,212,212,213,204,205,209,210,211,210,211,210,208,206,213,202,208,214,215,216,217,218,219,220,221,222,223,224,225,225,217,218,214,217,218,214,218,214,226,227,219,228,229,230,230,215,229,231,232,233,234,230,214,235,236,237,238,239,240,231,228,230,241,242,243,244,245,246,241,242,247,244,245,246,248,249,250,250,247,243,248,249,251,251,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,27,55,55,55,55,27,27,27,27,27,27,27,59,59,57,27,27,0,27,57,27,0,58,27,57,27,27,57,27,59,59,59,57,27,59,27,27,27,27,27,27,57,57,57,57,57,27,27,27,57,59,27,27,27,27,27,27,27,59,59,59,27,27,59,27,27,0,27,27,58,56,27,59,59,59,27,57,27,27,55,55,55,55,55,55,55,57,55,55,55,55,55,57,59,59,27,59,59,27,27,27,27,59,27,27,57,57,57,27,57,27,57,57,57,57,27,55,27,57,57,59,59,27,27,27,27,0,27,57,27,27,27,27,27,27,27,59,27,57,27,59,27,27,27,57,27,27,27,57,27,27,27,27,27,27,59,59,59,59,58,59,27,0,59,59,59,59,59,59,27,27,59,27,0,57,57,59,59,59,27,57,27,27,57,57,57,57,57,57,57,27,57,27,27,27,59,27,57,57,57,57,59,0,0,0,0,0,199,200,201,214,215,216,217,218,219,220,221,222,223,224,225,225,217,218,214,217,218,214,218,214,226,227,219,228,229,230,230,215,229,231,232,233,234,230,214,235,236,237,238,239,240,231,228,230,241,242,243,244,245,246,241,242,247,244,245,246,248,249,250,250,247,243,248,249,251,251,0,56,58,58,0,58,130,130,130,130,0,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,130,131,131,131,131,0,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,131,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,132,0,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,61,0,0,0,0,0,60,61,0,0,0,0,0,0,0,0,0,60,61,61,0,60,61,60,61,0,0,0,0,0,0,0,60,61,0,0,0,0,60,61,60,61,60,0,0,0,0,139,111,139,111,139,111,139,139,139,111,139,111,139,139,111,139,139,139,139,139,139,111,139,139,111,111,139,111,139,111,139,139,111,139,111,139,111,111,139,111,139,0,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,125,0,46,46,46,46,46,0,0,0,0,0,0,0,0,0,0,0,0,0,0,153,136,147,150,155,156,157,158,159,136,136,147,148,136,136,147,148,153,136,147,150,155,156,157,158,159,148,153,136,147,150,155,156,157,158,159,136,136,156,158,153,136,136,153,136,147,150,155,156,157,158,159,153,136,147,150,155,156,157,158,159,160,160,156,158,169,159,148,136,136,169,159,169,159,160,160,155,136,136,136,150,156,158,159,148,153,136,147,150,155,156,157,158,159,148,153,136,147,150,155,156,157,158,159,136,136,136,136,148,153,153,136,136,147,150,155,156,157,158,159,136,136,169,159,160,160,136,136,169,159,153,136,153,169,159,136,136,136,148,160,160,155,157,160,155,157,136,159,148,148,153,136,136,136,147,150,155,156,157,158,159,136,136,160,160,155,158,136,136,136,147,158,148,150,148,153,136,147,150,155,156,157,158,159,136,148,153,136,147,150,155,156,157,158,159,136,136,148,136,168,136,136,148,136,136,147,157,158,136,136,136,136,136,136,156,136,136,160,155,157,150,156,158,150,148,155,157,155,157,169,159,136,148,136,158,160,155,157,0,169,159,136,169,159,136,160,155,157,156,158,136,136,148,136,169,159,160,155,157,150,156,158,136,136,136,136,136,136,150,136,136,136,136,136,136,136,169,159,136,136,136,136,136,136,150,136,169,159,136,136,136,169,159,148,136,136,147,136,136,136,153,136,147,150,155,156,157,158,159,136,148,153,136,147,150,155,156,157,158,159,148,153,136,147,150,155,156,157,158,159,169,159,148,153,136,147,150,155,156,157,158,159,136,136,136,158,148,136,148,153,136,147,150,155,156,157,158,159,148,157,155,155,136,136,136,136,136,136,155,136,155,155,155,155,155,155,155,157,155,157,155,155,160,155,155,157,157,136,155,136,160,155,157,136,136,155,155,160,155,157,136,160,136,155,155,157,157,155,157,155,155,136,155,155,136,136,155,155,136,136,0,0,0,0,0,166,166,186,187,187,78,166,0,78,187,187,187,186,78,0,0,187,0,78,78,187,187,187,166,78,78,78,78,166,187,187,187,187,187,0,78,0,0,0,0,166,0,0,181,181,78,186,186,0,0,187,181,181,186,0,0,78,187,0,0,0,78,78,166,187,78,78,78,187,187,187,187,187,187,187,78,0,165,116,73,174,167,166,181,175,176,186,115,177,187,188,138,78,73,73,73,149,149,149,149,174,165,116,73,193,174,167,166,181,192,175,176,186,115,177,187,188,138,78,165,116,73,193,174,167,166,181,192,175,176,186,115,177,187,188,138,78,165,116,73,174,167,166,181,175,176,186,115,177,187,188,138,78,165,116,73,174,167,166,181,175,176,186,115,177,187,188,138,78,165,116,73,167,73,175,177,78,177,73,73,165,116,174,167,181,175,176,115,177,188,138,78,165,116,73,193,174,167,166,181,192,175,176,186,115,177,187,188,138,78,165,116,73,193,174,167,166,181,192,175,176,186,115,177,187,188,138,78,115,78,78,165,116,73,174,167,166,181,175,176,186,115,177,187,188,138,78,138,78,165,116,73,193,174,167,166,181,192,175,176,186,115,177,187,188,138,78,165,116,73,174,167,166,181,175,176,186,115,177,187,188,138,165,165,165,116,116,116,73,73,73,174,174,174,167,167,167,166,166,166,181,181,181,175,175,175,176,176,176,177,177,177,188,188,188,138,138,138,165,165,116,73,73,149,174,167,166,166,181,181,175,176,186,115,177,187,188,138,188,165,116,73,193,174,167,167,166,181,192,175,176,186,115,177,187,188,138,78,138,187,190,165,116,73,174,167,166,181,175,176,186,115,177,187,188,138,167,174,165,174,165,116,165,116,73,193,174,167,166,181,192,175,176,186,115,177,187,188,138,78,165,116,73,193,174,167,166,181,192,175,176,186,115,177,187,188,138,78,166,73,73,181,73,167,165,109,73,192,187,174,175,176,177,187,115,73,73,73,193,73,181,73,73,73,167,165,116,193,138,73,73,73,165,116,193,138,190,177,149,149,193,165,116,73,174,167,166,181,175,176,186,115,177,187,188,138,78,174,167,188,167,165,177,167,167,78,187,165,116,73,174,167,166,181,175,176,186,115,177,187,188,138,78,73,166,181,138,73,73,73,73,165,116,73,193,174,167,166,181,192,175,176,186,115,177,187,187,188,138,78,165,116,73,193,174,167,166,181,192,175,176,186,115,177,187,188,138,78,165,116,73,193,174,167,166,181,192,175,176,186,115,177,187,188,138,78,167,165,116,73,193,174,167,166,181,192,175,176,186,115,177,187,188,138,78,73,73,167,193,167,252,252,253,254,255,256,257,258,259,260,261,261,257,262,261,255,263,255,259,252,260,264,254,265,262,256,266,267,267,253,268,252,267,265,252,258,265,269,259,252,267,260,264,268,257,261,266,263,261,267,261,257,254,254,258,270,270,270],"f":"``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}00000000000000000000000{hj}{{hj}{{n{jl}}}}000{jj}{{jj}}1{{j{b{A`}}}j}{{}j}{Abj}{Adj}{{jAf}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}``{{jc}j{{Al{j}}}}4321{{jcAf}j{{Al{j}}}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{j}}{b{C`c}}b}{{n{Cbl}}}{{Cd{{b{j}}b}{{Bf{{n{Cbl}}}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}{{ce{Bb{{B`{An}}}}Af}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}?{{jjChCj}j}{jj}0000{{jj}j}1>=1>=1{{jCl}j}{{cCn}j{{Aj{{Ah{j}}}}}}3{cj{{Al{j}}}}{{{b{D`}}}{{b{{Ah{Db}}}}}}`{jAb}{{{b{Dd}}}{{b{Df}}}}{{{b{Dh}}}{{b{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{j{Bh{Dl}}}j}`{jDn}{{jE`j}j}{{{b{c}}}{{b{e}}}{}{}}000000000000000000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000000000000000000000000>{{jcg{Dj{Af}}}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{{jj{Ed{Af}}{Dj{Ef}}}j}`{{{b{Eh}}{b{A`}}}{{n{Ejl}}}}{{El{Dj{j}}}{{n{jl}}}}{{{b{Dd}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{En}}BdBd}{{n{Bdl}}}}{{El{Dj{j}}}j}{{jCj}j}0{{jCjF`}j}`{jFb}{jj}0{{jjj}j}{{jj}j}0{{{b{Fd}}}Fd}{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Dh}}}Dh}{{{b{j}}}j}{{{b{Fl}}}Fl}{{{b{E`}}}E`}{{{b{{Bb{c}}}}}{{Bb{c}}}Eb}{{{b{Fn}}}Fn}{{{b{G`}}}G`}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Cf}}}Cf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{El}}}El}{{{b{c}}{b{C`e}}}f{}{}}00000000000000000000000{{{b{{Ah{j}}}}}j}{{{b{A`}}}j}{cj{{Hh{Ej}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{Abc}j{{Al{j}}}}{{Adc}j{{Al{j}}}}{jj}00021{{jjHj}j}{{jAf}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}111{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}2{{HljHnAf}j}0{{j{Dj{I`}}{Bh{{Dj{Ej}}}}AfAf}j}{{jjIbId}j}{Ghj}{{jjIbId{Bh{If}}{Bh{Ej}}}j}0```{{}j}{{}{{Bb{{B`{An}}}}}}{{}{{Bb{{B`{En}}}}}}{{}{{Bb{{B`{Ih}}}}}}{{}Gh}{{}Gj}{{}Gn}{{}H`}{{}Hb}{{}Hd}{jj}{Hn{{b{c}}}{}}000000000000000{{{b{{Bb{c}}}}}b{}}111111111111111{Hn{{b{C`c}}}{}}000000000000000000000000000000{c{{n{Dh}}}Ij}{c{{n{j}}}Ij}{c{{n{Fl}}}Ij}{c{{n{E`}}}Ij}{c{{n{{Bb{{B`{Il}}}}}}}Ij}{c{{n{{Bb{Bd}}}}}Ij}{c{{n{{Bb{{B`{Dd}}}}}}}Ij}{c{{n{Fn}}}Ij}{c{{n{G`}}}Ij}{c{{n{Gb}}}Ij}{c{{n{Gd}}}Ij}{c{{n{Gf}}}Ij}{c{{n{Cf}}}Ij}{c{{n{Gl}}}Ij}{c{{n{Gn}}}Ij}{c{{n{H`}}}Ij}{c{{n{Hb}}}Ij}{c{{n{Hd}}}Ij}{c{{n{Hf}}}Ij}{{AdChIn}j}{{jChIn}j}{{jj}}{{jc}j{{Al{j}}}}{Hnf}000000000000000000000000000000{jj}{Adj}1`{jJ`}{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Gjj}{{jI`Af}j}{{{b{Dh}}{b{Dh}}}Af}9{{{b{j}}{b{j}}}Af}{{{b{Fl}}{b{Fl}}}Af}{{{b{E`}}{b{E`}}}Af}{{{b{{Bb{{B`{c}}}}}}{b{{Bb{{B`{c}}}}}}}AfJb}{{{b{{Bb{Bd}}}}{b{{Bb{Bd}}}}}Af}{{{b{Fn}}{b{Fn}}}Af}{{{b{G`}}{b{G`}}}Af}{{{b{Gb}}{b{Gb}}}Af}{{{b{Gd}}{b{Gd}}}Af}{{{b{Gf}}{b{Gf}}}Af}{{{b{Cf}}{b{Cf}}}Af}{{{b{Gl}}{b{Gl}}}Af}{{{b{Gn}}{b{Gn}}}Af}{{{b{H`}}{b{H`}}}Af}{{{b{Hb}}{b{Hb}}}Af}{{{b{Hd}}{b{Hd}}}Af}{{{b{Hf}}{b{Hf}}}Af}{{jc}j{{Al{j}}}}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000000000{{JdjAf}j}0{{jJf}j}{{jjIb}j}11`{{jc}j{{Hh{Ej}}}}{{jc}j{{Aj{{Ah{Cj}}}}}}{jj}0{{jjj}j}{{JhCh}j}{{Jh{b{A`}}}j}{{Jh{b{{Ah{c}}}}}j{{Aj{A`}}}};;{{jJj}j}<{{}j}{Adj}77{{}{{Bb{{B`{An}}}}}}8{{jj}j}{{{b{Dd}}{b{C`Jl}}}{{n{fJn}}}}{{{b{En}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Eh}}{b{C`Jl}}}{{n{fJn}}}}{{{b{K`}}{b{C`Jl}}}{{n{fJn}}}}{{{b{j}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Fl}}{b{C`Jl}}}{{n{fJn}}}}{{{b{E`}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{{Bb{c}}}}{b{C`Jl}}}{{n{fJn}}}{}}{{{b{Fn}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{G`}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Gb}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Gd}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Gf}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Cf}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{Gh}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Gj}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Gl}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Gn}}{b{C`Jl}}}{{n{fJn}}}}{{{b{H`}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Hb}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Hd}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Hf}}{b{C`Jl}}}{{n{fJn}}}}{{{b{El}}{b{C`Jl}}}{{n{fJn}}}}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}``{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}{{j{Bh{Dl}}}j}{cc{}}00000000000{Kbj}{Kdj}{Dlj}{Kfj}4{{{b{A`}}}j}{Hjj}{Afj}{Dhj}{Chj}{Khj}{I`j}{Kjj}{Efj}=={Gb{{Bb{{B`{Dd}}}}}}{Kl{{Bb{{B`{Dd}}}}}}{Fn{{Bb{{B`{Dd}}}}}}{cc{}}{Kn{{Bb{{B`{Dd}}}}}}{G`{{Bb{{B`{Dd}}}}}}{L`{{Bb{{B`{Dd}}}}}}{Lb{{Bb{{B`{Dd}}}}}}{Cf{{Bb{{B`{Dd}}}}}}{Gf{{Bb{{B`{Dd}}}}}}{Ld{{Bb{{B`{Dd}}}}}}{Lf{{Bb{{B`{Dd}}}}}}888888{FnCf}{GfCf}{LdCf}{G`Cf}<<<<<<{HdHb}==={Cj{{Bb{{B`{An}}}}}}``{{jc{Bb{{B`{An}}}}Lh}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}`{{AdjAf}j}{{jc}j{{Al{j}}}}{{Adjj}j}{{jHnHn}j}{{AbjAf}j}43{Fbj}{{{b{Ih}}{b{Lj}}Ll{b{Db}}{b{Db}}}{{Bh{Db}}}}{{{b{An}}{b{Lj}}Ll{b{{Ah{Db}}}}}Db}{{{b{D`}}}Hn}{{{b{Dd}}}{{Bh{{Bb{{B`{An}}}}}}}}{{{b{K`}}{b{Lj}}}{{n{{B`{Lj}}l}}}}99{{{b{h}}}Af}{{{b{Dh}}{b{C`c}}}fLn}{{{b{j}}{b{C`c}}}fLn}{{jDlDlDlDl}j}{{{b{Fl}}{b{C`c}}}fLn}{{{b{E`}}{b{C`c}}}fLn}{{{b{Fn}}{b{C`c}}}fLn}{{{b{G`}}{b{C`c}}}fLn}{{{b{Gb}}{b{C`c}}}fLn}{{{b{Gd}}{b{C`c}}}fLn}{{{b{Gf}}{b{C`c}}}fLn}{{{b{Cf}}{b{C`c}}}fLn}{{{b{Gl}}{b{C`c}}}fLn}{{{b{Gn}}{b{C`c}}}fLn}{{{b{H`}}{b{C`c}}}fLn}{{{b{Hb}}{b{C`c}}}fLn}{{{b{Hd}}{b{C`c}}}fLn}{{{b{Hf}}{b{C`c}}}fLn}{{Adj}j}{{j{Bh{Hn}}}j}{{j{Bh{j}}{Bh{Hn}}AfAf}j}``{jj}{cj{{Aj{{Ah{Ch}}}}}}{{}Hn}000000000000000000000000000000`{{jjChCj}j}{{jjj}j}{{jM`}j}{{jj}j}{ce{}{}}000000000000000000000000000000{{{b{j}}}}{MbAd}{AdAd}{h{{n{{`{Md}}l}}}}{{jccMf}j{{Al{j}}}}{{{b{h}}}Af}{{{b{h}}Af}Af}>>>{{jc}j{{Al{j}}}}????????22?{{AbjAf}j}{{AdjAf}j}{Jhj}{Mhj}{{jAfAf}j}{{}j}{Adj}{jj}210{jAd}{cjMj}{{jI`}j}3;;3;;{{Mhc}j{{Bj{{b{A`}}}{{Bf{{n{Ejl}}}}}}BlBn}}{{jc{Bb{{B`{An}}}}}j{{Bj{Bd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{j{b{C`c}}{b{C`}}}{{n{jl}}}{{Cd{j{b{C`}}}{{Bf{{n{jl}}}}}}}}{{{b{D`}}{Bh{{b{Ej}}}}}{{n{Dbl}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Cj}}}{{Bf{Cj}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Cj}}}{{Bf{Cj}}}}BlBn}}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{{b{Cj}}}}}}}{{Bf{Cj}}}}BlBn}}{{jc}j{{Cd{j}{{Bf{j}}}}}}{c{{Bb{{B`{An}}}}}{{Bj{{b{Db}}}{{Bf{Db}}}}BlBn}}{{Mh{B`{Bj}}}j}{c{{Bb{{B`{An}}}}}{{Bj{{b{{Ah{Db}}}}}{{Bf{Db}}}}BlBn}}:{{ce{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}{{Aj{{Ah{j}}}}}}{{jc{b{{Ah{j}}}}{Bb{{B`{An}}}}}j{{Bj{{b{C`{Ah{Bd}}}}}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jCf{b{{Ah{j}}}}AfAf}j}2{{{b{D`}}}{{n{Dbl}}}}{{jMnAf}j}1111{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jMh}`44`{j}{{jc}j{{Al{j}}}}0;{{{b{{Ah{Db}}}}}D`}{c{{Bb{c}}}{}}{{jjj}Gh}{{}Gj}{{{b{A`}}{Dj{Db}}{Bb{{B`{An}}}}c}ElDd}{{{b{j}}{b{C`{N`{{b{j}}}}}}}f}{{j{b{C`{N`{j}}}}}f}=={Chj}>`8{{Ffc}j{{Al{j}}}}{{Fjc}j{{Al{j}}}}{{{b{h}}}{{n{{B`{A`}}l}}}}{{je}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{je{Bh{{Nb{eCl}}}}Hd}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jj}j}{jj}0{{jjHj}j}{{}j}{h{{Dj{j}}}}{{jc}j{{Al{j}}}}{{Mh{b{A`}}}j}05`{{j{Dj{I`}}{Bh{{Dj{Ej}}}}AfAfAf}j}{{jHn{Bh{{Dj{Ej}}}}AfAfAf}j}{{{b{A`}}jNd}j}{{jjNd}j}9{{jNf{Bh{Dl}}}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jAf}j}{{jj}}{{Jh{Dj{Ej}}}j}{{cj}j{{Al{j}}}};{{jcc{Bh{c}}{Bh{Cj}}}j{{Al{j}}}}{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{j{b{{Ah{Ch}}}}Hf}j}`{Abj}{Adj}{jj}00{{jNh}j}{{jjGl}j}0{{j{B`{Bj}}{Bb{{B`{An}}}}Nj}j}{{jHnc}j{{Cd{{b{C`{Nn{Nl}}}}}{{Bf{{Bh{I`}}}}}}BlBnO`}}{{jNj}j}{{jjOb}j}101010{{jNdI`Nj}j}{{jjNdI`Ob}j}{{jHnAf}j}434343{{{b{h}}}{{Dj{{B`{A`}}}}}}{{jKd}j}{{jEf}j}``{{}{{Bb{{B`{An}}}}}}{{jjAfAf{Bh{Dl}}}j}{{AdjAfAf{Bh{Dl}}}j}01{{jcOd}j{{Al{j}}}}``{{{b{Dh}}c}nOf}{{{b{j}}c}nOf}{{{b{Fl}}c}nOf}{{{b{E`}}c}nOf}{{{b{{Bb{{B`{Dd}}}}}}c}nOf}{{{b{{Bb{Bd}}}}c}nOf}{{{b{{Bb{{B`{Il}}}}}}c}nOf}{{{b{Fn}}c}nOf}{{{b{G`}}c}nOf}{{{b{Gb}}c}nOf}{{{b{Gd}}c}nOf}{{{b{Gf}}c}nOf}{{{b{Cf}}c}nOf}{{{b{Gl}}c}nOf}{{{b{Gn}}c}nOf}{{{b{H`}}c}nOf}{{{b{Hb}}c}nOf}{{{b{Hd}}c}nOf}{{{b{Hf}}c}nOf}{{Adc}j{{Al{j}}}}0{{jOh}j}1{{Abj}j}{{Adj}j}{{jj}j}{{jce}j{{Al{j}}}{{Al{j}}}}{jj}{{j{Bh{Dl}}}j}111{{jAf}j}{{Adjj}j}4{{AbCl}j}{{AdCl}j}{{jCl}j}{{jeCn}j{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{jjHjAf}j}8{{AbHj}j}{{AdHj}j}{{jHj}j}{jOj}`{{jCj}j}`{jJh}{{jj}}{{Mh{b{A`}}}j}0{{{b{A`}}}j}{Abj}{Adj}{jj}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}{{}{{Bb{{B`{An}}}}}}{{Adj}j}{{j{Bh{Hn}}}j}44{{jjj}j}{{Fdc}Ff{{Al{j}}}}{{Fhc}Fj{{Al{j}}}}{{jjIbId}j}```{{AdHn}j}{{{b{j}}{b{Lj}}Ll}{{n{Dbl}}}}<{Mhj}{{{b{c}}}e{}{}}00000000000000000000000<{{{b{D`}}}{{n{Dbl}}}}{{{b{c}}}Ej{}}0000000{{Ab{Bh{{B`{Bj}}}}}j}{{AdOl{Bh{{B`{Bj}}}}Hn}j}5{{jj}j}{{jcg{Dj{Af}}}j{{Al{j}}}{{Al{j}}Eb}{{Aj{{Ah{e}}}}}}{c{{n{e}}}{}{}}0000000000000000000000000000000000000000000000000000000000000{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Cj}}}{{Bf{{n{Cjl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{{Ah{{b{Cj}}}}}}}{{Bf{{n{Cjl}}}}}}}}{{jc}{{n{jl}}}{{Cd{j}{{Bf{{n{jl}}}}}}}}{{{b{D`}}c}{{n{Dbl}}}{{Ml{{b{Db}}}{{Bf{{n{Dbl}}}}}}}}{{{b{Dd}}{b{C`{Dj{Hj}}}}}{{n{fl}}}}{{{b{c}}}On{}}000000000000000000000000000000`{hj}{{Adc}j{{Al{j}}}}{Abj}{Adj}{jj}02100{{jAfAfEjAf}j}{{AbHj}j}{{AdHj}j}{{jHj}j}{ce{}{}}000000000000000000000000000000`{cFd{{Al{j}}}}{{Ffc}Fh{{Al{j}}}}{{Fjc}Fh{{Al{j}}}}`{{Ghj}Gh}0{{Gjj}Gj}{{{b{D`}}Cj}{{n{Dbl}}}}{{Jh{Dj{j}}}j}{{Gjjjj}Gj}{{Ghjjj}Gh}1545445454{{{b{D`}}{Bh{Cj}}}{{n{Dbl}}}}{{{b{D`}}}{{n{Dbl}}}}76{{GhIf}Gh}{{Gh{Bh{Ej}}}Gh}89{{jc}j{{Al{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{DnAf}j}{Dnj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{Dnj}j}{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{Hnf}3{cc{}}87{{}Hn}{ce{}{}}6{c{{n{e}}}{}{}}0{{{b{c}}}On{}}2``{{J`j{Ed{Af}}{Dj{Ef}}A@`}j}{J`j}<;{{J`If}j}1{{J`jIf}j}{{J`Ej}j}333<;:393873333333333{{J`j}j}44{{J`{Bh{Ej}}jA@b}j}15{{J`{b{A`}}}j}65066666662998:6656````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@d}}}A@d}{{{b{c}}{b{C`e}}}f{}{}}{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{c{{n{A@d}}}Ij}{Hnf}{{{b{A@d}}{b{A@d}}}Af}{{{b{A@d}}{b{C`Jl}}}{{n{fJn}}}}0{cc{}}{{{b{A@d}}{b{C`c}}}fLn}{{}Hn}{ce{}{}}{{{b{A@d}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@f}}}A@f}{{{b{c}}{b{C`e}}}f{}{}}{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{c{{n{A@f}}}Ij}{Hnf}{{{b{A@f}}{b{A@f}}}Af}{{{b{A@f}}{b{C`Jl}}}{{n{fJn}}}}0{cc{}}{{{b{A@f}}{b{C`c}}}fLn}{{}Hn}{ce{}{}}{{{b{A@f}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5````````````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{{b{A@h}}}A@h}{{{b{c}}{b{C`e}}}f{}{}}{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{c{{n{A@h}}}Ij}{Hnf}{{{b{A@h}}{b{A@h}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{A@h}}{b{C`Jl}}}{{n{fJn}}}}0{cc{}}{{{b{A@h}}{b{C`c}}}fLn}{{}Hn}{ce{}{}}{{{b{A@h}}c}nOf}{{{b{c}}}e{}{}}{{{b{c}}}Ej{}}{c{{n{e}}}{}{}}0{{{b{c}}}On{}}5``{{}j}{c{{n{jl}}}{{Aj{{Ah{j}}}}}}`0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{jjChCj}j}{{cCn}j{{Aj{{Ah{j}}}}}}{cj{{Al{j}}}}{{{Dj{j}}}j}{{{b{A`}}}j}{{jCj}j}{{{b{{Ah{j}}}}}j}2{c{{A@l{{Dj{A@j}}}}}{{AAb{}{{A@n{AA`}}}}}}{cj{{Hh{Ej}}}}{{cAAd}{{A@l{AA`}}}{{Aj{{Ah{AA`}}}}}}{{eAf}{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}11{e{{n{jl}}}{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{c{b{A`}}Af}j{{Aj{{Ah{j}}}}}}{{jjHj}j}{{jceAf}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{jjIbId}j}0{Ghj}{{jjIbId{Bh{If}}{Bh{Ej}}}j}0``{{{b{Cj}}}j}{cj{{Aj{{Ah{Cj}}}}}}{Gjj}{{jce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{{b{A`}}c}{{n{jl}}}{{Aj{{Ah{j}}}}}}``{cj{{Aj{{Ah{Ch}}}}}}{{jjChCj}j}{{jjj}j}{jj}0{{jjc{Bb{{B`{An}}}}}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBn}}{{{b{A`}}}j}00```0````2{{jjHj}j}{{{b{A`}}jNd}j}{{ce}j{{Bj{BdBd}{{Bf{{n{{Bh{Bd}}l}}}}}}BlBnEb}{{Aj{{Ah{j}}}}}}{{cj}j{{Al{j}}}}{{jjGl}j}0``{{jjHjAf}j}6{{jjIbId}j}0`````````{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}0{{{b{C`c}}}{{b{C`e}}}{}{}}0{{{b{Mn}}{b{C`{Ah{Bd}}}}}{{n{{Bh{Bd}}l}}}}{{{b{AAf}}A@j}{{n{A@jl}}}}{{{b{AAf}}}AAf}{{{b{c}}{b{C`e}}}f{}{}}{Hn{{b{c}}}{}}0{Hn{{b{C`c}}}{}}0{c{{n{AAf}}}Ij}{Hnf}0{{{b{AAf}}{b{AAf}}}Af}{{{b{c}}{b{e}}}Af{}{}}00{{{b{AAf}}{b{C`Jl}}}{{n{fJn}}}}{cc{}}0{{{AAj{AAh}}}AAf}{{{b{Mn}}}{{Bh{{Bb{{B`{An}}}}}}}}{{}Hn}0{ce{}{}}0{{{AAj{AAh}}{Bh{Cj}}AfAf}Mn}{{{b{AAf}}c}nOf}{{{b{c}}}e{}{}}{c{{n{e}}}{}{}}000{{{b{Mn}}{b{C`{Dj{Hj}}}}}{{n{fl}}}}{{{b{c}}}On{}}066`{{OjAf}j}{Ojj}{{{b{c}}}{{b{e}}}{}{}}{{{b{C`c}}}{{b{C`e}}}{}{}}{{OjjAf}j}{{Ojj}j}1{Hn{{b{c}}}{}}{Hn{{b{C`c}}}{}}{Hnf}3{{OjjHn}j}4{{Oj{b{A`}}}{{n{jl}}}}65{cc{}}6;:{{}Hn}{ce{}{}}{{Oj{b{A`}}Af}j}{{Oj{Bh{Cj}}{Bh{Hn}}}j}:>>{{OjHnAAl}j}0{{OjjjAf}j}0{{OjjjAfCh}j}{Ojj}{{Ojjj}j}?;;?;??????{{OjCjGnj}j}{{Ojj}j}{{OjGn}j}{{Oj{Bh{If}}{Bh{Ej}}Gnj}j}{{OjHn}j}{{OjjAf}j}7377{c{{n{e}}}{}{}}0{{{b{c}}}On{}}?6````````````````````{{{b{c}}d}f{}}00000000{{AA`c}{{A@l{A@j}}}{{Bj{AAn{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{Bf{{A@l{f}}}}}}}}{{AA`Af}AA`}{{ABfc}AA`{{Aj{{Ah{j}}}}}}{{ABhAf}ABh}{{{B`{ABj}}ABl}{{A@l{AA`}}}}{{AA`AA`cc}AA`{{Al{j}}}}{{ABfcABn}AA`{{Bj{A@j}{{Bf{{A@l{A@j}}}}}}BlBn}}{{{b{c}}}{{b{e}}}{}{}}000000000{{{b{C`c}}}{{b{C`e}}}{}{}}000000000{{AA`AC`cCn}AA`{{Aj{{Ah{j}}}}}}{AA`AA`}``{{{b{ACb}}}f}{{AA`{ACd{{b{A`}}Cj}}Af}AA`}{{AA`CjAf}AA`}{{{b{ACb}}}ACb}{{{b{AA`}}}AA`}{{{b{ABf}}}ABf}{{{b{ABl}}}ABl}{{{b{ACf}}}ACf}{{{b{ACh}}}ACh}{{{b{ACj}}}ACj}{{{b{ACl}}}ACl}{{{b{ACn}}}ACn}{{{b{c}}{b{C`e}}}f{}{}}00000000{{{b{AD`}}}{{Bh{{b{ADb}}}}}}0````{{ABhADd}ABh}{AA`{{A@l{A@j}}}}{AA`{{A@l{ACb}}}}````{{{b{AD`}}{Dj{AA`}}}{{A@l{AA`}}}}0{{{b{ACf}}{Dj{AA`}}}{{A@l{AA`}}}}{AA`AA`}{{AA`AA`{Bh{Ej}}}AA`}{{}AA`}{{}ABl}{{}ACh}{{}ACl}{{}ACn}{Hn{{b{c}}}{}}000000000{Hn{{b{C`c}}}{}}000000000{{{b{AA`}}}{{A@l{Ej}}}}000{Hnf}0{{{b{C`ACb}}}f}1{{AA`e}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}}22222220{{AA`{Bh{{Dj{j}}}}}AA`}``{{{b{AD`}}}{{A@l{{Nb{{B`{{Ah{ADh}}}}Hn}}}}}}0{{{b{AA`}}Af}{{A@l{Ej}}}}{{AA`e}AA`{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}``{{{b{ACb}}}{{Bh{{A@l{A@j}}}}}}{{AA`Hn}{{A@l{A@j}}}}{{{b{ACb}}}{{A@l{A@j}}}}``{{AA`c}AA`{{Al{j}}}}0{{AA`j}AA`}{ABhAA`}{AD`{{A@l{AA`}}}}0{ACf{{A@l{AA`}}}}{ACj{{A@l{AA`}}}}210{AA`AA`}{{{b{ACn}}{b{C`Jl}}}{{n{fJn}}}}{{ABhAf}ABh}{cc{}}0{IlAA`}{ABfAA`}22222222{{AA`AA`cc}AA`{{Al{j}}}}{{{b{AA`}}}ACn}{{{b{AD`}}}Af}0{{{b{ACf}}}Af}`{{AA`e}ABf{{Al{j}}Eb}{{Aj{{Ah{c}}}}}}{{AA`jcADj}ABf{{Aj{{Ah{j}}}}}}1{{ABf{Bh{Hn}}}AA`}`{{ABhADl}ABh}`{{}Hn}0000000008{ce{}{}}000000000{{AA`AA`ccADn}AA`{{Aj{{Ah{j}}}}}}{AA`ABh}?{AA`AA`}{AE`AA`}1={{ABhc}ABh{{Aj{{Ah{j}}}}}}{{AA`AC`}AA`}``{{ACjAf}ACj}`{{AA`cAEb{Bh{{B`{K`}}}}{Bh{{b{A`}}}}}AA`{{Bj{A@j}{{Bf{{A@l{A@j}}}}}}BlBn}}{{AA`AAfAEb{Bh{ABn}}Af}AA`}666{{AA`AEd}AA`}`{{AA`AA`{b{A`}}}{{A@l{AA`}}}}8{{{b{AD`}}}{{Bh{Hn}}}}{{{b{ACf}}}{{Bh{Hn}}}}{{{b{ACj}}}{{Bh{Hn}}}}````<{cACf{{Aj{AEf}}}}{cACj{{Aj{AEf}}}}{{{B`{{Ah{ADh}}}}}ACf}{{{B`{{Ah{ADh}}}}}ACj}``?={{AA`{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{A@l{AAn}}}}`{{{b{AD`}}}{{b{{Ah{ADh}}}}}}{{{b{ACf}}}{{b{{Ah{ADh}}}}}}{{{b{ACj}}}{{b{{Ah{ADh}}}}}}```{AA`{{A@l{{Nb{A@jA@j}}}}}}``{{AA`jNd}AA`}{{{b{AD`}}}Af}{{{b{ACf}}}Af}{{{b{ACj}}}Af}``{{AA`ei}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}{{Aj{A`}}}{{ADf{}{{A@n{g}}}}}}{AA`AA`}{{ABhc}ABh{{Aj{{Ah{j}}}}}}{{AA`jcNh}ABf{{Aj{{Ah{j}}}}}}``{{{b{AD`}}}{{Bh{{b{AEh}}}}}}{{{b{ACf}}}{{Bh{{b{AEh}}}}}}{{{b{ACj}}}{{Bh{{b{AEh}}}}}}```{{LjAEjAf}AA`}{{cACh}{{A@l{AA`}}}{{Aj{AEf}}}}{{{B`{{Ah{ADh}}}}ACh}{{A@l{AA`}}}}{{cACl}{{A@l{AA`}}}{{Aj{AEf}}}}{{{B`{{Ah{ADh}}}}ACl}{{A@l{AA`}}}}{{{b{C`AA`}}}{{A@l{ABn}}}}`{{{b{C`AA`}}{b{C`{ABb{AB`}}}}{b{C`{ABb{ABd}}}}}{{A@l{ABn}}}}{{AA`c}AA`{{Aj{{Ah{j}}}}}}0{{AA`AA`cc}AA`{{Al{j}}}}{{{b{AA`}}{ABb{AB`}}{ABb{ABd}}}f}{{AA`c}AA`{{Al{j}}}}{{AA`ce}AA`{{Al{j}}}{{Al{j}}}}``{{AA`ADhAEl}{{A@l{f}}}}{{AA`ADhAEn}{{A@l{f}}}}{{AA`Ej{Bh{ADb}}AEn}{{A@l{f}}}}{{AA`ADhAF`}{{A@l{f}}}}{{AA`ADhAFb}{{A@l{f}}}}{{AA`Ej{Bh{ADb}}AFb}{{A@l{f}}}}`{{AA`ChAC`}AA`}``{{AA`cCn}AA`{{Hh{AFd}}}}{{AA`cCn}AA`{{Aj{{Ah{j}}}}}}{{AA`Hj}AA`}``{{ABhc}ABh{{Aj{A`}}}}{AA`AA`}{{AA`AC`}AA`}{{ABf{Bh{Hn}}}AA`}{AA`{{A@l{AFf}}}}0{{{b{AA`}}Af}{{A@l{Ej}}}}{{{b{c}}}e{}{}}00000000{{AA`AC`cCn}AA`{{Aj{{Ah{j}}}}}}{c{{n{e}}}{}{}}0000000000000000000``{{{b{c}}}On{}}000000000{{AA`{Bh{{Dj{Ej}}}}AFh}AA`}0{{AA`e}AA`{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}}`{{ABhAFj}ABh}={ce{}{}}000000000{{ABhAA`}ABh}{{ACj{Bh{AFl}}}ACj}{{ACfAf}ACf}{{ACf{Bh{ADb}}}ACf}{{AA`Af}AA`}{{AA`j}AA`}{{AA`c}AA`{{Aj{{Ah{j}}}}}}022{{ACf{Bh{{b{A`}}}}}ACf}{{AA`c}AA`{{Aj{{Ah{AA`}}}}}}6{{ACf{Bh{ABn}}}ACf}{{ACfAFn}ACf}{{ACfHj}ACf}999{{ACjAf}ACj}{{ACf{Bh{Hn}}}ACf}<;;{{AD`c}AD`{{Al{{Bh{Hn}}}}}}1{{ACfc}ACf{{Al{{Bh{Hn}}}}}}{{ACjc}ACj{{Al{{Bh{Hn}}}}}}{{ACj{Bh{Hn}}}ACj}={{ACf{Bh{AG`}}}ACf}{{AA`ACn}AA`}{{AD`{B`{{Ah{ADh}}}}}AD`}{{ACf{B`{{Ah{ADh}}}}}ACf}{{ACj{B`{{Ah{ADh}}}}}ACj}{{AA`Af}AA`}0{{ACf{Bh{Hj}}}ACf}{{ACfAf}ACf}{{AD`Af}AD`}1>3{{AD`c}AD`{{Al{{Bh{AEh}}}}}}{{AA`{b{A`}}{Bh{AC`}}}AA`}{{ACf{Bh{AEh}}}ACf}{{ACfc}ACf{{Al{{Bh{AEh}}}}}}{{ACjc}ACj{{Al{{Bh{AEh}}}}}}{{ACj{Bh{AEh}}}ACj}{{ACf{Bh{ABn}}}ACf}{{ACj{Bh{ABn}}}ACj}{{ACfc}{{A@l{ACf}}}{{Bj{Lj}{{Bf{{A@l{Lj}}}}}}}}{{ACfHj}ACf}={{ACfHn}ACf}0>><<>{AA`AA`}{{{b{A@j}}ei{Bh{m}}Af{Bh{j}}{Bh{{b{A`}}}}}{{A@l{A@j}}}{{Aj{A`}}}{{ADf{}{{A@n{c}}}}}{{Aj{A`}}}{{ADf{}{{A@n{g}}}}}{{Aj{A`}}}{{ADf{}{{A@n{k}}}}}}0````````````````````````````````````````````````````````````````````````````````{{{b{c}}d}f{}}000000000000000{{{b{Ib}}Ch{Bh{{b{AGb}}}}}{{n{Chl}}}}00{{{b{ABj}}}Af}00{{{b{ABj}}}{{b{Df}}}}`{{{b{c}}}{{b{e}}}{}{}}00000000000000000{{{b{C`c}}}{{b{C`e}}}{}{}}00000000000000000{{{b{ADj}}}ADj}{{{b{Nh}}}Nh}{{{b{Ib}}}Ib}{{{b{AEl}}}AEl}{{{b{ADn}}}ADn}{{{b{ADl}}}ADl}{{{b{AFj}}}AFj}{{{b{AEn}}}AEn}{{{b{AF`}}}AF`}{{{b{AGd}}}AGd}{{{b{Nf}}}Nf}{{{b{AFb}}}AFb}{{{b{AGf}}}AGf}{{{b{AGh}}}AGh}{{{b{AAd}}}AAd}{{{b{Il}}}Il}{{{b{c}}{b{C`e}}}f{}{}}000000000000000``{{{b{Ib}}{b{Ib}}}AGj}`{{{b{c}}{b{e}}}AGj{}{}}``{{{b{Il}}}{{n{{B`{Lj}}l}}}}`{{{b{Ib}}}Ch}{{{b{Ib}}}Af}{{}ADj}{{}Nh}{{}AEl}{{}ADn}{{}AFj}{{}AEn}{{}AF`}{{}Nf}{{}AFb}{{}AGh}{{}AAd}{{}Il}{Hn{{b{c}}}{}}00000000000000000{Hn{{b{C`c}}}{}}00000000000000000`{{{b{Il}}}{{n{Ejl}}}}0{c{{n{ADj}}}Ij}{c{{n{Nh}}}Ij}{c{{n{Ib}}}Ij}{c{{n{AEl}}}Ij}{c{{n{ADn}}}Ij}{c{{n{ADl}}}Ij}{c{{n{AFj}}}Ij}{c{{n{AEn}}}Ij}{c{{n{AF`}}}Ij}{c{{n{AGd}}}Ij}{c{{n{Nf}}}Ij}{c{{n{AFb}}}Ij}{c{{n{AGf}}}Ij}{c{{n{AGh}}}Ij}{c{{n{AAd}}}Ij}{c{{n{Il}}}Ij}`{{{b{Il}}}{{n{{`{Md}}l}}}}{Hnf}00000000000000000{{{b{ADj}}{b{ADj}}}Af}{{{b{Nh}}{b{Nh}}}Af}{{{b{Ib}}{b{Ib}}}Af}{{{b{AEl}}{b{AEl}}}Af}{{{b{ADn}}{b{ADn}}}Af}{{{b{ADl}}{b{ADl}}}Af}{{{b{AFj}}{b{AFj}}}Af}{{{b{AEn}}{b{AEn}}}Af}{{{b{AF`}}{b{AF`}}}Af}{{{b{AGd}}{b{AGd}}}Af}{{{b{Nf}}{b{Nf}}}Af}{{{b{AFb}}{b{AFb}}}Af}{{{b{AGf}}{b{AGf}}}Af}{{{b{AGh}}{b{AGh}}}Af}{{{b{AAd}}{b{AAd}}}Af}{{{b{c}}{b{e}}}Af{}{}}00000000000000000000000000000000000`{{{b{ADj}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Nh}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Ib}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{ABj}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AEl}}{b{C`Jl}}}{{n{fJn}}}}{{{b{ADn}}{b{C`Jl}}}{{n{fJn}}}}{{{b{ADl}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{AFj}}{b{C`Jl}}}{{n{fJn}}}}0{{{b{AEn}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AF`}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AGd}}{b{C`Jl}}}{{n{fJn}}}}{{{b{Nf}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AFb}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AGf}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AGh}}{b{C`Jl}}}{{n{fJn}}}}{{{b{AAd}}{b{C`Jl}}}{{n{fJn}}}}`{cc{}}00000{ADlADn}111111111111`{{{b{AGf}}}Cj}{{{b{AGl}}{Dj{Bd}}{b{ADj}}}{{n{{Nb{Bd{Dj{Bd}}AGn}}l}}}}{{{b{ADj}}{b{C`c}}}fLn}{{{b{Nh}}{b{C`c}}}fLn}{{{b{Ib}}{b{C`c}}}fLn}{{{b{AEl}}{b{C`c}}}fLn}{{{b{ADn}}{b{C`c}}}fLn}{{{b{ADl}}{b{C`c}}}fLn}{{{b{AFj}}{b{C`c}}}fLn}{{{b{AEn}}{b{C`c}}}fLn}{{{b{AF`}}{b{C`c}}}fLn}{{{b{AGd}}{b{C`c}}}fLn}{{{b{Nf}}{b{C`c}}}fLn}{{{b{AFb}}{b{C`c}}}fLn}{{{b{AGf}}{b{C`c}}}fLn}{{{b{AGh}}{b{C`c}}}fLn}{{{b{AAd}}{b{C`c}}}fLn}``````{{}Hn}00000000000000000{ce{}{}}00000000000000000{{{b{ADl}}}Af}{{{b{Ib}}{Bh{{b{A`}}}}}Af}{{{b{Ib}}}Af}{{{b{AFj}}{b{ADl}}}{{n{fl}}}}1``{Mjj}{Ibj}{AH`j}{AGfj}````{AGfAGf}`{{{b{Ib}}}Ch}7{{IbCh}Ib}`1{{{b{AFj}}}Af}{Ib}:{ChIb}{ADlADn}````{{{b{A`}}}Ib}`{{{b{Ib}}{b{Ib}}}{{Bh{AGj}}}}````{{{b{AGl}}{Dj{Bd}}{b{Nh}}}{{n{{Nb{Bd{Dj{Bd}}AGn}}l}}}}`{{{b{ABj}}AHb}{{n{A@jl}}}}{{{b{ABj}}{Bh{Hn}}}{{n{{B`{Lj}}l}}}}`{{{b{ADj}}c}nOf}{{{b{Nh}}c}nOf}{{{b{Ib}}c}nOf}{{{b{AEl}}c}nOf}{{{b{ADn}}c}nOf}{{{b{ADl}}c}nOf}{{{b{AFj}}c}nOf}{{{b{AEn}}c}nOf}{{{b{AF`}}c}nOf}{{{b{AGd}}c}nOf}{{{b{Nf}}c}nOf}{{{b{AFb}}c}nOf}{{{b{AGf}}c}nOf}{{{b{AGh}}c}nOf}{{{b{AAd}}c}nOf}{{{b{Il}}c}nOf}`{{{b{ADn}}}Af}````{{{b{ADn}}}{{b{A`}}}}`{Il{{n{AFfl}}}}{{{b{AGf}}}{{Bh{AHd}}}}{{{b{c}}}e{}{}}000000000000000{{{b{c}}}Ej{}}00`{{{b{Ib}}Ch{Bh{{b{AGb}}}}ceg}{{n{Chl}}}{{Bj{Ch}{{Bf{Ch}}}}}{{Bj{Ch}{{Bf{AHf}}}}}{{Bj{AHf}{{Bf{Ch}}}}}}{{{b{Ib}}Ch{Bh{{b{AGb}}}}}{{n{Chl}}}}00{c{{n{e}}}{}{}}0000000000000{AHd{{n{AGfl}}}}1111111111111111111111{{{b{c}}}On{}}00000000000000000`{ce{}{}}00000000000000000{{{b{Ib}}}Ch}{{{b{Ib}}}Af}{{ADnADd}ADn}`{{ADn{Bh{Ej}}}ADn}``````````````````````````````````````````````````````````","D":"GEd","p":[[1,"reference"],[5,"Private",3319],[1,"unit"],[5,"MetaNameSpace",5,3320],[6,"Expr",5,3321],[6,"PolarsError",3322],[6,"Result",3323],[1,"str"],[5,"ArrayNameSpace",5,3324],[5,"ListNameSpace",5,3325],[1,"bool"],[1,"slice"],[10,"AsRef",3326],[10,"Into",3326],[10,"FunctionOutputField",5,3327],[5,"Arc",3328],[5,"SpecialEq",5,3327],[5,"Series",3329],[17,"Output"],[6,"Option",3330],[10,"Fn",3331],[10,"Send",3332],[10,"Sync",3332],[0,"mut"],[6,"VisitRecursion",3333],[10,"FnMut",3331],[6,"FunctionExpr",5,3334],[1,"i64"],[6,"DataType",3335],[5,"SortOptions",3336],[5,"SortMultipleOptions",3336],[5,"FieldsMapper",5,3337],[5,"Field",3338],[10,"SeriesUdf",5,3327],[10,"Any",3339],[6,"AggExpr",5,3321],[5,"Vec",3340],[1,"u64"],[5,"BinaryNameSpace",1580,3341],[6,"Operator",5,3321],[10,"Clone",3342],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3327],[5,"String",3343],[5,"UserDefinedFunction",5,3344],[10,"SeriesBinaryUdf",5,3327],[6,"CastOptions",3345],[5,"CategoricalNameSpace",5,3346],[5,"When",5,3347],[5,"Then",5,3347],[5,"ChainedWhen",5,3347],[5,"ChainedThen",5,3347],[6,"Excluded",5,3321],[6,"BooleanFunction",5,3348],[6,"CategoricalFunction",5,3349],[6,"TemporalFunction",5,3350],[6,"PowFunction",5,3351],[6,"StringFunction",5,3352],[5,"DatetimeArgs",5,3353],[5,"DurationArgs",5,3353],[5,"RollingCovOptions",5,3354],[5,"StrptimeOptions",5,3354],[5,"JoinOptions",5,3354],[6,"WindowType",5,3354],[6,"WindowMapping",5,3354],[6,"NestedType",5,3354],[10,"IntoVec",3355],[1,"u8"],[10,"ExprEvalExtension",5,3356],[1,"usize"],[1,"f64"],[5,"Duration",2668,3357],[6,"ClosedWindow",3358],[6,"TimeUnit",3359],[10,"BinaryUdfOutputField",5,3327],[10,"Deserializer",3360],[6,"DslPlan",2668,3361],[6,"NullBehavior",3362],[5,"DateLikeNameSpace",1601,3363],[10,"Sized",3332],[10,"ListNameSpaceExtension",5,3364],[5,"EWMOptions",3365],[5,"StructNameSpace",5,3366],[6,"FillNullStrategy",3367],[5,"Formatter",3368],[5,"Error",3368],[10,"UdfSchema",5,3369],[1,"i8"],[1,"u32"],[1,"f32"],[1,"u16"],[1,"i16"],[6,"BusinessFunction",3370],[6,"ArrayFunction",3371],[6,"RangeFunction",3372],[6,"ListFunction",3373],[6,"BinaryFunction",3374],[6,"StructFunction",3375],[5,"FunctionOptions",3376],[5,"Schema",3377],[6,"Context",3361],[10,"Hasher",3378],[6,"InterpolationMethod",3379],[10,"IntoListNameSpace",5,3364],[10,"Display",3368],[6,"ClosedInterval",3380],[5,"ExprNameNameSpace",5,3381],[10,"Literal",2668,3382],[10,"FnOnce",3331],[5,"PythonUdfExpression",2120,3383],[5,"UnitVec",3384],[1,"tuple"],[6,"QuantileInterpolOptions",3385],[5,"RankOptions",2668,3386],[5,"RollingGroupOptions",2668,3387],[5,"RollingOptionsFixedWindow",3388],[5,"Float64Type",3389],[5,"ChunkedArray",3390],[10,"Copy",3332],[5,"RollingOptionsDynamicWindow",3391],[6,"SearchSortedSide",3392],[10,"Serializer",3393],[6,"IsSorted",3394],[5,"StringNameSpace",2165,3395],[6,"ListToStructWidthStrategy",3396],[5,"TypeId",3339],[6,"Roll",3397],[6,"NonExistent",3398],[6,"RollingFunction",1940,3399],[6,"RollingFunctionBy",1972,3400],[6,"TrigonometricFunction",2003,3401],[5,"DataFrame",3402],[8,"PolarsResult",3322],[17,"Item"],[5,"LazyFrame",2232],[10,"IntoParallelIterator",3403],[5,"UnionArgs",2668,3376],[5,"PythonFunction",2120,3383],[5,"PyAny",3404],[5,"Py",3405],[1,"char"],[5,"Node",3406],[6,"IR",3407],[5,"Arena",3406],[6,"AExpr",3408],[5,"LazyGroupBy",2232],[5,"JoinBuilder",2232],[10,"AnonymousScan",2668,3409],[5,"ScanArgsAnonymous",2232,3410],[8,"SchemaRef",3377],[8,"IdxSize",3411],[5,"InProcessQuery",2232,3412],[8,"PlHashMap",3413],[5,"LazyCsvReader",2232,3414],[5,"ScanArgsIpc",2232,3415],[5,"LazyJsonLineReader",2232,3416],[5,"ScanArgsParquet",2232,3417],[5,"OptState",2232,3418],[10,"LazyFileListReader",2232,3419],[5,"CloudOptions",3420],[6,"JoinCoalesce",3421],[10,"IntoIterator",3422],[5,"PathBuf",3423],[5,"DynamicGroupOptions",2668,3387],[6,"JoinType",2668,3421],[5,"JoinArgs",2668,3421],[10,"IntoLazy",2232],[8,"AllowedOptimizations",2232,3418],[5,"MeltArgs",3424],[5,"Path",3423],[5,"RowIndex",3425],[8,"PyObject",3405],[5,"CsvWriterOptions",2668,3426],[5,"IpcWriterOptions",2668,3427],[5,"JsonWriterOptions",2668,3428],[5,"ParquetWriteOptions",2668,3429],[8,"String",3430],[5,"IRPlan",3407],[6,"UniqueKeepStrategy",3402],[6,"JoinValidation",2668,3421],[8,"NonZeroUsize",3431],[6,"CsvEncoding",3432],[6,"NullValues",3432],[6,"Tz",3433],[6,"RankMethod",2668,3386],[6,"LiteralValue",2668,3382],[5,"AnonymousScanOptions",2668,3376],[6,"Ordering",3434],[10,"PolarsTemporalGroupby",2668,3387],[6,"GroupsProxy",3435],[5,"Null",2668,3382],[5,"AnonymousScanArgs",2668,3409],[6,"AnyValue",3436],[5,"NaiveDateTime",3437],[15,"Quantile",1468],[15,"Min",1468],[15,"Max",1468],[15,"IsBetween",1864],[15,"Any",1864],[15,"All",1864],[15,"SortBy",1478],[15,"Filter",1478],[15,"Cast",1478],[15,"Sort",1478],[15,"Gather",1478],[15,"RenameAlias",1478],[15,"Ternary",1478],[15,"Function",1478],[15,"Window",1478],[15,"AnonymousFunction",1478],[15,"Slice",1478],[15,"BinaryExpr",1478],[15,"QCut",1867],[15,"Entropy",1867],[15,"Log",1867],[15,"Hist",1867],[15,"Cut",1867],[15,"Correlation",1867],[15,"Round",1867],[15,"TopK",1867],[15,"TopKBy",1867],[15,"RoundSF",1867],[15,"EwmMeanBy",1867],[15,"Clip",1867],[15,"BackwardFill",1867],[15,"ForwardFill",1867],[15,"Random",1867],[15,"GatherEvery",1867],[15,"ValueCounts",1867],[15,"Rank",1867],[15,"EwmMean",1867],[15,"EwmStd",1867],[15,"EwmVar",1867],[15,"Replace",1867],[15,"CumCount",1867],[15,"CumSum",1867],[15,"CumProd",1867],[15,"CumMin",1867],[15,"CumMax",1867],[15,"ConcatHorizontal",1912],[15,"ConcatVertical",1912],[15,"ExtractGroups",1912],[15,"JsonDecode",1912],[15,"PadStart",1912],[15,"PadEnd",1912],[15,"SplitExact",1912],[15,"Contains",1912],[15,"Find",1912],[15,"Replace",1912],[15,"DatetimeFunction",1932],[15,"GroupBy",3261],[15,"Union",3261],[15,"Sort",3261],[15,"Cache",3261],[15,"ExtContext",3261],[15,"DataFrameScan",3261],[15,"IR",3261],[15,"Select",3261],[15,"HStack",3261],[15,"Scan",3261],[15,"MapFunction",3261],[15,"Filter",3261],[15,"Distinct",3261],[15,"Slice",3261],[15,"Sink",3261],[15,"Join",3261],[15,"HConcat",3261],[15,"PythonScan",3261],[15,"Range",3316]],"r":[[7,3321],[21,3324],[30,3327],[32,3348],[37,3349],[38,3346],[42,3347],[43,3347],[66,3353],[76,3353],[86,3321],[90,3321],[91,3356],[92,3381],[98,3337],[99,3381],[109,3334],[110,3327],[116,3327],[130,3364],[146,3354],[157,3325],[158,3364],[173,3320],[191,3354],[198,3321],[209,3351],[220,3327],[229,3354],[238,3327],[239,3327],[250,3327],[258,3352],[265,3354],[267,3366],[273,3350],[275,3347],[295,3369],[300,3344],[305,3347],[308,3354],[309,3354],[347,3438],[351,3439],[358,3439],[361,3440],[365,3441],[367,3442],[382,3443],[384,3443],[390,3444],[391,3445],[393,3441],[395,3347],[460,3446],[467,3445],[470,3441],[525,3439],[526,3438],[527,3438],[528,3447],[529,3447],[530,3447],[539,3448],[541,3439],[545,3439],[550,3442],[551,3353],[552,3442],[553,3442],[688,3441],[690,3438],[691,3438],[692,3353],[775,3441],[813,3439],[816,3447],[880,3441],[922,3438],[955,3442],[956,3442],[1005,3445],[1007,3445],[1017,3441],[1020,3441],[1024,3382],[1034,3440],[1045,3441],[1048,3441],[1055,3445],[1059,3439],[1060,3445],[1063,3439],[1064,3445],[1072,3445],[1076,3439],[1102,3445],[1104,3441],[1116,3448],[1123,3441],[1126,3445],[1130,3439],[1134,3449],[1146,3448],[1147,3448],[1219,3448],[1227,3441],[1232,3445],[1236,3439],[1242,3347],[1245,3442],[1390,3441],[1437,3347],[1580,3341],[1600,3346],[1601,3363],[1674,3348],[1678,3349],[1723,3334],[1783,3351],[1819,3352],[1830,3350],[1859,3334],[1860,3334],[1861,3334],[1862,3334],[1863,3334],[1934,3349],[1938,3351],[1944,3399],[1976,3400],[2018,3401],[2045,3353],[2046,3353],[2047,3438],[2048,3439],[2050,3439],[2051,3440],[2052,3442],[2053,3443],[2054,3443],[2055,3444],[2056,3445],[2057,3445],[2058,3439],[2059,3438],[2061,3438],[2063,3447],[2066,3447],[2067,3447],[2068,3448],[2069,3439],[2070,3439],[2071,3442],[2072,3442],[2073,3353],[2074,3442],[2075,3442],[2078,3438],[2079,3438],[2080,3353],[2081,3439],[2082,3447],[2085,3438],[2086,3442],[2087,3442],[2088,3445],[2089,3445],[2090,3440],[2091,3445],[2092,3445],[2093,3445],[2097,3445],[2102,3445],[2103,3448],[2104,3445],[2105,3439],[2106,3449],[2107,3448],[2108,3448],[2111,3448],[2112,3445],[2113,3442],[2114,3442],[2120,3383],[2121,3383],[2122,3383],[2123,3383],[2165,3395],[2226,3344],[2232,3418],[2233,3412],[2236,3414],[2237,3419],[2240,3416],[2241,3418],[2242,3419],[2243,3410],[2244,3415],[2245,3417],[2668,3409],[2669,3409],[2670,3376],[2678,3426],[2685,3361],[2686,3357],[2688,3387],[2705,3427],[2707,3421],[2708,3421],[2709,3421],[2710,3428],[2712,3382],[2713,3382],[2719,3382],[2720,3382],[2725,3429],[2726,3387],[2729,3386],[2730,3386],[2731,3387],[2747,3376]],"b":[[558,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[559,"impl-Default-for-SpecialEq%3CArc%3Cdyn+SeriesBinaryUdf%3E%3E"],[560,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[635,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[636,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[637,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[695,"impl-Expr"],[696,"impl-PartialEq-for-Expr"],[699,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[700,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[786,"impl-Debug-for-Expr"],[787,"impl-Display-for-Expr"],[789,"impl-Display-for-Operator"],[790,"impl-Debug-for-Operator"],[792,"impl-Debug-for-BooleanFunction"],[793,"impl-Display-for-BooleanFunction"],[794,"impl-Debug-for-CategoricalFunction"],[795,"impl-Display-for-CategoricalFunction"],[796,"impl-Debug-for-TemporalFunction"],[797,"impl-Display-for-TemporalFunction"],[798,"impl-Debug-for-PowFunction"],[799,"impl-Display-for-PowFunction"],[800,"impl-Debug-for-StringFunction"],[801,"impl-Display-for-StringFunction"],[802,"impl-Debug-for-FunctionExpr"],[803,"impl-Display-for-FunctionExpr"],[830,"impl-From%3Ci8%3E-for-Expr"],[831,"impl-From%3Cu32%3E-for-Expr"],[832,"impl-From%3Cu64%3E-for-Expr"],[833,"impl-From%3Cf32%3E-for-Expr"],[835,"impl-From%3C%26str%3E-for-Expr"],[836,"impl-From%3Cu8%3E-for-Expr"],[837,"impl-From%3Cbool%3E-for-Expr"],[838,"impl-From%3CAggExpr%3E-for-Expr"],[839,"impl-From%3Ci64%3E-for-Expr"],[840,"impl-From%3Cu16%3E-for-Expr"],[841,"impl-From%3Cf64%3E-for-Expr"],[842,"impl-From%3Ci16%3E-for-Expr"],[843,"impl-From%3Ci32%3E-for-Expr"],[846,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[847,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[848,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[850,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[851,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[852,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[853,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[854,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[855,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[856,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[857,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[864,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[865,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[866,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[867,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[900,"impl-Hash-for-Expr"],[901,"impl-Expr"],[1184,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+SeriesUdf%3E%3E"],[1185,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[1186,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1959,"impl-Debug-for-RollingFunction"],[1960,"impl-Display-for-RollingFunction"],[1990,"impl-Debug-for-RollingFunctionBy"],[1991,"impl-Display-for-RollingFunctionBy"],[2032,"impl-Display-for-TrigonometricFunction"],[2033,"impl-Debug-for-TrigonometricFunction"],[2397,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2398,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2629,"impl-LazyCsvReader"],[2630,"impl-LazyFileListReader-for-LazyCsvReader"],[2631,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2632,"impl-LazyJsonLineReader"],[2649,"impl-LazyCsvReader"],[2650,"impl-LazyFileListReader-for-LazyCsvReader"],[2651,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2652,"impl-LazyJsonLineReader"],[2992,"impl-Debug-for-Duration"],[2993,"impl-Display-for-Duration"],[2997,"impl-Display-for-JoinType"],[2998,"impl-Debug-for-JoinType"],[2999,"impl-Debug-for-JoinValidation"],[3000,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAE0J7wAEABEAFwAPACgAAgAtABUARAAIAE4ABwBXAAIAXAAAAF4AFwB3ABoAkwACAJcABgCfAA4ArwAUAMUABADLACIA8QAJAPwADwANAQUAFQEXAC4BAwAzAQAANQEiAFkBAABeAQAAYQEBAGUBAABrAQAAbQEAAHgBAAB7AQAAggEBAIUBAQCKAQAAjQE9AM0BAADPAQAA0QEBANcBAADeAS8AEQIAACsCDAA5AlEAjQIAAI8CHgCvAgAAsQIAALcCAAC5AhAAywIpAP0CAAAAAwEABgMAAAwDAAAPAx4ALwMAAD8DAwBEAwgATwMCAFMDBwBhAwMAawMAAG8DAABxAwAAdgMBAHsDBQCEAwEAhwMNAJgDAQCcAx4A3wMCAOMDAAD3AwAA/wMAAAwEAAAPBAUAGAQAABsEAAArBAAALgQCADYEAgA6BAMAQwQBAEcEAgBNBAEAWQQAAFsEAQBiBAAAZAQAAGwEAQByBAEAdQQAAHoEAgCUBAUAmwQUALkEAADABAAAxwQAAMwEAADOBAAA0AQAANYEAADbBAAA3QQAAN8EAgDmBBgAAAUIAA0FPQBNBQAATwUgAHwFAAB+BR8AoQUBAKYFAACzBQAAtwUBALwFEwDTBQEA1gUBANkFAQDcBQYA5AVIAC4GAwAzBgIAOAYCAD0GAwBFBgEATgYCAFQGAABWBgAAYwYAAHIGAwB6Bi8BqwcBAK4HGgDKBwEAzQclAPQHAQD3BwYAAggAABAIAAAdCAEAJAgBAC8IAgAzCAMAPAgDAEQIHQBkCAMAaggLAHcIAwB+CAIAhAgAAIkIAgCOCAEArggDALoIAwDBCAAAwwgNANQIAADXCBQA7QgBAPIIEQAGCQEADAkAABMJAAAWCRgAMwkDADgJBgBVCQAAVwkBAFoJAABeCQEAagkCAHIJAAB0CQoAjgkBAJMJAQCWCQAAmAkAAJ0JAQCjCQMAqAkFALAJBAC9CQMAygkDAM8JAADTCQEA1gkAANgJAADjCQAA8AkBAPMJHQATCgkAIAoBACMKCQAuCgAAMAoAADgKAQBHCgEASgoAAE4KAQBbCgEAawoHAHYKAAB5CgEAfAoAAH4KAwCECgAAhwoAAIsKAgCSCgAAlAoGAJ4KAgCiCgAApQoIAK8KAgC0CgAAtgoAALwKEwDTCkoAIguLAK8LEwDJCwAA1gsAANgLEQDrCwAA7gsRABIMAQAVDAAAFwwAABoMAwAhDAUAKAwBACwMAAAuDAIAMgwBADYMAgA8DBUAUwykAA=="}],\
["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPKNNNNHNNENNNNHNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNHHNNNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","contains","contains_chunked","contains_chunked","ends_with","ends_with","ends_with_chunked","ends_with_chunked","list","scatter","starts_with","starts_with","starts_with_chunked","starts_with_chunked","strings","AsList","ListNameSpaceImpl","as_list","join_literal","join_literal","join_many","join_many","lst_arg_max","lst_arg_max","lst_arg_min","lst_arg_min","lst_concat","lst_concat","lst_get","lst_get","lst_join","lst_join","lst_lengths","lst_lengths","lst_max","lst_max","lst_mean","lst_mean","lst_median","lst_median","lst_min","lst_min","lst_n_unique","lst_n_unique","lst_reverse","lst_reverse","lst_shift","lst_shift","lst_slice","lst_slice","lst_sort","lst_sort","lst_std","lst_std","lst_sum","lst_sum","lst_unique","lst_unique","lst_unique_stable","lst_unique_stable","lst_var","lst_var","same_type","same_type","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","SeriesJoin","__clone_box","__clone_box","__clone_box","__clone_box","_coalesce_full_join","_create_left_df_from_slice","_create_left_df_from_slice","_finish_join","_finish_left_join","_finish_left_join","_full_join_from_series","_full_join_from_series","_join_suffix_name","_left_join_from_series","_left_join_from_series","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coalesce","coalesce","cross_join","cross_join","cross_join_dfs","cross_join_dfs","default","default","default","default_join_ids","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","full_join","hash","hash","hash","hash","hash_join_inner","hash_join_inner","hash_join_outer","hash_join_outer","how","init","init","init","init","inner_join","into","into","into","into","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","suffix","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","coalesce_series","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","ensure_sorted_arg","eq","equivalent","equivalent","equivalent","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","is_sorted","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts","value_counts"],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[23,"polars_ops::chunked_array::list"],[72,"polars_ops::chunked_array::strings"],[74,"polars_ops::frame"],[78,"polars_ops::frame::join"],[233,"polars_ops::prelude"],[235,"polars_ops::series"],[286,"polars_ops::chunked_array::binary"],[287,"polars_core::datatypes"],[288,"polars_ops::chunked_array::binary::namespace"],[289,"polars_ops::chunked_array::scatter"],[290,"polars_utils::index"],[291,"polars_core::series"],[292,"polars_error"],[293,"core::marker"],[294,"core::option"],[295,"core::iter::traits::collect"],[296,"polars_ops::chunked_array::list::namespace"],[297,"polars_core::datatypes::aliases"],[298,"polars_core::chunked_array::ops::sort::options"],[299,"polars_core::frame"],[300,"dyn_clone::sealed"],[301,"polars_ops::frame::join::hash_join"],[302,"polars_ops::frame::join::args"],[303,"alloc::string"],[304,"polars_ops::frame::join::cross_join"],[305,"core::fmt"],[306,"core::convert"],[307,"core::hash"],[308,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[309,"polars_arrow::array::primitive"],[310,"core::result"],[311,"core::any"],[312,"polars_ops::series::ops::arg_min_max"],[313,"polars_ops::series::ops"],[314,"polars_core::chunked_array::ops::search_sorted"],[315,"polars_ops::series::ops::various"],[316,"polars_ops::frame::join::general"],[317,"polars_ops::series::ops::clip"],[318,"polars_ops::series::ops::horizontal"],[319,"polars_ops::series::ops::index"],[320,"polars_ops::series::ops::negate"],[321,"polars_ops::series::ops::not"],[322,"polars_ops::series::ops::int_range"]],"i":[0,0,0,0,0,0,0,1,4,4,4,4,4,4,4,4,0,8,4,4,4,4,0,0,0,16,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,26,0,0,0,27,0,0,36,37,0,0,37,37,0,0,0,0,36,0,0,36,37,0,38,38,38,38,0,33,36,37,38,0,31,31,0,31,31,31,31,0,31,31,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,36,33,39,39,39,39,33,36,38,0,33,36,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,36,36,36,37,37,37,38,38,38,33,36,37,37,38,38,33,33,36,37,38,44,33,36,37,38,47,47,47,47,33,33,36,37,38,44,33,36,37,38,37,38,44,33,44,38,33,0,33,33,33,33,33,36,37,38,37,38,33,36,37,38,33,36,37,38,33,36,37,38,33,33,33,0,0,54,0,54,54,0,0,0,54,52,52,53,54,54,0,0,0,54,54,0,0,54,54,54,54,55,55,54,54,54,54,54,54,54,54,54,0,55,55,0,0,0,0,0,0,0,54,54,54,54,55,55],"f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}2211```{{{d{B`}}}{{d{Bb}}}}{{{d{Bd}}{d{Bf}}Bh}{{Af{Bj}}}}0{{{d{Bd}}{d{Bj}}Bh}{{Af{Bj}}}}0{{{d{Bd}}}Bl}000{{{d{Bd}}{d{{l{Ad}}}}}{{Af{Bb}}}}0{{{d{Bd}}BnBh}{{Af{Ad}}}}03322{{{d{Bd}}}{{Af{Ad}}}}0{{{d{Bd}}}Ad}00011{{{d{Bd}}}{{Af{Bl}}}}0{{{d{Bd}}}Bb}0{{{d{Bd}}{d{Ad}}}{{Af{Bb}}}}0{{{d{Bd}}BnC`}Bb}0{{{d{Bd}}Cb}{{Af{Bb}}}}0{{{d{Bd}}j}Ad}077{{{d{Bd}}}{{Af{Bb}}}}00011{{{d{Bd}}Bb}Bb}0`{{{d{Cd}}}{{d{Bj}}}}```{{{d{Cf}}}{{d{Ch}}}}```````````````````````{{{d{c}}Cj}Cl{}}000{{Ch{d{{l{{d{Bf}}}}}}{d{{l{{d{Bf}}}}}}{Al{{d{Bf}}}}{d{Ch}}}Ch}{{{d{Cn}}{d{{l{Ab}}}}BhBh}Ch}0`{{{d{Cn}}D`{d{Ch}}Db}{{Af{Ch}}}}0{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}Db}{{Af{Ch}}}}0{{{d{Bf}}{d{Bf}}}Dd}{{{d{Cn}}{d{Ch}}{d{Ad}}{d{Ad}}DbBh{Al{{d{{l{{d{Bf}}}}}}}}}{{Af{Ch}}}}0{{{d{c}}}{{d{e}}}{}{}}000{{{d{Dfc}}}{{d{Dfe}}}{}{}}000{{{d{Db}}}Db}{{{d{Dh}}}Dh}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{c}}{d{Dfe}}}Cl{}{}}000{{{d{Dh}}{d{Dj}}}Bh}`{{{d{Dn}}{d{Ch}}{Al{{d{Bf}}}}{Al{{E`{BnC`}}}}}{{Af{Ch}}}}0{{{d{Dn}}{d{Ch}}{Al{{E`{BnC`}}}}Bh}{{Af{{E`{ChCh}}}}}}0{{}Db}{{}Dh}{{}Dl}{{}Eb}{C`{{d{c}}}{}}000{C`{{d{Dfc}}}{}}000{C`Cl}000{{{d{Db}}{d{Db}}}Bh}{{{d{Dh}}{d{Dh}}}Bh}{{{d{Dj}}{d{Dj}}}Bh}{{{d{Dl}}{d{Dl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00000000000{{{d{Db}}{d{DfEd}}}Ef}{{{d{Dh}}{d{DfEd}}}Ef}{{{d{Dj}}{d{DfEd}}}Ef}0{{{d{Dl}}{d{DfEd}}}Ef}0{DjDb}{cc{}}000{{{d{Eh}}{d{Ch}}ee}{{Af{Ch}}}{{Ej{Bf}}}{{An{}{{Aj{c}}}}}}{{{d{Db}}{d{Dfc}}}ClEl}{{{d{Dh}}{d{Dfc}}}ClEl}{{{d{Dj}}{d{Dfc}}}ClEl}{{{d{Dl}}{d{Dfc}}}ClEl}{{{d{En}}{d{Ad}}DlBh}{{Af{{E`{F`Bh}}}}}}0{{{d{En}}{d{Ad}}DlBh}{{Af{{E`{{Fb{Ab}}{Fb{Ab}}}}}}}}0`{{}C`}0007{ce{}{}}000{{{d{Dj}}}Bh}{{{d{Dl}}{d{Dj}}}{{Af{Cl}}}}{{{d{Eh}}{d{Ch}}eeDb}{{Af{Ch}}}{{Ej{Bf}}}{{An{}{{Aj{c}}}}}}`;{{{d{Dl}}}Bh}>{{{d{Ch}}{d{Ch}}Bh}{{Af{D`}}}}{{{d{Db}}}Bh}`{{{d{Db}}}{{d{Bf}}}}`{{{d{c}}}e{}{}}000{{{d{c}}}Dd{}}0{c{{Fd{e}}}{}{}}0000000{{{d{c}}}Ff{}}000`{{DbDh}Db}{{Db{Al{Dd}}}Db}`````````{{{d{c}}Cj}Cl{}}{{{d{Fh}}}{{Al{C`}}}}0{{{d{Fj}}}{{d{Ad}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{Dfc}}}{{d{Dfe}}}{}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Fl}}}Fl}{{{d{c}}{d{Dfe}}}Cl{}{}}{{{d{{l{Ad}}}}}{{Af{Ad}}}}{{{d{Ad}}C`}{{Af{Bl}}}}{{}Fl}{C`{{d{c}}}{}}{C`{{d{Dfc}}}{}}{C`Cl}{{{d{Fn}}{d{Bf}}}{{Af{Cl}}}}0{{{d{Fl}}{d{Fl}}}Bh}{{{d{c}}{d{e}}}Bh{}{}}00{{{d{Fl}}{d{DfEd}}}{{Fd{ClG`}}}}{cc{}}{{{d{Fl}}{d{Dfc}}}ClEl}{{}C`}{ce{}{}}{{{d{Ad}}}Bh}{{{d{Fn}}Cb}{{Af{Bh}}}}0{{{d{{l{Ad}}}}}{{Af{{Al{Ad}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{Bn{d{Bf}}}{{Af{Ad}}}}2{{{d{c}}}e{}{}}{c{{Fd{e}}}{}{}}0{{{d{c}}}Ff{}}{{{d{Fn}}BhBhDdBh}{{Af{Ch}}}}0","D":"Eh","p":[[10,"AsBinary",4,286],[1,"reference"],[8,"BinaryChunked",287],[10,"BinaryNameSpaceImpl",4,288],[1,"u8"],[1,"slice"],[8,"BooleanChunked",287],[10,"ChunkedSet",4,289],[8,"IdxSize",290],[5,"Series",291],[8,"PolarsResult",292],[10,"Copy",293],[17,"Item"],[6,"Option",294],[10,"IntoIterator",295],[10,"AsList",23],[8,"ListChunked",287],[10,"ListNameSpaceImpl",23,296],[1,"str"],[1,"bool"],[8,"StringChunked",287],[8,"IdxCa",297],[1,"i64"],[1,"usize"],[5,"SortOptions",298],[10,"AsString",72],[10,"IntoDf",74],[5,"DataFrame",299],[5,"Private",300],[1,"unit"],[10,"JoinDispatch",78,301],[8,"LeftJoinIds",78,302],[5,"JoinArgs",78,302],[5,"String",303],[0,"mut"],[6,"JoinCoalesce",78,302],[6,"JoinType",78,302],[6,"JoinValidation",78,302],[10,"CrossJoin",78,304],[1,"tuple"],[8,"ChunkJoinOptIds",78,302],[5,"Formatter",305],[8,"Result",305],[10,"DataFrameJoinOps",78],[10,"AsRef",306],[10,"Hasher",307],[10,"SeriesJoin",78,308],[8,"InnerJoinIds",78,302],[5,"PrimitiveArray",309],[6,"Result",310],[5,"TypeId",311],[10,"ArgAgg",235,312],[10,"SeriesSealed",235,313],[6,"SearchSortedSide",235,314],[10,"SeriesMethods",235,315],[5,"Error",305]],"r":[[4,286],[5,288],[6,289],[24,296],[78,302],[79,302],[82,304],[86,302],[87,302],[88,302],[89,301],[91,302],[92,302],[95,302],[100,308],[105,316],[108,316],[113,316],[141,301],[233,78],[234,74],[236,312],[239,314],[240,315],[241,313],[248,317],[249,317],[250,317],[253,318],[254,319],[270,319],[273,318],[274,318],[275,318],[276,320],[277,321],[278,322],[279,318]],"b":[[172,"impl-Debug-for-JoinType"],[173,"impl-Display-for-JoinType"],[174,"impl-Debug-for-JoinValidation"],[175,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPIAEQAAAAgACwABAA8AAgAVAA8AKQA3AGUABQBtABkAiQAoALcADADJAAEAzAAAAM4AHgDuAAUA9gACAPwADgAMAQEAEgEKAA=="}],\
["polars_sql",{"t":"FNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNOONNNNNNOONONNNNOMNNNNNNNNNNNNNNNNNONNNMNNNNNONNNNOMNONNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","__clone_box","allow_group_aware","allow_rename","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cast_to_supertypes","changes_length","check_lengths","check_lengths","clone","clone","clone_into","clone_into","collect_groups","contains","contains","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt_str","from","from","from","get_udf","get_udf","hash","init","init","init","input_wildcard_expansion","into","into","into","is_groups_sensitive","pass_name_to_apply","register","register","returns_scalar","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","all_functions","all_keywords"],"q":[[0,"polars_sql"],[31,"polars_sql::function_registry"],[107,"polars_sql::keywords"],[109,"dyn_clone::sealed"],[110,"polars_sql::context"],[111,"polars_lazy::frame"],[112,"polars_error"],[113,"alloc::string"],[114,"polars_utils::aliases"],[115,"alloc::vec"],[116,"alloc::sync"],[117,"polars_plan::dsl::expr"],[118,"core::convert"],[119,"core::result"],[120,"core::any"],[121,"polars_plan::plans::options"],[122,"polars_plan::plans"],[123,"core::fmt"],[124,"polars_plan::dsl::udf"],[125,"core::option"],[126,"core::hash"],[127,"polars_sql::sql_expr"]],"i":[0,5,5,5,5,5,5,5,5,5,5,5,0,5,5,5,5,0,5,5,5,5,5,0,5,5,5,5,5,5,5,21,0,21,0,0,0,19,21,19,19,22,19,21,22,19,21,19,19,19,19,19,21,19,21,19,13,22,19,22,19,21,22,19,21,22,19,21,19,19,19,19,19,21,19,22,19,21,13,22,19,22,19,21,19,22,19,21,19,19,13,22,19,19,21,22,19,21,22,19,21,22,19,21,22,19,21,0,0],"f":"`{{{b{c}}d}f{}}{{{b{c}}}{{b{e}}}{}{}}{{{b{hc}}}{{b{he}}}{}{}}{{{b{j}}}j}{{{b{c}}{b{he}}}f{}{}}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{ce{}{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{{{b{c}}}e{}{}}{c{{Bb{e}}}{}{}}0{{{b{c}}}Bd{}}{{{b{hj}}{b{n}}}f}9{{j{Al{Aj}}}j}``````{{{b{c}}d}f{}}0``{{{b{c}}}{{b{e}}}{}{}}00{{{b{hc}}}{{b{he}}}{}{}}00``{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{{b{c}}{b{he}}}f{}{}}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{{b{c}}{b{e}}}Bh{}{}}00{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00`{ce{}{}}00{{{b{Bf}}}Bh}`{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}`{{{b{c}}}e{}{}}0{c{{Bb{e}}}{}{}}00000{{{b{c}}}Bd{}}00666{{}{{Ah{{b{n}}}}}}0","D":"Dh","p":[[1,"reference"],[5,"Private",109],[1,"unit"],[0,"mut"],[5,"SQLContext",0,110],[1,"usize"],[1,"str"],[5,"LazyFrame",111],[8,"PolarsResult",112],[5,"String",113],[8,"PlHashMap",114],[5,"Vec",115],[10,"FunctionRegistry",31],[5,"Arc",116],[6,"Expr",117],[10,"AsRef",118],[6,"Result",119],[5,"TypeId",120],[5,"FunctionOptions",31,121],[1,"bool"],[6,"Context",31,122],[5,"DefaultFunctionRegistry",31],[5,"Formatter",123],[5,"Error",123],[5,"UserDefinedFunction",124],[6,"Option",125],[10,"Hasher",126]],"r":[[0,110],[23,127],[32,122],[35,121]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEkADAACAAgAEAAAABkAAwAeAAAAIQAAACQAAAAmABEAOgARAFAABABaAAAAXAAAAF4ADQA="}],\
["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","DataPoint","Duration","Friday","Label","Left","Left","Monday","None","Right","Right","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","add_ms","add_ns","add_us","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","days","days_only","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","ensure_duration_matches_data_type","ensure_is_constant_duration","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","hash","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","new","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","truncate_impl","truncate_ms","truncate_ms","truncate_ns","truncate_ns","truncate_us","truncate_us","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[56,"polars_time::chunkedarray::string::infer"],[81,"polars_time::prelude"],[279,"polars_time::series"],[300,"chrono::naive::datetime"],[301,"polars_time::windows::duration"],[302,"polars_time::windows::group_by"],[303,"polars_core::datatypes::time_unit"],[304,"polars_arrow::legacy::time_zone"],[305,"core::option"],[306,"polars_core::chunked_array::logical::datetime"],[307,"polars_error"],[308,"polars_time::round"],[309,"polars_core::datatypes"],[310,"chrono::naive::time"],[311,"polars_core::chunked_array::logical::time"],[312,"polars_time::truncate"],[313,"polars_time::upsample"],[314,"polars_core::frame"],[315,"alloc::string"],[316,"polars_core::utils"],[317,"dyn_clone::sealed"],[318,"polars_time::chunkedarray::string::patterns"],[319,"core::fmt"],[320,"core::hash"],[321,"core::result"],[322,"core::any"],[323,"core::clone"],[324,"polars_time::windows::bounds"],[325,"polars_time::windows::window"],[326,"core::cmp"],[327,"polars_core::datatypes::dtype"],[328,"polars_core::frame::group_by::proxy"],[329,"alloc::vec"],[330,"core::ops::function"],[331,"polars_core::series"],[332,"polars_time::date_range"]],"i":[5,0,0,5,5,0,0,0,5,0,0,0,0,44,4,0,12,0,0,16,17,17,0,0,0,25,25,25,25,25,0,0,25,23,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,25,25,25,25,25,25,25,0,39,0,0,32,32,32,32,32,32,32,32,32,0,32,32,32,32,35,32,32,32,39,32,32,5,0,0,0,42,43,0,43,0,5,42,43,5,5,42,43,0,43,0,43,43,43,0,43,41,4,5,42,43,44,4,4,4,47,41,4,5,42,43,44,47,41,4,5,42,43,44,41,4,5,42,43,44,41,4,5,42,43,44,4,4,4,4,43,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,0,0,4,5,42,43,4,4,4,5,5,5,42,42,42,43,43,43,41,4,4,5,42,43,47,41,4,5,42,43,44,44,44,44,44,0,0,4,5,42,43,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,4,4,4,4,4,4,4,4,4,4,44,47,44,4,4,4,44,44,44,41,4,5,42,43,44,4,4,4,44,4,44,4,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,47,41,4,5,42,43,44,43,4,4,0,0,55,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57],"f":"```````````{{{d{b}}ffhjl{A`{{d{n}}}}}{{Ad{Ab}}}}{{{d{f}}}Af}```{{{d{Ah}}{d{Aj}}{A`{{d{n}}}}}{{Ad{Ah}}}}`{{{d{b}}AlAlhj}{{Ad{An}}}}{{{d{B`}}{A`{{d{n}}}}{d{Aj}}}{{Ad{B`}}}}{{{d{Bb}}c{d{b}}h}{{Ad{Bd}}}{{Bh{Bf}}}}0``````````{{{d{c}}Bj}Bl{}}{{{d{Bn}}}{{d{Aj}}}}{{{d{c}}}{{d{e}}}{}{}}{{{d{C`c}}}{{d{C`e}}}{}{}}{{{d{Cb}}}Cb}{{{d{c}}{d{C`e}}}Bl{}{}}{Cd{{d{c}}}{}}{Cd{{d{C`c}}}{}}{CdBl}{{{d{Cb}}{d{Cb}}}Af}{{{d{c}}{d{e}}}Af{}{}}00{{{d{Cb}}{d{C`Cf}}}Ch}{cc{}}{{{d{Cb}}{d{C`c}}}BlCj}`{{}Cd}{ce{}{}}{{{d{Cb}}{d{b}}}Af}{{{d{c}}}e{}{}}{c{{Cl{e}}}{}{}}0{{{d{c}}}Cn{}}````{{{d{c}}Bj}Bl{}}{{{d{c}}}{{d{e}}}{}{}}{{{d{C`c}}}{{d{C`e}}}{}{}}{{{d{{D`{c}}}}}{{D`{c}}}{DbDd}}{{{d{c}}{d{C`e}}}Bl{}{}}{Cd{{d{c}}}{}}{Cd{{d{C`c}}}{}}{CdBl}?{{{d{b}}}{{A`{Cb}}}}>=`{{{d{C`{D`{c}}}}{d{b}}}A`Dd}{{{d{C`Df}}{d{{Dj{Dh}}}}{A`{l}}}{{A`{c}}}{}}`=<{{c{A`{l}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}=<````````````````````````;;;;;;{{{d{h}}E`{A`{{d{n}}}}}{{Ad{E`}}}}00;;;;;;;:::::::{{{d{Eb}}}Eb}{{{d{h}}}h}{{{d{j}}}j}{{{d{Ed}}}Ed}{{{d{Ef}}}Ef}{{{d{Eh}}}Eh}>>>>>>{{{d{h}}{d{h}}}Ej}{{{d{c}}{d{e}}}Ej{}{}}{{{d{h}}}E`}{{{d{h}}}Af}{{}Ef}{Cd{{d{c}}}{}}000000{Cd{{d{C`c}}}{}}000000{CdBl}000000{{h{d{El}}{d{b}}}{{Ad{Bl}}}}{{h{A`{{d{b}}}}{d{b}}}{{Ad{Bl}}}}{{{d{h}}{d{h}}}Af}{{{d{j}}{d{j}}}Af}{{{d{Ed}}{d{Ed}}}Af}{{{d{Ef}}{d{Ef}}}Af}{{{d{c}}{d{e}}}Af{}{}}00000000000{{{d{Eb}}{d{C`Cf}}}Ch}{{{d{h}}{d{C`Cf}}}Ch}0{{{d{j}}{d{C`Cf}}}Ch}{{{d{Ed}}{d{C`Cf}}}Ch}{{{d{Ef}}{d{C`Cf}}}Ch}{cc{}}000000{{{d{Eh}}E`j{A`{{d{n}}}}}{{Ad{Eb}}}}00{{{d{Eh}}Ebjl{A`{{d{n}}}}Ef}{{Ad{En}}}}{{hh{d{{Dj{E`}}}}jl{A`{n}}}{{Ad{F`}}}}{{Eh{d{{Dj{E`}}}}jl{d{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{d{h}}{d{C`c}}}BlCj}{{{d{j}}{d{C`c}}}BlCj}{{{d{Ed}}{d{C`c}}}BlCj}{{{d{Ef}}{d{C`c}}}BlCj}{{}Cd}000000{ce{}{}}0000000{{{d{h}}{A`{{d{b}}}}}Af}{{{d{h}}}Af}0{{{d{h}}}E`}1{{hE`}h}1{hc{}}3{E`h}{{hhh}Eh}{{{d{C`En}}}{{A`{c}}}{}}`{{{d{b}}}h}`{{{d{h}}{d{h}}}{{A`{Ej}}}}{{{d{Eh}}E`{A`{{d{n}}}}}{{Ad{E`}}}}00{{{d{c}}}e{}{}}00000{{{d{c}}}Bf{}}{{{d{h}}E`{A`{{d{n}}}}ceg}{{Ad{E`}}}{{Fj{E`}{{Fh{E`}}}}}{{Fj{E`}{{Fh{f}}}}}{{Fj{f}{{Fh{E`}}}}}}{{{d{h}}E`{A`{{d{n}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}0000000000000{{{d{c}}}Cn{}}000000{{{d{Ef}}}{{A`{Fl}}}}?{{{d{h}}}Af}``{{{d{Fn}}}{{d{G`}}}}{{{d{Gb}}}{{Ad{Gd}}}}{{{d{Gb}}}{{Ad{Gf}}}}0{{{d{Gb}}}{{Ad{Gh}}}}22112{{{d{Gb}}}{{Ad{Gj}}}}322{{{d{Gb}}{d{b}}}{{Ad{G`}}}}0334","D":"Gd","p":[[1,"str"],[1,"reference"],[5,"NaiveDateTime",300],[5,"Duration",81,301],[6,"ClosedWindow",81,302],[6,"TimeUnit",303],[6,"Tz",304],[6,"Option",305],[8,"DatetimeChunked",306],[8,"PolarsResult",307],[1,"bool"],[10,"PolarsRound",0,308],[8,"StringChunked",309],[5,"NaiveTime",310],[8,"TimeChunked",311],[10,"PolarsTruncate",0,312],[10,"PolarsUpsample",0,313],[5,"DataFrame",314],[5,"String",315],[10,"IntoVec",316],[5,"Private",317],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,318],[1,"usize"],[5,"Formatter",319],[8,"Result",319],[10,"Hasher",320],[6,"Result",321],[5,"TypeId",322],[5,"DatetimeInfer",56],[10,"Clone",323],[10,"PolarsNumericType",309],[10,"StrpTimeParser",56],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",56],[1,"i64"],[5,"Bounds",81,324],[6,"Label",81,302],[6,"StartBy",81,302],[5,"Window",81,325],[6,"Ordering",326],[6,"DataType",327],[5,"BoundsIter",81,325],[8,"GroupsSlice",328],[8,"TimeZone",327],[5,"Vec",329],[1,"tuple"],[17,"Output"],[10,"Fn",330],[1,"u32"],[10,"AsSeries",279],[5,"Series",331],[10,"TemporalMethods",279],[8,"Int32Chunked",309],[8,"Int8Chunked",309],[8,"BooleanChunked",309],[8,"Int16Chunked",309]],"r":[[1,302],[2,301],[5,308],[6,312],[7,313],[9,325],[11,332],[12,332],[18,332],[22,24],[30,318],[82,324],[83,325],[84,302],[87,301],[89,302],[97,302],[99,279],[103,325],[166,301],[167,301],[201,302],[202,302]],"b":[[185,"impl-Display-for-Duration"],[186,"impl-Debug-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPIAFwAAAAkADQAFABQAAAAXABcAMAACADQAEABGAAEASQATAF4ACQBpAFUAxgAAAMgAAQDMAAoA3gABAOIAAgDmAAAA6QACAO0AAQDyAAgA/AAAAP4AAAAAARoAHwEAAA=="}],\
["polars_utils",{"t":"EECCCCCCCCCCCCCCQQQQCCCCCCCQCCCCCCCCCCQQCCRKMMRKIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNKMHHHHFKNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHKKKRKRNNNNMMMHKNNNNMMTRKMMHHFNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","fixedringbuffer","float","floor_divmod","fmt","format_list","format_list_container","format_smartstring","format_tuple","functions","hashing","idx_vec","index","io","iter","macros","matches_any_order","mem","min_max","nulls","ord","partitioned","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","new","new","new","new","new","with_capacity","with_capacity","with_capacity","with_capacity","with_capacity","Arena","Node","add","borrow","borrow","borrow_mut","borrow_mut","clear","clone","clone","clone_into","clone_into","cmp","compare","default","default","deref","deref","deref_mut","deref_mut","drop","drop","duplicate","eq","equivalent","equivalent","equivalent","fmt","fmt","from","from","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","init","into","into","is_empty","len","new","partial_cmp","pop","replace","replace_with","swap","take","to_owned","to_owned","try_from","try_from","try_into","try_into","try_replace_with","type_id","type_id","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","find_first_ge_index","find_first_gt_index","FastCachedFunc","FastFixedCache","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","drop","drop","eval","from","from","get","get_mut","get_or_insert_with","init","init","insert","into","into","new","new","to_owned","try_from","try_from","try_get_or_insert_with","try_into","try_into","type_id","type_id","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","from","from","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","drop","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","deref","deref_mut","dirty_hash","dirty_hash","drop","eq","equivalent","equivalent","equivalent","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","default","deref","deref","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extend","fmt","from","from","from","from_fallible_iter","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","borrow","borrow_mut","borrow_mut","check_bounds","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","drop","drop","eq","equivalent","equivalent","equivalent","extract","fmt","fmt","from","from","from","get","get_unchecked","idx","init","init","inner","inner_mut","into","into","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","null","null_count","store","to_idx","to_opt","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","create_file","open_file","EnumerateIdxTrait","FallibleIterator","FromFallibleIterator","IntoIterCopied","IntoIteratorCopied","OwnedItem","enumerate_idx","enumerate_idx","enumerate_u32","enumerate_u32","from_fallible_iter","get_result","into_iter","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deref_unchecked","drop","fmt","from","from","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","equivalent","equivalent","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[42,"polars_utils::abs_diff"],[46,"polars_utils::aliases"],[62,"polars_utils::arena"],[123,"polars_utils::atomic"],[143,"polars_utils::binary_search"],[145,"polars_utils::cache"],[181,"polars_utils::cell"],[201,"polars_utils::clmul"],[205,"polars_utils::contention_pool"],[220,"polars_utils::cpuid"],[222,"polars_utils::fixedringbuffer"],[245,"polars_utils::float"],[251,"polars_utils::floor_divmod"],[253,"polars_utils::functions"],[257,"polars_utils::hashing"],[289,"polars_utils::idx_vec"],[333,"polars_utils::index"],[395,"polars_utils::io"],[397,"polars_utils::iter"],[410,"polars_utils::mem"],[411,"polars_utils::min_max"],[418,"polars_utils::nulls"],[423,"polars_utils::ord"],[425,"polars_utils::partitioned"],[444,"polars_utils::slice"],[458,"polars_utils::sort"],[460,"polars_utils::sync"],[483,"polars_utils::sys"],[497,"polars_utils::total_ord"],[547,"polars_utils::unwrap"],[549,"polars_utils::vec"],[562,"num_traits"],[563,"core::cmp"],[564,"core::marker"],[565,"core::fmt"],[566,"core::clone"],[567,"core::option"],[568,"core::hash"],[569,"core::default"],[570,"core::ops::function"],[571,"core::result"],[572,"core::any"],[573,"core::borrow"],[574,"alloc::sync"],[575,"alloc::vec"],[576,"core::convert"],[577,"core::ops::range"],[578,"core::iter::traits::collect"],[579,"polars_utils::iter::fallible"],[580,"core::slice::iter"],[581,"polars_error"],[582,"std::fs"],[583,"std::path"],[584,"polars_utils::iter::enumerate_idx"],[585,"core::error"],[586,"core::iter::traits::iterator"],[587,"hashbrown::map"],[588,"core::mem::maybe_uninit"],[589,"core::slice::index"],[590,"num_traits::cast"],[591,"rayon_core::thread_pool"]],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,2,2,114,0,0,0,0,0,114,10,11,115,116,114,10,11,115,116,0,0,13,15,13,15,13,13,15,13,15,13,15,15,15,13,15,13,15,13,15,13,13,15,15,15,15,15,13,15,13,13,13,13,13,13,15,15,13,15,13,13,13,13,15,13,13,13,13,13,15,13,15,13,15,13,13,15,13,13,13,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,0,0,0,38,35,38,35,35,35,35,38,35,38,35,38,35,38,38,35,35,35,35,38,35,35,38,35,38,35,35,38,35,35,38,35,38,35,0,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,0,0,0,0,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,0,47,47,47,47,47,0,48,0,0,0,0,0,0,53,53,53,53,53,53,54,53,53,53,53,53,53,53,53,53,0,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,0,0,0,67,0,0,0,0,65,66,65,66,0,65,66,65,66,65,66,65,66,65,66,65,65,65,65,66,65,66,65,65,66,67,67,65,65,66,65,66,65,66,69,66,65,65,69,65,66,70,66,71,65,65,66,65,66,65,66,65,66,0,0,0,0,0,79,0,79,74,74,74,74,75,60,79,0,0,81,81,81,81,81,81,68,68,0,68,68,0,0,0,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,0,0,0,0,0,87,89,89,91,0,92,92,93,93,0,0,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,0,0,98,98,98,98,98,98,98,98,98,98,98,98,106,0,0,0,0,106,0,101,101,0,0,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,101,106,101,106,94,102,94,94,103,103,94,94,102,101,101,101,101,0,107,0,0,0,109,0,0,109,109,110,111,112,111,113],"f":"````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}``````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{{{Al{An}}{Al{An}}}Bd}{{{Al{c}}{Al{e}}}Bd{}{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{An}}{Al{AhBh}}}Bj}{{{Al{{Aj{c}}}}{Al{AhBh}}}Bjl}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Bl{An}}}{{Bl{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Bn{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`C`}{{}Ab}0{ce{}{}}0{{{Al{{Aj{c}}}}}Bf{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Bn{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Cb{{Cf{c}{{Cd{c}}}}}}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCb}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{Ah{Aj{c}}}}Ane}{{Ch{B``}}}Cb{{Cj{c}{{Cd{{Ch{c`}}}}}}}}{{{Al{c}}}Cl{}}0{{{Al{{Aj{c}}}}}Cn{}}{Ab{{Aj{c}}}{}}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{D`}}}D`}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}D`}{{{Al{D`}}}{{Al{c}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{AhD`}}}{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{ce{}{}}{{{Al{AhD`}}}B`}{AbD`}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Al{{Db{c}}}}c}AbDd}0``{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Df{ce}}}}}{{Df{ce}}}BbBb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{Df{ce}}}{DhDj}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Dl{ceg}}}}cBf}e{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{cc{}}0{{{Al{{Df{eg}}}}{Al{c}}}{{Bn{{Al{g}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}}{{Bn{{Al{Ahg}}}}}{DhDjDn}{{E`{c}}DhDj}{}}{{{Al{Ah{Df{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{E`{c}}DhDj}{}{{Cf{{Al{e}}}{{Cd{g}}}}}}{{}Ab}0{{{Al{Ah{Df{ce}}}}ce}{{Al{Ahe}}}{DhDj}{}}{ce{}{}}0{{gAb}{{Dl{ceg}}}{DhDjBb}j{{Cj{c}{{Cd{e}}}}}}{Ab{{Df{ce}}}{DhDj}{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{Ah{Df{eg}}}}{Al{c}}k}{{Ch{{Al{Ahg}}i}}}{}{{E`{c}}DhDj}{}{}{{Cf{{Al{e}}}{{Cd{{Ch{gi}}}}}}}}11{{{Al{c}}}Cl{}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{}{{Eb{c}}}Cb}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{c{{Eb{c}}}{}}{cc{}}{Edc{}}{{{Al{{Eb{c}}}}}{}Dn}{{{Al{Ah{Eb{c}}}}}{{Al{Ahc}}}Dn}{{}Ab}{ce{}{}}{{{Eb{c}}}c{}}7{{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{EfEf}Ef}0{EfEf}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Eh{c}}}}}cCb}>={Ab{{Eh{c}}}Cb}{{{Al{{Eh{c}}}}c}B`Cb}<<;{{}Bf}0`{{{Al{{Ej{c}}}}}{{El{{Al{{Db{c}}}}{Al{{Db{c}}}}}}}{}}:9{{{Al{{Ej{c}}}}}Ab{}}987{{{Al{Ah{Ej{c}}}}}B`{}}{{{Al{Ah{Ej{c}}}}cAb}Abj}8{{}Ab}{ce{}{}}{{{Al{{Ej{c}}}}}Bf{}}05{Ab{{Ej{c}}}{}}{{{Al{Ah{Ej{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{Ej{c}}}}c}{{Bn{B`}}}{}}8{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`<<{{{Al{En}}}Bf}=0`{{F`F`}{{El{F`F`}}}}{{{Fb{c}}e}{{Fb{c}}}Bb{{Cj{c}{{Cd{c}}}}}}{{{Al{{Db{e}}}}{Bn{Ab}}}{{Fd{c}}}Bb{{Ff{{Db{c}}}}}}{{AbAb{Fh{Ab}}}{{Fh{Ab}}}}{{{Fb{c}}g}{{Ch{{Fb{c}}e}}}Bb{}{{Cj{c}{{Cd{{Ch{ce}}}}}}}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{Fj}}}Fj}{{{Al{c}}{Al{Ahe}}}B`{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Fl}}}Ef}{{{Al{Fj}}}Ef}{AbB`}{{{Al{Fj}}{Al{Fj}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Fj}}{Al{AhBh}}}Bj}{cc{}}{{{Al{Fj}}{Al{Ahc}}}B`C`}{{EfAb}Ab}{{}Ab}{ce{}{}}{{{Al{Fj}}}Bf}{{{Bn{{Al{{Db{Fn}}}}}}Ef}Fj}2{{{Al{c}}}e{}{}}{{{Al{Fj}}}c{}};7{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Fjc{}}``{{{Al{Ah{G`{c}}}}}{{Al{Ah{Db{c}}}}}{}}0{{{Al{{G`{c}}}}}{{Al{{Db{c}}}}}{}}0{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{G`{c}}}}}Ab{}}{{{Al{{G`{c}}}}}{{G`{c}}}{}}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{}{{G`{c}}}{}}{{{Al{{G`{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{Ah{G`{c}}}}}B`{}}{{{Al{{G`{c}}}}{Al{{G`{c}}}}}BfGb}{{{Al{c}}{Al{e}}}Bf{}{}}00{{{Al{Ah{G`{c}}}}e}B`{}{{Gf{}{{Gd{c}}}}}}{{{Al{{G`{c}}}}{Al{AhBh}}}Bjl}{cc{}}{{{Fd{c}}}{{G`{c}}}{}}{{{Al{{Db{c}}}}}{{G`{c}}}Bb}{g{{Ch{ic}}}{}{}{{Gh{c}{{Gd{e}}}}}{}}{e{{G`{c}}}{}{{Gf{}{{Gd{c}}}}}}{{}Ab}{ce{}{}}{{{Al{{G`{c}}}}}Bf{}}{{{Al{{G`{c}}}}}{{Gj{c}}}{}}{{{Al{Ah{G`{c}}}}}{{Gl{c}}}{}}{{{Al{{G`{c}}}}}Ab{}}{{}{{G`{c}}}{}}{{{Al{Ah{G`{c}}}}}{{Bn{c}}}{}}{{{Al{Ah{G`{c}}}}c}B`{}}0{{{Al{Ah{G`{c}}}}Ab}B`{}}{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{Ab{{G`{c}}}{}}`````````{{{Al{c}}}{{Al{e}}}{}{}}0{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}0{{{Al{{Db{Gn}}}}Gn}{{H`{B`}}}}{{{Al{Hb}}}Hb}{{{Al{Hd}}}Hd}{{{Al{c}}{Al{Ahe}}}B`{}{}}0{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Hb}}{Al{Hb}}}Bf}{{{Al{c}}{Al{e}}}Bf{}{}}00{Hd{{El{GnGn}}}}{{{Al{Hb}}{Al{AhBh}}}Bj}{{{Al{Hd}}{Al{AhBh}}}Bj}{cc{}}{GnHb}1{{{Al{{Hf{}{{Gd{c}}}}}}Ab}cHh}0{{{Al{Hb}}}Gn}{{}Ab}0`{{{Al{AhHd}}}{{Al{AhEf}}}}{ce{}{}}0{{{Al{Hj}}}Bf}{{{Al{Hd}}}Bf}{{{Al{Hb}}}Bf}{{{Al{c}}}Bf{}}{{{Al{Hj}}}Ab}{{}Hb}{{}Hd}{{{Al{Hl}}}Ab}{{GnGn}Hd}{{HnEf}Gn}{{{Al{Hb}}}{{Bn{Gn}}}}{{{Al{c}}}e{}{}}0{c{{Ch{e}}}{}{}}000{{{Al{c}}}Cl{}}0{c{{H`{I`}}}{{Ff{Ib}}}}0``````{Id{{`{IdGn}}}}0{Id{{`{IdCn}}}}0{g{{Ch{Ifc}}}Ih{}{{Gh{c}{{Gd{e}}}}}}{{{Al{AhGh}}}{{Ch{B`c}}}Ih}{{{In{}{{Ij{c}}{Il{e}}}}}e{}{{J`{}{{Gd{c}}}}}}{{{Al{{Db{c}}}}}{{Al{Ah{Db{c}}}}}j}`{{JbJb}Jb}000{{{Al{Jb}}{Al{Jb}}}Bf}0```{{{Al{{Hh{}{{Jd{c}}}}}}}Bf{}}{{{Hh{}{{Jd{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hEn}}0`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Jf{ceg}}}}}{{Al{{Db{{Jh{ceg}}}}}}}{}{}{}}{{{Al{Ah{Jf{ceg}}}}}{{Al{Ah{Fd{{Jh{ceg}}}}}}}{}{}{}}{ce{}{}}{{{Fd{{Jh{ceg}}}}}{{Jf{ceg}}}{}{}{}}{{{Al{{Jf{ceg}}}}Ef}{{Jj{ceg}}}{}{}{}}{{{Al{{Jf{ceg}}}}Ef}{{El{{Jj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jf{ceg}}}}Ef}{{El{{Jl{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Jf{ceg}}}}Ef}{{Jl{ceg}}}{}{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}`````{{{Al{Jn}}}{{Al{{Db{{K`{c}}}}}}}{}}{{{Al{Kb}}e}Al{}{{Kd{{Db{c}}}}}}{{{Al{AhKb}}e}{{Al{Ah}}}{}{{Kd{{Db{c}}}}}}{{{Al{Kf}}}Bf}{{{Al{{Db{Fn}}}}}Ef}{{{Al{Kh}}}{{Bn{{Al{c}}}}}{}}0{{{Al{Kj}}{Fh{Ab}}}Kj}0{{e{Al{Ah{Fd{Fn}}}}Ab}{{Al{Ah{Db{g}}}}}{Klj}{{Gf{}{{Gd{c}}}}}{Knj}}{{{Al{L`}}{Al{{Db{{El{GnGn}}}}}}{Al{Ah{Fd{Gn}}}}}B`}`{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}{{{Al{{Lb{c}}}}}{{Lb{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Lb{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{Lb{c}}}}{Al{AhBh}}}Bjl}{cc{}}{{}{{Lb{c}}}{}}0{{{Al{{Lb{c}}}}}{}{}}{{}Ab}{ce{}{}}{{{Al{{Lb{c}}}}}Bf{}}44{{{Al{c}}}e{}{}}{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}``{{{Al{c}}}{{Al{e}}}{}{}}{{{Al{Ahc}}}{{Al{Ahe}}}{}{}}?><{{{Al{Ld}}}Ef};87443```````21{LfLf}{LhLh}{{{Al{{Lj{c}}}}}{{Lj{c}}}Bb}{{{Al{c}}{Al{Ahe}}}B`{}{}}{{{Al{{Lj{c}}}}{Al{{Lj{c}}}}}BdKl}{{{Al{c}}{Al{e}}}Bd{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{Lj{c}}}}}EfFl}{AbB`}{{{Al{{Lj{c}}}}{Al{{Lj{c}}}}}BfLl}{{{Al{c}}{Al{e}}}Bf{}{}}00{cc{}}{{{Al{{Lj{c}}}}{Al{{Lj{c}}}}}BfKl}0{{{Al{{Lj{c}}}}{Al{Ahe}}}B`LnC`}{{}Ab}{ce{}{}}{{{Al{{Lj{c}}}}}BfHh}447{{{Al{{Lj{c}}}}{Al{{Lj{c}}}}}{{Bn{Bd}}}Kl}2{{{Al{c}}}e{}{}}{{{Al{{Md{}{{M`{c}}{Mb{e}}}}}}}c{}{}}{{{Al{Kl}}{Al{Kl}}}Bd}{{{Al{Ll}}{Al{Ll}}}Bf}{{{Al{Kl}}{Al{Kl}}}Bf}0{{{Al{Ln}}{Al{Ahc}}}B`C`}{{{Al{{Db{Ln}}}}{Al{Ahc}}}B`C`}223{c{{Ch{e}}}{}{}}0{{{Al{c}}}Cl{}}{{{Lj{c}}}eHh{}}`{Mfc{}}``````{{{Al{{Mj{}{{Mh{c}}}}}}g}{{Fd{e}}}{}{}{{Cj{{Al{c}}}{{Cd{e}}}}}}{{{Mj{}{{Mh{c}}}}g}{{Fd{e}}}{}{}{{Cj{c}{{Cd{e}}}}}}{{{Al{AhMl}}Abc}B`j}{Mn{{El{AbAb}}}}{{{Al{AhN`}}c}B`{}}{{{Al{Mn}}}{{El{AbAb}}}}{{AbLh}Nb}","D":"Jb","p":[[17,"Abs"],[10,"AbsDiff",42],[10,"Num",562],[10,"PartialOrd",563],[10,"Copy",564],[10,"Debug",565],[10,"Send",564],[10,"Sync",564],[1,"usize"],[8,"PlHashMap",46],[8,"PlHashSet",46],[0,"mut"],[5,"Arena",62],[1,"reference"],[5,"Node",62],[1,"unit"],[10,"Clone",566],[6,"Ordering",563],[1,"bool"],[5,"Formatter",565],[8,"Result",565],[1,"array"],[6,"Option",567],[10,"Hasher",568],[10,"Default",569],[17,"Output"],[10,"FnOnce",570],[6,"Result",571],[10,"FnMut",570],[5,"TypeId",572],[1,"u32"],[5,"SyncCounter",123],[1,"slice"],[10,"Ord",563],[5,"FastFixedCache",145],[10,"Hash",568],[10,"Eq",563],[5,"FastCachedFunc",145],[10,"Sized",564],[10,"Borrow",573],[5,"SyncUnsafeCell",181],[1,"never"],[1,"u64"],[5,"LowContentionPool",205],[5,"FixedRingBuffer",222],[1,"tuple"],[10,"IsFloat",245],[10,"FloorDivMod",251],[5,"Arc",574],[5,"Vec",575],[10,"AsRef",576],[5,"Range",577],[5,"BytesHash",257],[10,"DirtyHash",257],[1,"u8"],[5,"UnitVec",289],[10,"PartialEq",563],[17,"Item"],[10,"IntoIterator",578],[10,"FallibleIterator",397,579],[5,"Iter",580],[5,"IterMut",580],[8,"IdxSize",333],[8,"PolarsResult",581],[5,"NullableIdxSize",333],[5,"ChunkId",333],[10,"Indexable",333],[10,"IsNull",418],[10,"Bounded",333],[10,"NullCount",333],[10,"ToIdx",333],[5,"File",582],[5,"Path",583],[10,"EnumerateIdxTrait",397,584],[10,"FromFallibleIterator",397,579],[10,"Error",585],[17,"OwnedItem"],[17,"IntoIterCopied"],[10,"IntoIteratorCopied",397],[10,"Iterator",586],[10,"MinMax",411],[17,"Inner"],[5,"PartitionedHashMap",425],[5,"HashMap",587],[5,"RawEntryBuilder",587],[5,"RawEntryBuilderMut",587],[10,"Slice2Uninit",444],[20,"MaybeUninit",588],[10,"GetSaferUnchecked",444],[10,"SliceIndex",589],[10,"SortedSlice",444],[10,"Extrema",444],[10,"SliceAble",444],[10,"TotalOrd",497],[10,"FromPrimitive",590],[5,"ThreadPool",591],[5,"SyncPtr",460],[5,"MemInfo",483],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",497],[10,"TotalEq",497],[10,"TotalHash",497],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",497],[10,"UnwrapUncheckedRelease",547],[17,"ItemIn"],[10,"ConvertVec",549],[10,"ResizeFaster",549],[10,"IntoRawParts",549],[10,"PushUnchecked",549],[10,"CapacityByFactor",549],[10,"InitHashMaps",46],[8,"PlIndexMap",46],[8,"PlIndexSet",46]],"r":[[0,333],[1,333],[397,584],[398,579],[399,579]],"b":[[313,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[314,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAOEBOgAAAAgACgBRAF4AAABgAAEAYwACAGgAEwB9AAkAiAAAAIsABACTAA4ApAAFAKwACQC3AAEAugACAL8AAADCAAAAxwAMANUAAQDYAAYA4QAGAOoAAADsAAMA8gADAPcACgADAQ4AEwECABcBCwAkARQAOgEEAEABBgBIASQAbgEAAHABAAByAQQAeQEXAJIBAACUAQYAnAELAKoBBQCxAQIAtQENAMUBBADLAQAAzgEFANUBAQDYAQMA3QEAAN8BBQDmAQQA7QEAAO8BAwD3AQMA/QELAAoCAwAPAhUAJgIEACwCAwAxAgEA"}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
